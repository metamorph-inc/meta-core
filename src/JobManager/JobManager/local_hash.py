import json
import sys
import random 
import string
import hmac
import hashlib
    
def get_random_key(size=6, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for x in range(size))
    
    
# test key only and generated by get_random_key
config = {
    'local_results_hash': 'KJSO5J9VBH4NN6MLK4ZGHOU3RVSBWG6MTR22PHZ3I8IP0F9CU8ZA9XS5CISG6Q1M'
}

def compute_local_hash(results_content):
    results_json = json.loads(results_content)
    key = config['local_results_hash'] + str(results_json["Time"])
    #print key
    
    digest = hmac.new(
        key, results_content, hashlib.sha512)
    #digest.update(results_json["Time"])
    #print digest.digest()
    #return digest.digest()
    print(results_content)
    print(digest.hexdigest())
    return digest.hexdigest()

def main():
    if len(sys.argv) < 2:
        print('First argument must be a json file')
        return 1
    
    filename = sys.argv[1]  
    #print filename
        
    with open(filename, 'rb') as f_p:
            
        result = { 'filename':filename }
        result['hash']=compute_local_hash(f_p.read())

        #print result
    
        #print '%(filename)s has a hash: %(hash)s' % result
    
    key = config['local_results_hash']
    results_content = 'The quick brown fox jumps over the lazy dog.'
    digest = hmac.new(
       key, results_content, hashlib.sha512)
    print(results_content)
    print(digest.hexdigest())
    
    return 0
    
if __name__ == '__main__':
    sys.exit(main())