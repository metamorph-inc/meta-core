// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MetaLinkMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MetaLinkMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace edu {
namespace vanderbilt {
namespace isis {
namespace meta {

namespace {

const ::google::protobuf::Descriptor* Edit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edit_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Edit_EditMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Action_ActionMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Interest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Interest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Alien_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Alien_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Alien_EncodingMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Payload_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Payload_reflection_ = NULL;
const ::google::protobuf::Descriptor* DatumType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DatumType_reflection_ = NULL;
const ::google::protobuf::Descriptor* Environment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Environment_reflection_ = NULL;
const ::google::protobuf::Descriptor* Notice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notice_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Notice_NoticeMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ComponentManifestNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentManifestNode_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ComponentManifestNode_NodeMode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MetaLinkMsg_2eproto() {
  protobuf_AddDesc_MetaLinkMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MetaLinkMsg.proto");
  GOOGLE_CHECK(file != NULL);
  Edit_descriptor_ = file->message_type(0);
  static const int Edit_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, editmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, notices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, actions_),
  };
  Edit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Edit_descriptor_,
      Edit::default_instance_,
      Edit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Edit));
  Edit_EditMode_descriptor_ = Edit_descriptor_->enum_type(0);
  Action_descriptor_ = file->message_type(1);
  static const int Action_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, actionmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, alien_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, environment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, notices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, manifest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, subjectid_),
  };
  Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Action_descriptor_,
      Action::default_instance_,
      Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Action));
  Action_ActionMode_descriptor_ = Action_descriptor_->enum_type(0);
  Interest_descriptor_ = file->message_type(2);
  static const int Interest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interest, topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interest, uid_),
  };
  Interest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Interest_descriptor_,
      Interest::default_instance_,
      Interest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Interest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Interest));
  Alien_descriptor_ = file->message_type(3);
  static const int Alien_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alien, encodingmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alien, encoded_),
  };
  Alien_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Alien_descriptor_,
      Alien::default_instance_,
      Alien_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alien, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alien, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Alien));
  Alien_EncodingMode_descriptor_ = Alien_descriptor_->enum_type(0);
  Payload_descriptor_ = file->message_type(4);
  static const int Payload_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, assemblies_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, components_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, constraints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, parameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, datums_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, connectors_),
  };
  Payload_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Payload_descriptor_,
      Payload::default_instance_,
      Payload_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Payload, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Payload));
  DatumType_descriptor_ = file->message_type(5);
  static const int DatumType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatumType, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatumType, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatumType, name_),
  };
  DatumType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DatumType_descriptor_,
      DatumType::default_instance_,
      DatumType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatumType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatumType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DatumType));
  Environment_descriptor_ = file->message_type(6);
  static const int Environment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environment, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environment, value_),
  };
  Environment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Environment_descriptor_,
      Environment::default_instance_,
      Environment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Environment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Environment));
  Notice_descriptor_ = file->message_type(7);
  static const int Notice_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, noticemode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, code_),
  };
  Notice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Notice_descriptor_,
      Notice::default_instance_,
      Notice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Notice));
  Notice_NoticeMode_descriptor_ = Notice_descriptor_->enum_type(0);
  ComponentManifestNode_descriptor_ = file->message_type(8);
  static const int ComponentManifestNode_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, nodemode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, cyphyparentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, componentgroup_),
  };
  ComponentManifestNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentManifestNode_descriptor_,
      ComponentManifestNode::default_instance_,
      ComponentManifestNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentManifestNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentManifestNode));
  ComponentManifestNode_NodeMode_descriptor_ = ComponentManifestNode_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MetaLinkMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Edit_descriptor_, &Edit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Action_descriptor_, &Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Interest_descriptor_, &Interest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Alien_descriptor_, &Alien::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Payload_descriptor_, &Payload::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DatumType_descriptor_, &DatumType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Environment_descriptor_, &Environment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Notice_descriptor_, &Notice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentManifestNode_descriptor_, &ComponentManifestNode::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MetaLinkMsg_2eproto() {
  delete Edit::default_instance_;
  delete Edit_reflection_;
  delete Action::default_instance_;
  delete Action_reflection_;
  delete Interest::default_instance_;
  delete Interest_reflection_;
  delete Alien::default_instance_;
  delete Alien_reflection_;
  delete Payload::default_instance_;
  delete Payload_reflection_;
  delete DatumType::default_instance_;
  delete DatumType_reflection_;
  delete Environment::default_instance_;
  delete Environment_reflection_;
  delete Notice::default_instance_;
  delete Notice_reflection_;
  delete ComponentManifestNode::default_instance_;
  delete ComponentManifestNode_reflection_;
}

void protobuf_AddDesc_MetaLinkMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::edu::vanderbilt::isis::meta::protobuf_AddDesc_AssemblyInterface_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021MetaLinkMsg.proto\022\030edu.vanderbilt.isis"
    ".meta\032\027AssemblyInterface.proto\"\344\002\n\004Edit\022"
    "5\n\004mode\030\001 \003(\0162\'.edu.vanderbilt.isis.meta"
    ".Edit.EditMode\022\?\n\010editMode\030\002 \001(\0162\'.edu.v"
    "anderbilt.isis.meta.Edit.EditMode:\004POST\022"
    "\014\n\004guid\030\005 \001(\t\022\r\n\005topic\030\006 \003(\t\022\016\n\006origin\030\n"
    " \003(\t\022\020\n\010sequence\030\013 \001(\r\0221\n\007notices\030\024 \003(\0132"
    " .edu.vanderbilt.isis.meta.Notice\0221\n\007act"
    "ions\030\025 \003(\0132 .edu.vanderbilt.isis.meta.Ac"
    "tion\"\?\n\010EditMode\022\014\n\010INTEREST\020\001\022\017\n\013DISINT"
    "EREST\020\002\022\010\n\004POST\020\003\022\n\n\006NOTICE\020\004\"\207\007\n\006Action"
    "\022H\n\nactionMode\030\001 \002(\0162+.edu.vanderbilt.is"
    "is.meta.Action.ActionMode:\007REPLACE\022\014\n\004gu"
    "id\030\002 \001(\t\022.\n\005alien\030\003 \001(\0132\037.edu.vanderbilt"
    ".isis.meta.Alien\0222\n\007payload\030\004 \001(\0132!.edu."
    "vanderbilt.isis.meta.Payload\022:\n\013environm"
    "ent\030\005 \003(\0132%.edu.vanderbilt.isis.meta.Env"
    "ironment\0221\n\007notices\030\006 \003(\0132 .edu.vanderbi"
    "lt.isis.meta.Notice\022A\n\010manifest\030\007 \003(\0132/."
    "edu.vanderbilt.isis.meta.ComponentManife"
    "stNode\022\021\n\tsubjectID\030\t \001(\t\"\373\003\n\nActionMode"
    "\022\n\n\006INSERT\020\001\022\013\n\007REPLACE\020\002\022\n\n\006UPDATE\020\003\022\n\n"
    "\006SELECT\020\004\022\t\n\005CLEAR\020\005\022\n\n\006SWITCH\020\006\022\030\n\024UPDA"
    "TE_CAD_COMPONENT\020\007\022\032\n\026CREATE_CYPHY_COMPO"
    "NENT\020\010\022\032\n\026UPDATE_CYPHY_COMPONENT\020\t\022\032\n\026CR"
    "EATE_ANALYSIS_POINTS\020\n\022!\n\035ADD_COMPONENT_"
    "TO_CYPHY_DESIGN\020\013\022\032\n\026SELECT_CYPHY_COMPON"
    "ENT\020\014\022!\n\035REMOVE_CYPHY_DESIGN_COMPONENT\020\r"
    "\022\032\n\026REQUEST_COMPONENT_LIST\020\016\022\n\n\006RESYNC\020\017"
    "\022\036\n\032ADD_CONNECTOR_TO_COMPONENT\020\020\022\027\n\023CREA"
    "TE_CYPHY_DESIGN\020\021\022\027\n\023UPDATE_CYPHY_DESIGN"
    "\020\022\022\037\n\033ADD_COMPONENT_TO_CAD_DESIGN\020\023\022\034\n\030C"
    "ONSTRAIN_COMPONENTS_CAD\020\024\022\034\n\030CONNECT_COM"
    "PONENTS_CYPHY\020\025\"&\n\010Interest\022\r\n\005topic\030\001 \003"
    "(\t\022\013\n\003uid\030\002 \003(\t\"\204\001\n\005Alien\022G\n\014encodingMod"
    "e\030\001 \002(\0162,.edu.vanderbilt.isis.meta.Alien"
    ".EncodingMode:\003XML\022\017\n\007encoded\030\002 \002(\014\"!\n\014E"
    "ncodingMode\022\007\n\003XML\020\001\022\010\n\004JSON\020\002\"\200\003\n\007Paylo"
    "ad\022<\n\nassemblies\030\001 \001(\0132(.edu.vanderbilt."
    "isis.meta.AssembliesType\022>\n\ncomponents\030\002"
    " \003(\0132*.edu.vanderbilt.isis.meta.CADCompo"
    "nentType\022=\n\013constraints\030\003 \003(\0132(.edu.vand"
    "erbilt.isis.meta.ConstraintType\022F\n\nparam"
    "eters\030\004 \003(\01322.edu.vanderbilt.isis.meta.P"
    "arametricParametersType\0223\n\006datums\030\005 \003(\0132"
    "#.edu.vanderbilt.isis.meta.DatumType\022;\n\n"
    "connectors\030\006 \003(\0132\'.edu.vanderbilt.isis.m"
    "eta.ConnectorType\"<\n\tDatumType\022\023\n\013compon"
    "entId\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\""
    "*\n\013Environment\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 "
    "\003(\t\"\265\001\n\006Notice\022D\n\nnoticeMode\030\001 \002(\0162+.edu"
    ".vanderbilt.isis.meta.Notice.NoticeMode:"
    "\003ACK\022\n\n\002id\030\002 \001(\t\022\013\n\003msg\030\003 \001(\t\022\014\n\004code\030\004 "
    "\001(\014\">\n\nNoticeMode\022\007\n\003ACK\020\000\022\010\n\004DONE\020\001\022\010\n\004"
    "WARN\020\003\022\t\n\005FAULT\020\004\022\010\n\004FAIL\020\006\"\340\001\n\025Componen"
    "tManifestNode\022U\n\010nodeMode\030\001 \002(\01628.edu.va"
    "nderbilt.isis.meta.ComponentManifestNode"
    ".NodeMode:\tCOMPONENT\022\014\n\004guid\030\002 \001(\t\022\014\n\004na"
    "me\030\003 \001(\t\022\025\n\rcyphyParentId\030\004 \001(\t\022\026\n\016compo"
    "nentGroup\030\005 \003(\t\"%\n\010NodeMode\022\n\n\006FOLDER\020\000\022"
    "\r\n\tCOMPONENT\020\001", 2414);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MetaLinkMsg.proto", &protobuf_RegisterTypes);
  Edit::default_instance_ = new Edit();
  Action::default_instance_ = new Action();
  Interest::default_instance_ = new Interest();
  Alien::default_instance_ = new Alien();
  Payload::default_instance_ = new Payload();
  DatumType::default_instance_ = new DatumType();
  Environment::default_instance_ = new Environment();
  Notice::default_instance_ = new Notice();
  ComponentManifestNode::default_instance_ = new ComponentManifestNode();
  Edit::default_instance_->InitAsDefaultInstance();
  Action::default_instance_->InitAsDefaultInstance();
  Interest::default_instance_->InitAsDefaultInstance();
  Alien::default_instance_->InitAsDefaultInstance();
  Payload::default_instance_->InitAsDefaultInstance();
  DatumType::default_instance_->InitAsDefaultInstance();
  Environment::default_instance_->InitAsDefaultInstance();
  Notice::default_instance_->InitAsDefaultInstance();
  ComponentManifestNode::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MetaLinkMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MetaLinkMsg_2eproto {
  StaticDescriptorInitializer_MetaLinkMsg_2eproto() {
    protobuf_AddDesc_MetaLinkMsg_2eproto();
  }
} static_descriptor_initializer_MetaLinkMsg_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Edit_EditMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edit_EditMode_descriptor_;
}
bool Edit_EditMode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Edit_EditMode Edit::INTEREST;
const Edit_EditMode Edit::DISINTEREST;
const Edit_EditMode Edit::POST;
const Edit_EditMode Edit::NOTICE;
const Edit_EditMode Edit::EditMode_MIN;
const Edit_EditMode Edit::EditMode_MAX;
const int Edit::EditMode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Edit::kModeFieldNumber;
const int Edit::kEditModeFieldNumber;
const int Edit::kGuidFieldNumber;
const int Edit::kTopicFieldNumber;
const int Edit::kOriginFieldNumber;
const int Edit::kSequenceFieldNumber;
const int Edit::kNoticesFieldNumber;
const int Edit::kActionsFieldNumber;
#endif  // !_MSC_VER

Edit::Edit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Edit)
}

void Edit::InitAsDefaultInstance() {
}

Edit::Edit(const Edit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Edit)
}

void Edit::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  editmode_ = 3;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequence_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Edit::~Edit() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Edit)
  SharedDtor();
}

void Edit::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (this != default_instance_) {
  }
}

void Edit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edit_descriptor_;
}

const Edit& Edit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Edit* Edit::default_instance_ = NULL;

Edit* Edit::New() const {
  return new Edit;
}

void Edit::Clear() {
  if (_has_bits_[0 / 32] & 38) {
    editmode_ = 3;
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    sequence_ = 0u;
  }
  mode_.Clear();
  topic_.Clear();
  origin_.Clear();
  notices_.Clear();
  actions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Edit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Edit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.Edit.EditMode mode = 1;
      case 1: {
        if (tag == 8) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::Edit_EditMode_IsValid(value)) {
            add_mode(static_cast< ::edu::vanderbilt::isis::meta::Edit_EditMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::edu::vanderbilt::isis::meta::Edit_EditMode_IsValid,
                 this->mutable_mode())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_mode;
        if (input->ExpectTag(16)) goto parse_editMode;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.Edit.EditMode editMode = 2 [default = POST];
      case 2: {
        if (tag == 16) {
         parse_editMode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::Edit_EditMode_IsValid(value)) {
            set_editmode(static_cast< ::edu::vanderbilt::isis::meta::Edit_EditMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_guid;
        break;
      }

      // optional string guid = 5;
      case 5: {
        if (tag == 42) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_topic;
        break;
      }

      // repeated string topic = 6;
      case 6: {
        if (tag == 50) {
         parse_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->topic(this->topic_size() - 1).data(),
            this->topic(this->topic_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "topic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_topic;
        if (input->ExpectTag(82)) goto parse_origin;
        break;
      }

      // repeated string origin = 10;
      case 10: {
        if (tag == 82) {
         parse_origin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_origin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->origin(this->origin_size() - 1).data(),
            this->origin(this->origin_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "origin");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_origin;
        if (input->ExpectTag(88)) goto parse_sequence;
        break;
      }

      // optional uint32 sequence = 11;
      case 11: {
        if (tag == 88) {
         parse_sequence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_)));
          set_has_sequence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_notices;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.Notice notices = 20;
      case 20: {
        if (tag == 162) {
         parse_notices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_notices;
        if (input->ExpectTag(170)) goto parse_actions;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.Action actions = 21;
      case 21: {
        if (tag == 170) {
         parse_actions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_actions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Edit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Edit)
  return false;
#undef DO_
}

void Edit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Edit)
  // repeated .edu.vanderbilt.isis.meta.Edit.EditMode mode = 1;
  for (int i = 0; i < this->mode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(i), output);
  }

  // optional .edu.vanderbilt.isis.meta.Edit.EditMode editMode = 2 [default = POST];
  if (has_editmode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->editmode(), output);
  }

  // optional string guid = 5;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->guid(), output);
  }

  // repeated string topic = 6;
  for (int i = 0; i < this->topic_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->topic(i).data(), this->topic(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "topic");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->topic(i), output);
  }

  // repeated string origin = 10;
  for (int i = 0; i < this->origin_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->origin(i).data(), this->origin(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "origin");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->origin(i), output);
  }

  // optional uint32 sequence = 11;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->sequence(), output);
  }

  // repeated .edu.vanderbilt.isis.meta.Notice notices = 20;
  for (int i = 0; i < this->notices_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->notices(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.Action actions = 21;
  for (int i = 0; i < this->actions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->actions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Edit)
}

::google::protobuf::uint8* Edit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Edit)
  // repeated .edu.vanderbilt.isis.meta.Edit.EditMode mode = 1;
  for (int i = 0; i < this->mode_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(i), target);
  }

  // optional .edu.vanderbilt.isis.meta.Edit.EditMode editMode = 2 [default = POST];
  if (has_editmode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->editmode(), target);
  }

  // optional string guid = 5;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->guid(), target);
  }

  // repeated string topic = 6;
  for (int i = 0; i < this->topic_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic(i).data(), this->topic(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "topic");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->topic(i), target);
  }

  // repeated string origin = 10;
  for (int i = 0; i < this->origin_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->origin(i).data(), this->origin(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "origin");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->origin(i), target);
  }

  // optional uint32 sequence = 11;
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->sequence(), target);
  }

  // repeated .edu.vanderbilt.isis.meta.Notice notices = 20;
  for (int i = 0; i < this->notices_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->notices(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.Action actions = 21;
  for (int i = 0; i < this->actions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->actions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Edit)
  return target;
}

int Edit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .edu.vanderbilt.isis.meta.Edit.EditMode editMode = 2 [default = POST];
    if (has_editmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->editmode());
    }

    // optional string guid = 5;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional uint32 sequence = 11;
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sequence());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.Edit.EditMode mode = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->mode_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->mode(i));
    }
    total_size += 1 * this->mode_size() + data_size;
  }

  // repeated string topic = 6;
  total_size += 1 * this->topic_size();
  for (int i = 0; i < this->topic_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topic(i));
  }

  // repeated string origin = 10;
  total_size += 1 * this->origin_size();
  for (int i = 0; i < this->origin_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->origin(i));
  }

  // repeated .edu.vanderbilt.isis.meta.Notice notices = 20;
  total_size += 2 * this->notices_size();
  for (int i = 0; i < this->notices_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->notices(i));
  }

  // repeated .edu.vanderbilt.isis.meta.Action actions = 21;
  total_size += 2 * this->actions_size();
  for (int i = 0; i < this->actions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Edit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Edit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Edit::MergeFrom(const Edit& from) {
  GOOGLE_CHECK_NE(&from, this);
  mode_.MergeFrom(from.mode_);
  topic_.MergeFrom(from.topic_);
  origin_.MergeFrom(from.origin_);
  notices_.MergeFrom(from.notices_);
  actions_.MergeFrom(from.actions_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_editmode()) {
      set_editmode(from.editmode());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Edit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edit::CopyFrom(const Edit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edit::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->notices())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->actions())) return false;
  return true;
}

void Edit::Swap(Edit* other) {
  if (other != this) {
    mode_.Swap(&other->mode_);
    std::swap(editmode_, other->editmode_);
    std::swap(guid_, other->guid_);
    topic_.Swap(&other->topic_);
    origin_.Swap(&other->origin_);
    std::swap(sequence_, other->sequence_);
    notices_.Swap(&other->notices_);
    actions_.Swap(&other->actions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Edit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edit_descriptor_;
  metadata.reflection = Edit_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Action_ActionMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_ActionMode_descriptor_;
}
bool Action_ActionMode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Action_ActionMode Action::INSERT;
const Action_ActionMode Action::REPLACE;
const Action_ActionMode Action::UPDATE;
const Action_ActionMode Action::SELECT;
const Action_ActionMode Action::CLEAR;
const Action_ActionMode Action::SWITCH;
const Action_ActionMode Action::UPDATE_CAD_COMPONENT;
const Action_ActionMode Action::CREATE_CYPHY_COMPONENT;
const Action_ActionMode Action::UPDATE_CYPHY_COMPONENT;
const Action_ActionMode Action::CREATE_ANALYSIS_POINTS;
const Action_ActionMode Action::ADD_COMPONENT_TO_CYPHY_DESIGN;
const Action_ActionMode Action::SELECT_CYPHY_COMPONENT;
const Action_ActionMode Action::REMOVE_CYPHY_DESIGN_COMPONENT;
const Action_ActionMode Action::REQUEST_COMPONENT_LIST;
const Action_ActionMode Action::RESYNC;
const Action_ActionMode Action::ADD_CONNECTOR_TO_COMPONENT;
const Action_ActionMode Action::CREATE_CYPHY_DESIGN;
const Action_ActionMode Action::UPDATE_CYPHY_DESIGN;
const Action_ActionMode Action::ADD_COMPONENT_TO_CAD_DESIGN;
const Action_ActionMode Action::CONSTRAIN_COMPONENTS_CAD;
const Action_ActionMode Action::CONNECT_COMPONENTS_CYPHY;
const Action_ActionMode Action::ActionMode_MIN;
const Action_ActionMode Action::ActionMode_MAX;
const int Action::ActionMode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Action::kActionModeFieldNumber;
const int Action::kGuidFieldNumber;
const int Action::kAlienFieldNumber;
const int Action::kPayloadFieldNumber;
const int Action::kEnvironmentFieldNumber;
const int Action::kNoticesFieldNumber;
const int Action::kManifestFieldNumber;
const int Action::kSubjectIDFieldNumber;
#endif  // !_MSC_VER

Action::Action()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Action)
}

void Action::InitAsDefaultInstance() {
  alien_ = const_cast< ::edu::vanderbilt::isis::meta::Alien*>(&::edu::vanderbilt::isis::meta::Alien::default_instance());
  payload_ = const_cast< ::edu::vanderbilt::isis::meta::Payload*>(&::edu::vanderbilt::isis::meta::Payload::default_instance());
}

Action::Action(const Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Action)
}

void Action::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  actionmode_ = 2;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alien_ = NULL;
  payload_ = NULL;
  subjectid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (subjectid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subjectid_;
  }
  if (this != default_instance_) {
    delete alien_;
    delete payload_;
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}

const Action& Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Action* Action::default_instance_ = NULL;

Action* Action::New() const {
  return new Action;
}

void Action::Clear() {
  if (_has_bits_[0 / 32] & 143) {
    actionmode_ = 2;
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_alien()) {
      if (alien_ != NULL) alien_->::edu::vanderbilt::isis::meta::Alien::Clear();
    }
    if (has_payload()) {
      if (payload_ != NULL) payload_->::edu::vanderbilt::isis::meta::Payload::Clear();
    }
    if (has_subjectid()) {
      if (subjectid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subjectid_->clear();
      }
    }
  }
  environment_.Clear();
  notices_.Clear();
  manifest_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .edu.vanderbilt.isis.meta.Action.ActionMode actionMode = 1 [default = REPLACE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::Action_ActionMode_IsValid(value)) {
            set_actionmode(static_cast< ::edu::vanderbilt::isis::meta::Action_ActionMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guid;
        break;
      }

      // optional string guid = 2;
      case 2: {
        if (tag == 18) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_alien;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.Alien alien = 3;
      case 3: {
        if (tag == 26) {
         parse_alien:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alien()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_payload;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.Payload payload = 4;
      case 4: {
        if (tag == 34) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_environment;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.Environment environment = 5;
      case 5: {
        if (tag == 42) {
         parse_environment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_environment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_environment;
        if (input->ExpectTag(50)) goto parse_notices;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.Notice notices = 6;
      case 6: {
        if (tag == 50) {
         parse_notices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_notices;
        if (input->ExpectTag(58)) goto parse_manifest;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ComponentManifestNode manifest = 7;
      case 7: {
        if (tag == 58) {
         parse_manifest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_manifest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_manifest;
        if (input->ExpectTag(74)) goto parse_subjectID;
        break;
      }

      // optional string subjectID = 9;
      case 9: {
        if (tag == 74) {
         parse_subjectID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subjectid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subjectid().data(), this->subjectid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subjectid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Action)
  // required .edu.vanderbilt.isis.meta.Action.ActionMode actionMode = 1 [default = REPLACE];
  if (has_actionmode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->actionmode(), output);
  }

  // optional string guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  // optional .edu.vanderbilt.isis.meta.Alien alien = 3;
  if (has_alien()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->alien(), output);
  }

  // optional .edu.vanderbilt.isis.meta.Payload payload = 4;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->payload(), output);
  }

  // repeated .edu.vanderbilt.isis.meta.Environment environment = 5;
  for (int i = 0; i < this->environment_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->environment(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.Notice notices = 6;
  for (int i = 0; i < this->notices_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->notices(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ComponentManifestNode manifest = 7;
  for (int i = 0; i < this->manifest_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->manifest(i), output);
  }

  // optional string subjectID = 9;
  if (has_subjectid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subjectid().data(), this->subjectid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subjectid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->subjectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Action)
}

::google::protobuf::uint8* Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Action)
  // required .edu.vanderbilt.isis.meta.Action.ActionMode actionMode = 1 [default = REPLACE];
  if (has_actionmode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->actionmode(), target);
  }

  // optional string guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  // optional .edu.vanderbilt.isis.meta.Alien alien = 3;
  if (has_alien()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->alien(), target);
  }

  // optional .edu.vanderbilt.isis.meta.Payload payload = 4;
  if (has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->payload(), target);
  }

  // repeated .edu.vanderbilt.isis.meta.Environment environment = 5;
  for (int i = 0; i < this->environment_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->environment(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.Notice notices = 6;
  for (int i = 0; i < this->notices_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->notices(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ComponentManifestNode manifest = 7;
  for (int i = 0; i < this->manifest_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->manifest(i), target);
  }

  // optional string subjectID = 9;
  if (has_subjectid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subjectid().data(), this->subjectid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subjectid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->subjectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Action)
  return target;
}

int Action::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .edu.vanderbilt.isis.meta.Action.ActionMode actionMode = 1 [default = REPLACE];
    if (has_actionmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->actionmode());
    }

    // optional string guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional .edu.vanderbilt.isis.meta.Alien alien = 3;
    if (has_alien()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alien());
    }

    // optional .edu.vanderbilt.isis.meta.Payload payload = 4;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->payload());
    }

    // optional string subjectID = 9;
    if (has_subjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subjectid());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.Environment environment = 5;
  total_size += 1 * this->environment_size();
  for (int i = 0; i < this->environment_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->environment(i));
  }

  // repeated .edu.vanderbilt.isis.meta.Notice notices = 6;
  total_size += 1 * this->notices_size();
  for (int i = 0; i < this->notices_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->notices(i));
  }

  // repeated .edu.vanderbilt.isis.meta.ComponentManifestNode manifest = 7;
  total_size += 1 * this->manifest_size();
  for (int i = 0; i < this->manifest_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->manifest(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  environment_.MergeFrom(from.environment_);
  notices_.MergeFrom(from.notices_);
  manifest_.MergeFrom(from.manifest_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_actionmode()) {
      set_actionmode(from.actionmode());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_alien()) {
      mutable_alien()->::edu::vanderbilt::isis::meta::Alien::MergeFrom(from.alien());
    }
    if (from.has_payload()) {
      mutable_payload()->::edu::vanderbilt::isis::meta::Payload::MergeFrom(from.payload());
    }
    if (from.has_subjectid()) {
      set_subjectid(from.subjectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_alien()) {
    if (!this->alien().IsInitialized()) return false;
  }
  if (has_payload()) {
    if (!this->payload().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->environment())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->notices())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->manifest())) return false;
  return true;
}

void Action::Swap(Action* other) {
  if (other != this) {
    std::swap(actionmode_, other->actionmode_);
    std::swap(guid_, other->guid_);
    std::swap(alien_, other->alien_);
    std::swap(payload_, other->payload_);
    environment_.Swap(&other->environment_);
    notices_.Swap(&other->notices_);
    manifest_.Swap(&other->manifest_);
    std::swap(subjectid_, other->subjectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_descriptor_;
  metadata.reflection = Action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Interest::kTopicFieldNumber;
const int Interest::kUidFieldNumber;
#endif  // !_MSC_VER

Interest::Interest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Interest)
}

void Interest::InitAsDefaultInstance() {
}

Interest::Interest(const Interest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Interest)
}

void Interest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Interest::~Interest() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Interest)
  SharedDtor();
}

void Interest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Interest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Interest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Interest_descriptor_;
}

const Interest& Interest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Interest* Interest::default_instance_ = NULL;

Interest* Interest::New() const {
  return new Interest;
}

void Interest::Clear() {
  topic_.Clear();
  uid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Interest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Interest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string topic = 1;
      case 1: {
        if (tag == 10) {
         parse_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->topic(this->topic_size() - 1).data(),
            this->topic(this->topic_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "topic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_topic;
        if (input->ExpectTag(18)) goto parse_uid;
        break;
      }

      // repeated string uid = 2;
      case 2: {
        if (tag == 18) {
         parse_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uid(this->uid_size() - 1).data(),
            this->uid(this->uid_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_uid;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Interest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Interest)
  return false;
#undef DO_
}

void Interest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Interest)
  // repeated string topic = 1;
  for (int i = 0; i < this->topic_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->topic(i).data(), this->topic(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "topic");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->topic(i), output);
  }

  // repeated string uid = 2;
  for (int i = 0; i < this->uid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->uid(i).data(), this->uid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "uid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Interest)
}

::google::protobuf::uint8* Interest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Interest)
  // repeated string topic = 1;
  for (int i = 0; i < this->topic_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->topic(i).data(), this->topic(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "topic");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->topic(i), target);
  }

  // repeated string uid = 2;
  for (int i = 0; i < this->uid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uid(i).data(), this->uid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->uid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Interest)
  return target;
}

int Interest::ByteSize() const {
  int total_size = 0;

  // repeated string topic = 1;
  total_size += 1 * this->topic_size();
  for (int i = 0; i < this->topic_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topic(i));
  }

  // repeated string uid = 2;
  total_size += 1 * this->uid_size();
  for (int i = 0; i < this->uid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->uid(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Interest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Interest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Interest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Interest::MergeFrom(const Interest& from) {
  GOOGLE_CHECK_NE(&from, this);
  topic_.MergeFrom(from.topic_);
  uid_.MergeFrom(from.uid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Interest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interest::CopyFrom(const Interest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interest::IsInitialized() const {

  return true;
}

void Interest::Swap(Interest* other) {
  if (other != this) {
    topic_.Swap(&other->topic_);
    uid_.Swap(&other->uid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Interest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Interest_descriptor_;
  metadata.reflection = Interest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Alien_EncodingMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Alien_EncodingMode_descriptor_;
}
bool Alien_EncodingMode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Alien_EncodingMode Alien::XML;
const Alien_EncodingMode Alien::JSON;
const Alien_EncodingMode Alien::EncodingMode_MIN;
const Alien_EncodingMode Alien::EncodingMode_MAX;
const int Alien::EncodingMode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Alien::kEncodingModeFieldNumber;
const int Alien::kEncodedFieldNumber;
#endif  // !_MSC_VER

Alien::Alien()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Alien)
}

void Alien::InitAsDefaultInstance() {
}

Alien::Alien(const Alien& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Alien)
}

void Alien::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  encodingmode_ = 1;
  encoded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Alien::~Alien() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Alien)
  SharedDtor();
}

void Alien::SharedDtor() {
  if (encoded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encoded_;
  }
  if (this != default_instance_) {
  }
}

void Alien::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Alien::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Alien_descriptor_;
}

const Alien& Alien::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Alien* Alien::default_instance_ = NULL;

Alien* Alien::New() const {
  return new Alien;
}

void Alien::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    encodingmode_ = 1;
    if (has_encoded()) {
      if (encoded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        encoded_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Alien::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Alien)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .edu.vanderbilt.isis.meta.Alien.EncodingMode encodingMode = 1 [default = XML];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::Alien_EncodingMode_IsValid(value)) {
            set_encodingmode(static_cast< ::edu::vanderbilt::isis::meta::Alien_EncodingMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_encoded;
        break;
      }

      // required bytes encoded = 2;
      case 2: {
        if (tag == 18) {
         parse_encoded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encoded()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Alien)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Alien)
  return false;
#undef DO_
}

void Alien::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Alien)
  // required .edu.vanderbilt.isis.meta.Alien.EncodingMode encodingMode = 1 [default = XML];
  if (has_encodingmode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encodingmode(), output);
  }

  // required bytes encoded = 2;
  if (has_encoded()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->encoded(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Alien)
}

::google::protobuf::uint8* Alien::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Alien)
  // required .edu.vanderbilt.isis.meta.Alien.EncodingMode encodingMode = 1 [default = XML];
  if (has_encodingmode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encodingmode(), target);
  }

  // required bytes encoded = 2;
  if (has_encoded()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->encoded(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Alien)
  return target;
}

int Alien::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .edu.vanderbilt.isis.meta.Alien.EncodingMode encodingMode = 1 [default = XML];
    if (has_encodingmode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->encodingmode());
    }

    // required bytes encoded = 2;
    if (has_encoded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encoded());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Alien::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Alien* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Alien*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Alien::MergeFrom(const Alien& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_encodingmode()) {
      set_encodingmode(from.encodingmode());
    }
    if (from.has_encoded()) {
      set_encoded(from.encoded());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Alien::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alien::CopyFrom(const Alien& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alien::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Alien::Swap(Alien* other) {
  if (other != this) {
    std::swap(encodingmode_, other->encodingmode_);
    std::swap(encoded_, other->encoded_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Alien::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Alien_descriptor_;
  metadata.reflection = Alien_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Payload::kAssembliesFieldNumber;
const int Payload::kComponentsFieldNumber;
const int Payload::kConstraintsFieldNumber;
const int Payload::kParametersFieldNumber;
const int Payload::kDatumsFieldNumber;
const int Payload::kConnectorsFieldNumber;
#endif  // !_MSC_VER

Payload::Payload()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Payload)
}

void Payload::InitAsDefaultInstance() {
  assemblies_ = const_cast< ::edu::vanderbilt::isis::meta::AssembliesType*>(&::edu::vanderbilt::isis::meta::AssembliesType::default_instance());
}

Payload::Payload(const Payload& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Payload)
}

void Payload::SharedCtor() {
  _cached_size_ = 0;
  assemblies_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Payload::~Payload() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Payload)
  SharedDtor();
}

void Payload::SharedDtor() {
  if (this != default_instance_) {
    delete assemblies_;
  }
}

void Payload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Payload::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Payload_descriptor_;
}

const Payload& Payload::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Payload* Payload::default_instance_ = NULL;

Payload* Payload::New() const {
  return new Payload;
}

void Payload::Clear() {
  if (has_assemblies()) {
    if (assemblies_ != NULL) assemblies_->::edu::vanderbilt::isis::meta::AssembliesType::Clear();
  }
  components_.Clear();
  constraints_.Clear();
  parameters_.Clear();
  datums_.Clear();
  connectors_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Payload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Payload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .edu.vanderbilt.isis.meta.AssembliesType assemblies = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_assemblies()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_components;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.CADComponentType components = 2;
      case 2: {
        if (tag == 18) {
         parse_components:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_components()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_components;
        if (input->ExpectTag(26)) goto parse_constraints;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ConstraintType constraints = 3;
      case 3: {
        if (tag == 26) {
         parse_constraints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_constraints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_constraints;
        if (input->ExpectTag(34)) goto parse_parameters;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ParametricParametersType parameters = 4;
      case 4: {
        if (tag == 34) {
         parse_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_parameters;
        if (input->ExpectTag(42)) goto parse_datums;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.DatumType datums = 5;
      case 5: {
        if (tag == 42) {
         parse_datums:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datums()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_datums;
        if (input->ExpectTag(50)) goto parse_connectors;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ConnectorType connectors = 6;
      case 6: {
        if (tag == 50) {
         parse_connectors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_connectors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_connectors;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Payload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Payload)
  return false;
#undef DO_
}

void Payload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Payload)
  // optional .edu.vanderbilt.isis.meta.AssembliesType assemblies = 1;
  if (has_assemblies()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->assemblies(), output);
  }

  // repeated .edu.vanderbilt.isis.meta.CADComponentType components = 2;
  for (int i = 0; i < this->components_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->components(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ConstraintType constraints = 3;
  for (int i = 0; i < this->constraints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->constraints(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ParametricParametersType parameters = 4;
  for (int i = 0; i < this->parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->parameters(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.DatumType datums = 5;
  for (int i = 0; i < this->datums_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->datums(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorType connectors = 6;
  for (int i = 0; i < this->connectors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->connectors(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Payload)
}

::google::protobuf::uint8* Payload::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Payload)
  // optional .edu.vanderbilt.isis.meta.AssembliesType assemblies = 1;
  if (has_assemblies()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->assemblies(), target);
  }

  // repeated .edu.vanderbilt.isis.meta.CADComponentType components = 2;
  for (int i = 0; i < this->components_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->components(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ConstraintType constraints = 3;
  for (int i = 0; i < this->constraints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->constraints(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ParametricParametersType parameters = 4;
  for (int i = 0; i < this->parameters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->parameters(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.DatumType datums = 5;
  for (int i = 0; i < this->datums_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->datums(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorType connectors = 6;
  for (int i = 0; i < this->connectors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->connectors(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Payload)
  return target;
}

int Payload::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .edu.vanderbilt.isis.meta.AssembliesType assemblies = 1;
    if (has_assemblies()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->assemblies());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.CADComponentType components = 2;
  total_size += 1 * this->components_size();
  for (int i = 0; i < this->components_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->components(i));
  }

  // repeated .edu.vanderbilt.isis.meta.ConstraintType constraints = 3;
  total_size += 1 * this->constraints_size();
  for (int i = 0; i < this->constraints_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->constraints(i));
  }

  // repeated .edu.vanderbilt.isis.meta.ParametricParametersType parameters = 4;
  total_size += 1 * this->parameters_size();
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameters(i));
  }

  // repeated .edu.vanderbilt.isis.meta.DatumType datums = 5;
  total_size += 1 * this->datums_size();
  for (int i = 0; i < this->datums_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datums(i));
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorType connectors = 6;
  total_size += 1 * this->connectors_size();
  for (int i = 0; i < this->connectors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->connectors(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Payload::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Payload* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Payload*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Payload::MergeFrom(const Payload& from) {
  GOOGLE_CHECK_NE(&from, this);
  components_.MergeFrom(from.components_);
  constraints_.MergeFrom(from.constraints_);
  parameters_.MergeFrom(from.parameters_);
  datums_.MergeFrom(from.datums_);
  connectors_.MergeFrom(from.connectors_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_assemblies()) {
      mutable_assemblies()->::edu::vanderbilt::isis::meta::AssembliesType::MergeFrom(from.assemblies());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Payload::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Payload::CopyFrom(const Payload& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Payload::IsInitialized() const {

  if (has_assemblies()) {
    if (!this->assemblies().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->components())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->constraints())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->parameters())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->connectors())) return false;
  return true;
}

void Payload::Swap(Payload* other) {
  if (other != this) {
    std::swap(assemblies_, other->assemblies_);
    components_.Swap(&other->components_);
    constraints_.Swap(&other->constraints_);
    parameters_.Swap(&other->parameters_);
    datums_.Swap(&other->datums_);
    connectors_.Swap(&other->connectors_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Payload::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Payload_descriptor_;
  metadata.reflection = Payload_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DatumType::kComponentIdFieldNumber;
const int DatumType::kTypeFieldNumber;
const int DatumType::kNameFieldNumber;
#endif  // !_MSC_VER

DatumType::DatumType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.DatumType)
}

void DatumType::InitAsDefaultInstance() {
}

DatumType::DatumType(const DatumType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.DatumType)
}

void DatumType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DatumType::~DatumType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.DatumType)
  SharedDtor();
}

void DatumType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DatumType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatumType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DatumType_descriptor_;
}

const DatumType& DatumType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

DatumType* DatumType::default_instance_ = NULL;

DatumType* DatumType::New() const {
  return new DatumType;
}

void DatumType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_componentid()) {
      if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        componentid_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DatumType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.DatumType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string componentId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional string type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.DatumType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.DatumType)
  return false;
#undef DO_
}

void DatumType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.DatumType)
  // optional string componentId = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->componentid(), output);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.DatumType)
}

::google::protobuf::uint8* DatumType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.DatumType)
  // optional string componentId = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->componentid(), target);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.DatumType)
  return target;
}

int DatumType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string componentId = 1;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatumType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DatumType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DatumType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DatumType::MergeFrom(const DatumType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DatumType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatumType::CopyFrom(const DatumType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatumType::IsInitialized() const {

  return true;
}

void DatumType::Swap(DatumType* other) {
  if (other != this) {
    std::swap(componentid_, other->componentid_);
    std::swap(type_, other->type_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DatumType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DatumType_descriptor_;
  metadata.reflection = DatumType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Environment::kNameFieldNumber;
const int Environment::kValueFieldNumber;
#endif  // !_MSC_VER

Environment::Environment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Environment)
}

void Environment::InitAsDefaultInstance() {
}

Environment::Environment(const Environment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Environment)
}

void Environment::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Environment::~Environment() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Environment)
  SharedDtor();
}

void Environment::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Environment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Environment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Environment_descriptor_;
}

const Environment& Environment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Environment* Environment::default_instance_ = NULL;

Environment* Environment::New() const {
  return new Environment;
}

void Environment::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Environment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Environment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value(this->value_size() - 1).data(),
            this->value(this->value_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Environment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Environment)
  return false;
#undef DO_
}

void Environment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Environment)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string value = 2;
  for (int i = 0; i < this->value_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->value(i).data(), this->value(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Environment)
}

::google::protobuf::uint8* Environment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Environment)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string value = 2;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value(i).data(), this->value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Environment)
  return target;
}

int Environment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated string value = 2;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Environment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Environment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Environment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Environment::MergeFrom(const Environment& from) {
  GOOGLE_CHECK_NE(&from, this);
  value_.MergeFrom(from.value_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Environment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Environment::CopyFrom(const Environment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Environment::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Environment::Swap(Environment* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    value_.Swap(&other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Environment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Environment_descriptor_;
  metadata.reflection = Environment_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Notice_NoticeMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notice_NoticeMode_descriptor_;
}
bool Notice_NoticeMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Notice_NoticeMode Notice::ACK;
const Notice_NoticeMode Notice::DONE;
const Notice_NoticeMode Notice::WARN;
const Notice_NoticeMode Notice::FAULT;
const Notice_NoticeMode Notice::FAIL;
const Notice_NoticeMode Notice::NoticeMode_MIN;
const Notice_NoticeMode Notice::NoticeMode_MAX;
const int Notice::NoticeMode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Notice::kNoticeModeFieldNumber;
const int Notice::kIdFieldNumber;
const int Notice::kMsgFieldNumber;
const int Notice::kCodeFieldNumber;
#endif  // !_MSC_VER

Notice::Notice()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.Notice)
}

void Notice::InitAsDefaultInstance() {
}

Notice::Notice(const Notice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.Notice)
}

void Notice::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  noticemode_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Notice::~Notice() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.Notice)
  SharedDtor();
}

void Notice::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (this != default_instance_) {
  }
}

void Notice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notice_descriptor_;
}

const Notice& Notice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

Notice* Notice::default_instance_ = NULL;

Notice* Notice::New() const {
  return new Notice;
}

void Notice::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    noticemode_ = 0;
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_->clear();
      }
    }
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Notice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.Notice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .edu.vanderbilt.isis.meta.Notice.NoticeMode noticeMode = 1 [default = ACK];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::Notice_NoticeMode_IsValid(value)) {
            set_noticemode(static_cast< ::edu::vanderbilt::isis::meta::Notice_NoticeMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_code;
        break;
      }

      // optional bytes code = 4;
      case 4: {
        if (tag == 34) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.Notice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.Notice)
  return false;
#undef DO_
}

void Notice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.Notice)
  // required .edu.vanderbilt.isis.meta.Notice.NoticeMode noticeMode = 1 [default = ACK];
  if (has_noticemode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->noticemode(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // optional bytes code = 4;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.Notice)
}

::google::protobuf::uint8* Notice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.Notice)
  // required .edu.vanderbilt.isis.meta.Notice.NoticeMode noticeMode = 1 [default = ACK];
  if (has_noticemode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->noticemode(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // optional string msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // optional bytes code = 4;
  if (has_code()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.Notice)
  return target;
}

int Notice::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .edu.vanderbilt.isis.meta.Notice.NoticeMode noticeMode = 1 [default = ACK];
    if (has_noticemode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->noticemode());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional bytes code = 4;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Notice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Notice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Notice::MergeFrom(const Notice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_noticemode()) {
      set_noticemode(from.noticemode());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Notice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notice::CopyFrom(const Notice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notice::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Notice::Swap(Notice* other) {
  if (other != this) {
    std::swap(noticemode_, other->noticemode_);
    std::swap(id_, other->id_);
    std::swap(msg_, other->msg_);
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Notice::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notice_descriptor_;
  metadata.reflection = Notice_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ComponentManifestNode_NodeMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentManifestNode_NodeMode_descriptor_;
}
bool ComponentManifestNode_NodeMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ComponentManifestNode_NodeMode ComponentManifestNode::FOLDER;
const ComponentManifestNode_NodeMode ComponentManifestNode::COMPONENT;
const ComponentManifestNode_NodeMode ComponentManifestNode::NodeMode_MIN;
const ComponentManifestNode_NodeMode ComponentManifestNode::NodeMode_MAX;
const int ComponentManifestNode::NodeMode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ComponentManifestNode::kNodeModeFieldNumber;
const int ComponentManifestNode::kGuidFieldNumber;
const int ComponentManifestNode::kNameFieldNumber;
const int ComponentManifestNode::kCyphyParentIdFieldNumber;
const int ComponentManifestNode::kComponentGroupFieldNumber;
#endif  // !_MSC_VER

ComponentManifestNode::ComponentManifestNode()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ComponentManifestNode)
}

void ComponentManifestNode::InitAsDefaultInstance() {
}

ComponentManifestNode::ComponentManifestNode(const ComponentManifestNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ComponentManifestNode)
}

void ComponentManifestNode::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodemode_ = 1;
  guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cyphyparentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentManifestNode::~ComponentManifestNode() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ComponentManifestNode)
  SharedDtor();
}

void ComponentManifestNode::SharedDtor() {
  if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guid_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (cyphyparentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cyphyparentid_;
  }
  if (this != default_instance_) {
  }
}

void ComponentManifestNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentManifestNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentManifestNode_descriptor_;
}

const ComponentManifestNode& ComponentManifestNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetaLinkMsg_2eproto();
  return *default_instance_;
}

ComponentManifestNode* ComponentManifestNode::default_instance_ = NULL;

ComponentManifestNode* ComponentManifestNode::New() const {
  return new ComponentManifestNode;
}

void ComponentManifestNode::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    nodemode_ = 1;
    if (has_guid()) {
      if (guid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        guid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_cyphyparentid()) {
      if (cyphyparentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cyphyparentid_->clear();
      }
    }
  }
  componentgroup_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentManifestNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ComponentManifestNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .edu.vanderbilt.isis.meta.ComponentManifestNode.NodeMode nodeMode = 1 [default = COMPONENT];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::ComponentManifestNode_NodeMode_IsValid(value)) {
            set_nodemode(static_cast< ::edu::vanderbilt::isis::meta::ComponentManifestNode_NodeMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_guid;
        break;
      }

      // optional string guid = 2;
      case 2: {
        if (tag == 18) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "guid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_cyphyParentId;
        break;
      }

      // optional string cyphyParentId = 4;
      case 4: {
        if (tag == 34) {
         parse_cyphyParentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cyphyparentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cyphyparentid().data(), this->cyphyparentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cyphyparentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_componentGroup;
        break;
      }

      // repeated string componentGroup = 5;
      case 5: {
        if (tag == 42) {
         parse_componentGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_componentgroup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentgroup(this->componentgroup_size() - 1).data(),
            this->componentgroup(this->componentgroup_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentgroup");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_componentGroup;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ComponentManifestNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ComponentManifestNode)
  return false;
#undef DO_
}

void ComponentManifestNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ComponentManifestNode)
  // required .edu.vanderbilt.isis.meta.ComponentManifestNode.NodeMode nodeMode = 1 [default = COMPONENT];
  if (has_nodemode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->nodemode(), output);
  }

  // optional string guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string cyphyParentId = 4;
  if (has_cyphyparentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cyphyparentid().data(), this->cyphyparentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cyphyparentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cyphyparentid(), output);
  }

  // repeated string componentGroup = 5;
  for (int i = 0; i < this->componentgroup_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->componentgroup(i).data(), this->componentgroup(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "componentgroup");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->componentgroup(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ComponentManifestNode)
}

::google::protobuf::uint8* ComponentManifestNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ComponentManifestNode)
  // required .edu.vanderbilt.isis.meta.ComponentManifestNode.NodeMode nodeMode = 1 [default = COMPONENT];
  if (has_nodemode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->nodemode(), target);
  }

  // optional string guid = 2;
  if (has_guid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string cyphyParentId = 4;
  if (has_cyphyparentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cyphyparentid().data(), this->cyphyparentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cyphyparentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cyphyparentid(), target);
  }

  // repeated string componentGroup = 5;
  for (int i = 0; i < this->componentgroup_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentgroup(i).data(), this->componentgroup(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentgroup");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->componentgroup(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ComponentManifestNode)
  return target;
}

int ComponentManifestNode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .edu.vanderbilt.isis.meta.ComponentManifestNode.NodeMode nodeMode = 1 [default = COMPONENT];
    if (has_nodemode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->nodemode());
    }

    // optional string guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string cyphyParentId = 4;
    if (has_cyphyparentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cyphyparentid());
    }

  }
  // repeated string componentGroup = 5;
  total_size += 1 * this->componentgroup_size();
  for (int i = 0; i < this->componentgroup_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->componentgroup(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentManifestNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentManifestNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentManifestNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentManifestNode::MergeFrom(const ComponentManifestNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  componentgroup_.MergeFrom(from.componentgroup_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodemode()) {
      set_nodemode(from.nodemode());
    }
    if (from.has_guid()) {
      set_guid(from.guid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_cyphyparentid()) {
      set_cyphyparentid(from.cyphyparentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentManifestNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentManifestNode::CopyFrom(const ComponentManifestNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentManifestNode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ComponentManifestNode::Swap(ComponentManifestNode* other) {
  if (other != this) {
    std::swap(nodemode_, other->nodemode_);
    std::swap(guid_, other->guid_);
    std::swap(name_, other->name_);
    std::swap(cyphyparentid_, other->cyphyparentid_);
    componentgroup_.Swap(&other->componentgroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentManifestNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentManifestNode_descriptor_;
  metadata.reflection = ComponentManifestNode_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace meta
}  // namespace isis
}  // namespace vanderbilt
}  // namespace edu

// @@protoc_insertion_point(global_scope)
