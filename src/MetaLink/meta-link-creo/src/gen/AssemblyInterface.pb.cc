// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AssemblyInterface.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AssemblyInterface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace edu {
namespace vanderbilt {
namespace isis {
namespace meta {

namespace {

const ::google::protobuf::Descriptor* AnalysisComponentsType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnalysisComponentsType_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssembliesType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssembliesType_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssemblyType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssemblyType_reflection_ = NULL;
const ::google::protobuf::Descriptor* CADComponentType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CADComponentType_reflection_ = NULL;
const ::google::protobuf::Descriptor* CADParameterType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CADParameterType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConnectorDatumType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectorDatumType_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ConnectorDatumType_AlignType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ConnectorType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectorType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConstraintFeatureType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConstraintFeatureType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConstraintOffsetType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConstraintOffsetType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConstraintType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConstraintType_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataExchangeType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataExchangeType_reflection_ = NULL;
const ::google::protobuf::Descriptor* FeatureType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FeatureType_reflection_ = NULL;
const ::google::protobuf::Descriptor* FeaturesType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FeaturesType_reflection_ = NULL;
const ::google::protobuf::Descriptor* GeometryType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GeometryType_reflection_ = NULL;
const ::google::protobuf::Descriptor* PairType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PairType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ParametricParametersType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParametricParametersType_reflection_ = NULL;
const ::google::protobuf::Descriptor* PropertiesType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropertiesType_reflection_ = NULL;
const ::google::protobuf::Descriptor* STEPFormatType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  STEPFormatType_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnassembledComponentsType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnassembledComponentsType_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnitsType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitsType_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AssemblyInterface_2eproto() {
  protobuf_AddDesc_AssemblyInterface_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AssemblyInterface.proto");
  GOOGLE_CHECK(file != NULL);
  AnalysisComponentsType_descriptor_ = file->message_type(0);
  static const int AnalysisComponentsType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisComponentsType, component_),
  };
  AnalysisComponentsType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnalysisComponentsType_descriptor_,
      AnalysisComponentsType::default_instance_,
      AnalysisComponentsType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisComponentsType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnalysisComponentsType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnalysisComponentsType));
  AssembliesType_descriptor_ = file->message_type(1);
  static const int AssembliesType_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, assembly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, dataexchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, unassembledcomponents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, assemblies_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, versioninfo_),
  };
  AssembliesType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AssembliesType_descriptor_,
      AssembliesType::default_instance_,
      AssembliesType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssembliesType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AssembliesType));
  AssemblyType_descriptor_ = file->message_type(2);
  static const int AssemblyType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssemblyType, cadcomponent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssemblyType, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssemblyType, configurationid_),
  };
  AssemblyType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AssemblyType_descriptor_,
      AssemblyType::default_instance_,
      AssemblyType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssemblyType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssemblyType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AssemblyType));
  CADComponentType_descriptor_ = file->message_type(3);
  static const int CADComponentType_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, cadcomponent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, parametricparameters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, connectors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, datums_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, avmcomponentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, materialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, specialinstruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, standalone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, cadmodelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, displayname_),
  };
  CADComponentType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CADComponentType_descriptor_,
      CADComponentType::default_instance_,
      CADComponentType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADComponentType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CADComponentType));
  CADParameterType_descriptor_ = file->message_type(4);
  static const int CADParameterType_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADParameterType, units_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADParameterType, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADParameterType, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADParameterType, value_),
  };
  CADParameterType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CADParameterType_descriptor_,
      CADParameterType::default_instance_,
      CADParameterType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADParameterType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CADParameterType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CADParameterType));
  ComponentType_descriptor_ = file->message_type(5);
  static const int ComponentType_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentType, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentType, infinitecycle_),
  };
  ComponentType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentType_descriptor_,
      ComponentType::default_instance_,
      ComponentType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentType));
  ConnectorDatumType_descriptor_ = file->message_type(6);
  static const int ConnectorDatumType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorDatumType, alignment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorDatumType, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorDatumType, displayname_),
  };
  ConnectorDatumType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConnectorDatumType_descriptor_,
      ConnectorDatumType::default_instance_,
      ConnectorDatumType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorDatumType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorDatumType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConnectorDatumType));
  ConnectorDatumType_AlignType_descriptor_ = ConnectorDatumType_descriptor_->enum_type(0);
  ConnectorType_descriptor_ = file->message_type(7);
  static const int ConnectorType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorType, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorType, displayname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorType, datums_),
  };
  ConnectorType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConnectorType_descriptor_,
      ConnectorType::default_instance_,
      ConnectorType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectorType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConnectorType));
  ConstraintFeatureType_descriptor_ = file->message_type(8);
  static const int ConstraintFeatureType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintFeatureType, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintFeatureType, featurename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintFeatureType, featureorientationtype_),
  };
  ConstraintFeatureType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConstraintFeatureType_descriptor_,
      ConstraintFeatureType::default_instance_,
      ConstraintFeatureType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintFeatureType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintFeatureType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConstraintFeatureType));
  ConstraintOffsetType_descriptor_ = file->message_type(9);
  static const int ConstraintOffsetType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintOffsetType, units_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintOffsetType, offsetalignmenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintOffsetType, value_),
  };
  ConstraintOffsetType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConstraintOffsetType_descriptor_,
      ConstraintOffsetType::default_instance_,
      ConstraintOffsetType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintOffsetType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintOffsetType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConstraintOffsetType));
  ConstraintType_descriptor_ = file->message_type(10);
  static const int ConstraintType_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintType, pair_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintType, componentid_),
  };
  ConstraintType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConstraintType_descriptor_,
      ConstraintType::default_instance_,
      ConstraintType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConstraintType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConstraintType));
  DataExchangeType_descriptor_ = file->message_type(11);
  static const int DataExchangeType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataExchangeType, stepformat_),
  };
  DataExchangeType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataExchangeType_descriptor_,
      DataExchangeType::default_instance_,
      DataExchangeType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataExchangeType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataExchangeType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataExchangeType));
  FeatureType_descriptor_ = file->message_type(12);
  static const int FeatureType_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureType, componentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureType, name_),
  };
  FeatureType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FeatureType_descriptor_,
      FeatureType::default_instance_,
      FeatureType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeatureType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FeatureType));
  FeaturesType_descriptor_ = file->message_type(13);
  static const int FeaturesType_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, feature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, featuregeometrytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, featureid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, featureinterfacetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, geometrytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, primarygeometryqualifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, secondarygeometryqualifier_),
  };
  FeaturesType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FeaturesType_descriptor_,
      FeaturesType::default_instance_,
      FeaturesType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FeaturesType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FeaturesType));
  GeometryType_descriptor_ = file->message_type(14);
  static const int GeometryType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeometryType, features_),
  };
  GeometryType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GeometryType_descriptor_,
      GeometryType::default_instance_,
      GeometryType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeometryType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeometryType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GeometryType));
  PairType_descriptor_ = file->message_type(15);
  static const int PairType_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, constraintfeaturea_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, constraintfeatureb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, constraintoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, featurealignmenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, featuregeometrytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, featureinterfacetype_),
  };
  PairType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PairType_descriptor_,
      PairType::default_instance_,
      PairType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PairType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PairType));
  ParametricParametersType_descriptor_ = file->message_type(16);
  static const int ParametricParametersType_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricParametersType, cadparameter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricParametersType, componentid_),
  };
  ParametricParametersType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ParametricParametersType_descriptor_,
      ParametricParametersType::default_instance_,
      ParametricParametersType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricParametersType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricParametersType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ParametricParametersType));
  PropertiesType_descriptor_ = file->message_type(17);
  static const int PropertiesType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertiesType, units_),
  };
  PropertiesType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PropertiesType_descriptor_,
      PropertiesType::default_instance_,
      PropertiesType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertiesType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertiesType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PropertiesType));
  STEPFormatType_descriptor_ = file->message_type(18);
  static const int STEPFormatType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STEPFormatType, name_),
  };
  STEPFormatType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      STEPFormatType_descriptor_,
      STEPFormatType::default_instance_,
      STEPFormatType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STEPFormatType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(STEPFormatType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(STEPFormatType));
  UnassembledComponentsType_descriptor_ = file->message_type(19);
  static const int UnassembledComponentsType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassembledComponentsType, cadcomponent_),
  };
  UnassembledComponentsType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnassembledComponentsType_descriptor_,
      UnassembledComponentsType::default_instance_,
      UnassembledComponentsType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassembledComponentsType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnassembledComponentsType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnassembledComponentsType));
  UnitsType_descriptor_ = file->message_type(20);
  static const int UnitsType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitsType, value_),
  };
  UnitsType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnitsType_descriptor_,
      UnitsType::default_instance_,
      UnitsType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitsType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitsType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnitsType));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AssemblyInterface_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnalysisComponentsType_descriptor_, &AnalysisComponentsType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AssembliesType_descriptor_, &AssembliesType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AssemblyType_descriptor_, &AssemblyType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CADComponentType_descriptor_, &CADComponentType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CADParameterType_descriptor_, &CADParameterType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentType_descriptor_, &ComponentType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConnectorDatumType_descriptor_, &ConnectorDatumType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConnectorType_descriptor_, &ConnectorType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConstraintFeatureType_descriptor_, &ConstraintFeatureType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConstraintOffsetType_descriptor_, &ConstraintOffsetType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConstraintType_descriptor_, &ConstraintType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataExchangeType_descriptor_, &DataExchangeType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FeatureType_descriptor_, &FeatureType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FeaturesType_descriptor_, &FeaturesType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GeometryType_descriptor_, &GeometryType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PairType_descriptor_, &PairType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ParametricParametersType_descriptor_, &ParametricParametersType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PropertiesType_descriptor_, &PropertiesType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    STEPFormatType_descriptor_, &STEPFormatType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnassembledComponentsType_descriptor_, &UnassembledComponentsType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnitsType_descriptor_, &UnitsType::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AssemblyInterface_2eproto() {
  delete AnalysisComponentsType::default_instance_;
  delete AnalysisComponentsType_reflection_;
  delete AssembliesType::default_instance_;
  delete AssembliesType_reflection_;
  delete AssemblyType::default_instance_;
  delete AssemblyType_reflection_;
  delete CADComponentType::default_instance_;
  delete CADComponentType_reflection_;
  delete CADParameterType::default_instance_;
  delete CADParameterType_reflection_;
  delete ComponentType::default_instance_;
  delete ComponentType_reflection_;
  delete ConnectorDatumType::default_instance_;
  delete ConnectorDatumType_reflection_;
  delete ConnectorType::default_instance_;
  delete ConnectorType_reflection_;
  delete ConstraintFeatureType::default_instance_;
  delete ConstraintFeatureType_reflection_;
  delete ConstraintOffsetType::default_instance_;
  delete ConstraintOffsetType_reflection_;
  delete ConstraintType::default_instance_;
  delete ConstraintType_reflection_;
  delete DataExchangeType::default_instance_;
  delete DataExchangeType_reflection_;
  delete FeatureType::default_instance_;
  delete FeatureType_reflection_;
  delete FeaturesType::default_instance_;
  delete FeaturesType_reflection_;
  delete GeometryType::default_instance_;
  delete GeometryType_reflection_;
  delete PairType::default_instance_;
  delete PairType_reflection_;
  delete ParametricParametersType::default_instance_;
  delete ParametricParametersType_reflection_;
  delete PropertiesType::default_instance_;
  delete PropertiesType_reflection_;
  delete STEPFormatType::default_instance_;
  delete STEPFormatType_reflection_;
  delete UnassembledComponentsType::default_instance_;
  delete UnassembledComponentsType_reflection_;
  delete UnitsType::default_instance_;
  delete UnitsType_reflection_;
}

void protobuf_AddDesc_AssemblyInterface_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027AssemblyInterface.proto\022\030edu.vanderbil"
    "t.isis.meta\"T\n\026AnalysisComponentsType\022:\n"
    "\tComponent\030\001 \003(\0132\'.edu.vanderbilt.isis.m"
    "eta.ComponentType\"\263\002\n\016AssembliesType\0228\n\010"
    "Assembly\030\001 \003(\0132&.edu.vanderbilt.isis.met"
    "a.AssemblyType\022@\n\014DataExchange\030\002 \001(\0132*.e"
    "du.vanderbilt.isis.meta.DataExchangeType"
    "\022R\n\025UnassembledComponents\030\004 \001(\01323.edu.va"
    "nderbilt.isis.meta.UnassembledComponents"
    "Type\022<\n\nAssemblies\030\005 \003(\0132(.edu.vanderbil"
    "t.isis.meta.AssembliesType\022\023\n\013VersionInf"
    "o\030\006 \002(\t\"\247\001\n\014AssemblyType\022@\n\014CADComponent"
    "\030\002 \001(\0132*.edu.vanderbilt.isis.meta.CADCom"
    "ponentType\022<\n\nProperties\030\004 \002(\0132(.edu.van"
    "derbilt.isis.meta.PropertiesType\022\027\n\017Conf"
    "igurationID\030\005 \002(\t\"\327\003\n\020CADComponentType\022@"
    "\n\014CADComponent\030\001 \003(\0132*.edu.vanderbilt.is"
    "is.meta.CADComponentType\022P\n\024ParametricPa"
    "rameters\030\004 \001(\01322.edu.vanderbilt.isis.met"
    "a.ParametricParametersType\022;\n\nConnectors"
    "\030\016 \003(\0132\'.edu.vanderbilt.isis.meta.Connec"
    "torType\022<\n\006Datums\030\017 \003(\0132,.edu.vanderbilt"
    ".isis.meta.ConnectorDatumType\022\023\n\013Compone"
    "ntID\030\005 \001(\t\022\026\n\016AvmComponentID\030\013 \001(\t\022\022\n\nMa"
    "terialID\030\006 \001(\t\022\014\n\004Name\030\007 \001(\t\022\032\n\022SpecialI"
    "nstruction\030\010 \001(\t\022\022\n\nStandalone\030\t \001(\010\022\014\n\004"
    "Type\030\n \001(\t\022\022\n\nCADModelID\030\014 \001(\t\022\023\n\013Displa"
    "yName\030\r \001(\t\"q\n\020CADParameterType\0222\n\005Units"
    "\030\001 \001(\0132#.edu.vanderbilt.isis.meta.UnitsT"
    "ype\022\014\n\004Name\030\002 \002(\t\022\014\n\004Type\030\003 \002(\t\022\r\n\005Value"
    "\030\004 \002(\t\";\n\rComponentType\022\023\n\013ComponentID\030\002"
    " \002(\t\022\025\n\rInfiniteCycle\030\003 \002(\010\"\242\001\n\022Connecto"
    "rDatumType\022I\n\tAlignment\030\003 \001(\01626.edu.vand"
    "erbilt.isis.meta.ConnectorDatumType.Alig"
    "nType\022\n\n\002ID\030\001 \001(\t\022\023\n\013DisplayName\030\002 \002(\t\" "
    "\n\tAlignType\022\010\n\004MATE\020\000\022\t\n\005ALIGN\020\001\"n\n\rConn"
    "ectorType\022\n\n\002ID\030\001 \002(\t\022\023\n\013DisplayName\030\002 \002"
    "(\t\022<\n\006Datums\030\003 \003(\0132,.edu.vanderbilt.isis"
    ".meta.ConnectorDatumType\"a\n\025ConstraintFe"
    "atureType\022\023\n\013ComponentID\030\001 \002(\t\022\023\n\013Featur"
    "eName\030\002 \002(\t\022\036\n\026FeatureOrientationType\030\003 "
    "\002(\t\"v\n\024ConstraintOffsetType\0222\n\005Units\030\001 \001"
    "(\0132#.edu.vanderbilt.isis.meta.UnitsType\022"
    "\033\n\023OffsetAlignmentType\030\002 \002(\t\022\r\n\005Value\030\003 "
    "\002(\001\"W\n\016ConstraintType\0220\n\004Pair\030\001 \003(\0132\".ed"
    "u.vanderbilt.isis.meta.PairType\022\023\n\013Compo"
    "nentID\030\002 \001(\t\"P\n\020DataExchangeType\022<\n\nSTEP"
    "Format\030\001 \003(\0132(.edu.vanderbilt.isis.meta."
    "STEPFormatType\"0\n\013FeatureType\022\023\n\013Compone"
    "ntID\030\001 \002(\t\022\014\n\004Name\030\002 \002(\t\"\360\001\n\014FeaturesTyp"
    "e\0226\n\007Feature\030\001 \003(\0132%.edu.vanderbilt.isis"
    ".meta.FeatureType\022\033\n\023FeatureGeometryType"
    "\030\002 \002(\t\022\021\n\tFeatureID\030\003 \002(\t\022\034\n\024FeatureInte"
    "rfaceType\030\004 \002(\t\022\024\n\014GeometryType\030\005 \002(\t\022 \n"
    "\030PrimaryGeometryQualifier\030\006 \002(\t\022\"\n\032Secon"
    "daryGeometryQualifier\030\007 \002(\t\"H\n\014GeometryT"
    "ype\0228\n\010Features\030\001 \003(\0132&.edu.vanderbilt.i"
    "sis.meta.FeaturesType\"\307\002\n\010PairType\022K\n\022Co"
    "nstraintFeatureA\030\001 \002(\0132/.edu.vanderbilt."
    "isis.meta.ConstraintFeatureType\022K\n\022Const"
    "raintFeatureB\030\002 \002(\0132/.edu.vanderbilt.isi"
    "s.meta.ConstraintFeatureType\022H\n\020Constrai"
    "ntOffset\030\003 \001(\0132..edu.vanderbilt.isis.met"
    "a.ConstraintOffsetType\022\034\n\024FeatureAlignme"
    "ntType\030\004 \002(\t\022\033\n\023FeatureGeometryType\030\005 \002("
    "\t\022\034\n\024FeatureInterfaceType\030\006 \002(\t\"q\n\030Param"
    "etricParametersType\022@\n\014CADParameter\030\001 \003("
    "\0132*.edu.vanderbilt.isis.meta.CADParamete"
    "rType\022\023\n\013ComponentID\030\002 \001(\t\"D\n\016Properties"
    "Type\0222\n\005Units\030\001 \001(\0132#.edu.vanderbilt.isi"
    "s.meta.UnitsType\"\036\n\016STEPFormatType\022\014\n\004Na"
    "me\030\001 \002(\t\"]\n\031UnassembledComponentsType\022@\n"
    "\014CADComponent\030\001 \003(\0132*.edu.vanderbilt.isi"
    "s.meta.CADComponentType\"\032\n\tUnitsType\022\r\n\005"
    "Value\030\001 \002(\t", 2971);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AssemblyInterface.proto", &protobuf_RegisterTypes);
  AnalysisComponentsType::default_instance_ = new AnalysisComponentsType();
  AssembliesType::default_instance_ = new AssembliesType();
  AssemblyType::default_instance_ = new AssemblyType();
  CADComponentType::default_instance_ = new CADComponentType();
  CADParameterType::default_instance_ = new CADParameterType();
  ComponentType::default_instance_ = new ComponentType();
  ConnectorDatumType::default_instance_ = new ConnectorDatumType();
  ConnectorType::default_instance_ = new ConnectorType();
  ConstraintFeatureType::default_instance_ = new ConstraintFeatureType();
  ConstraintOffsetType::default_instance_ = new ConstraintOffsetType();
  ConstraintType::default_instance_ = new ConstraintType();
  DataExchangeType::default_instance_ = new DataExchangeType();
  FeatureType::default_instance_ = new FeatureType();
  FeaturesType::default_instance_ = new FeaturesType();
  GeometryType::default_instance_ = new GeometryType();
  PairType::default_instance_ = new PairType();
  ParametricParametersType::default_instance_ = new ParametricParametersType();
  PropertiesType::default_instance_ = new PropertiesType();
  STEPFormatType::default_instance_ = new STEPFormatType();
  UnassembledComponentsType::default_instance_ = new UnassembledComponentsType();
  UnitsType::default_instance_ = new UnitsType();
  AnalysisComponentsType::default_instance_->InitAsDefaultInstance();
  AssembliesType::default_instance_->InitAsDefaultInstance();
  AssemblyType::default_instance_->InitAsDefaultInstance();
  CADComponentType::default_instance_->InitAsDefaultInstance();
  CADParameterType::default_instance_->InitAsDefaultInstance();
  ComponentType::default_instance_->InitAsDefaultInstance();
  ConnectorDatumType::default_instance_->InitAsDefaultInstance();
  ConnectorType::default_instance_->InitAsDefaultInstance();
  ConstraintFeatureType::default_instance_->InitAsDefaultInstance();
  ConstraintOffsetType::default_instance_->InitAsDefaultInstance();
  ConstraintType::default_instance_->InitAsDefaultInstance();
  DataExchangeType::default_instance_->InitAsDefaultInstance();
  FeatureType::default_instance_->InitAsDefaultInstance();
  FeaturesType::default_instance_->InitAsDefaultInstance();
  GeometryType::default_instance_->InitAsDefaultInstance();
  PairType::default_instance_->InitAsDefaultInstance();
  ParametricParametersType::default_instance_->InitAsDefaultInstance();
  PropertiesType::default_instance_->InitAsDefaultInstance();
  STEPFormatType::default_instance_->InitAsDefaultInstance();
  UnassembledComponentsType::default_instance_->InitAsDefaultInstance();
  UnitsType::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AssemblyInterface_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AssemblyInterface_2eproto {
  StaticDescriptorInitializer_AssemblyInterface_2eproto() {
    protobuf_AddDesc_AssemblyInterface_2eproto();
  }
} static_descriptor_initializer_AssemblyInterface_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AnalysisComponentsType::kComponentFieldNumber;
#endif  // !_MSC_VER

AnalysisComponentsType::AnalysisComponentsType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.AnalysisComponentsType)
}

void AnalysisComponentsType::InitAsDefaultInstance() {
}

AnalysisComponentsType::AnalysisComponentsType(const AnalysisComponentsType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.AnalysisComponentsType)
}

void AnalysisComponentsType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnalysisComponentsType::~AnalysisComponentsType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  SharedDtor();
}

void AnalysisComponentsType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnalysisComponentsType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnalysisComponentsType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnalysisComponentsType_descriptor_;
}

const AnalysisComponentsType& AnalysisComponentsType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

AnalysisComponentsType* AnalysisComponentsType::default_instance_ = NULL;

AnalysisComponentsType* AnalysisComponentsType::New() const {
  return new AnalysisComponentsType;
}

void AnalysisComponentsType::Clear() {
  component_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnalysisComponentsType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.ComponentType Component = 1;
      case 1: {
        if (tag == 10) {
         parse_Component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Component;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  return false;
#undef DO_
}

void AnalysisComponentsType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  // repeated .edu.vanderbilt.isis.meta.ComponentType Component = 1;
  for (int i = 0; i < this->component_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->component(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.AnalysisComponentsType)
}

::google::protobuf::uint8* AnalysisComponentsType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  // repeated .edu.vanderbilt.isis.meta.ComponentType Component = 1;
  for (int i = 0; i < this->component_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->component(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.AnalysisComponentsType)
  return target;
}

int AnalysisComponentsType::ByteSize() const {
  int total_size = 0;

  // repeated .edu.vanderbilt.isis.meta.ComponentType Component = 1;
  total_size += 1 * this->component_size();
  for (int i = 0; i < this->component_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->component(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnalysisComponentsType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnalysisComponentsType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnalysisComponentsType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnalysisComponentsType::MergeFrom(const AnalysisComponentsType& from) {
  GOOGLE_CHECK_NE(&from, this);
  component_.MergeFrom(from.component_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnalysisComponentsType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalysisComponentsType::CopyFrom(const AnalysisComponentsType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalysisComponentsType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->component())) return false;
  return true;
}

void AnalysisComponentsType::Swap(AnalysisComponentsType* other) {
  if (other != this) {
    component_.Swap(&other->component_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnalysisComponentsType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnalysisComponentsType_descriptor_;
  metadata.reflection = AnalysisComponentsType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AssembliesType::kAssemblyFieldNumber;
const int AssembliesType::kDataExchangeFieldNumber;
const int AssembliesType::kUnassembledComponentsFieldNumber;
const int AssembliesType::kAssembliesFieldNumber;
const int AssembliesType::kVersionInfoFieldNumber;
#endif  // !_MSC_VER

AssembliesType::AssembliesType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.AssembliesType)
}

void AssembliesType::InitAsDefaultInstance() {
  dataexchange_ = const_cast< ::edu::vanderbilt::isis::meta::DataExchangeType*>(&::edu::vanderbilt::isis::meta::DataExchangeType::default_instance());
  unassembledcomponents_ = const_cast< ::edu::vanderbilt::isis::meta::UnassembledComponentsType*>(&::edu::vanderbilt::isis::meta::UnassembledComponentsType::default_instance());
}

AssembliesType::AssembliesType(const AssembliesType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.AssembliesType)
}

void AssembliesType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dataexchange_ = NULL;
  unassembledcomponents_ = NULL;
  versioninfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssembliesType::~AssembliesType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.AssembliesType)
  SharedDtor();
}

void AssembliesType::SharedDtor() {
  if (versioninfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete versioninfo_;
  }
  if (this != default_instance_) {
    delete dataexchange_;
    delete unassembledcomponents_;
  }
}

void AssembliesType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssembliesType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssembliesType_descriptor_;
}

const AssembliesType& AssembliesType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

AssembliesType* AssembliesType::default_instance_ = NULL;

AssembliesType* AssembliesType::New() const {
  return new AssembliesType;
}

void AssembliesType::Clear() {
  if (_has_bits_[0 / 32] & 22) {
    if (has_dataexchange()) {
      if (dataexchange_ != NULL) dataexchange_->::edu::vanderbilt::isis::meta::DataExchangeType::Clear();
    }
    if (has_unassembledcomponents()) {
      if (unassembledcomponents_ != NULL) unassembledcomponents_->::edu::vanderbilt::isis::meta::UnassembledComponentsType::Clear();
    }
    if (has_versioninfo()) {
      if (versioninfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        versioninfo_->clear();
      }
    }
  }
  assembly_.Clear();
  assemblies_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AssembliesType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.AssembliesType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.AssemblyType Assembly = 1;
      case 1: {
        if (tag == 10) {
         parse_Assembly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_assembly()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Assembly;
        if (input->ExpectTag(18)) goto parse_DataExchange;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.DataExchangeType DataExchange = 2;
      case 2: {
        if (tag == 18) {
         parse_DataExchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dataexchange()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_UnassembledComponents;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.UnassembledComponentsType UnassembledComponents = 4;
      case 4: {
        if (tag == 34) {
         parse_UnassembledComponents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unassembledcomponents()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Assemblies;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.AssembliesType Assemblies = 5;
      case 5: {
        if (tag == 42) {
         parse_Assemblies:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_assemblies()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Assemblies;
        if (input->ExpectTag(50)) goto parse_VersionInfo;
        break;
      }

      // required string VersionInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_VersionInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_versioninfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->versioninfo().data(), this->versioninfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "versioninfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.AssembliesType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.AssembliesType)
  return false;
#undef DO_
}

void AssembliesType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.AssembliesType)
  // repeated .edu.vanderbilt.isis.meta.AssemblyType Assembly = 1;
  for (int i = 0; i < this->assembly_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->assembly(i), output);
  }

  // optional .edu.vanderbilt.isis.meta.DataExchangeType DataExchange = 2;
  if (has_dataexchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dataexchange(), output);
  }

  // optional .edu.vanderbilt.isis.meta.UnassembledComponentsType UnassembledComponents = 4;
  if (has_unassembledcomponents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->unassembledcomponents(), output);
  }

  // repeated .edu.vanderbilt.isis.meta.AssembliesType Assemblies = 5;
  for (int i = 0; i < this->assemblies_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->assemblies(i), output);
  }

  // required string VersionInfo = 6;
  if (has_versioninfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versioninfo().data(), this->versioninfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "versioninfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->versioninfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.AssembliesType)
}

::google::protobuf::uint8* AssembliesType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.AssembliesType)
  // repeated .edu.vanderbilt.isis.meta.AssemblyType Assembly = 1;
  for (int i = 0; i < this->assembly_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->assembly(i), target);
  }

  // optional .edu.vanderbilt.isis.meta.DataExchangeType DataExchange = 2;
  if (has_dataexchange()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dataexchange(), target);
  }

  // optional .edu.vanderbilt.isis.meta.UnassembledComponentsType UnassembledComponents = 4;
  if (has_unassembledcomponents()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->unassembledcomponents(), target);
  }

  // repeated .edu.vanderbilt.isis.meta.AssembliesType Assemblies = 5;
  for (int i = 0; i < this->assemblies_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->assemblies(i), target);
  }

  // required string VersionInfo = 6;
  if (has_versioninfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versioninfo().data(), this->versioninfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "versioninfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->versioninfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.AssembliesType)
  return target;
}

int AssembliesType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .edu.vanderbilt.isis.meta.DataExchangeType DataExchange = 2;
    if (has_dataexchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dataexchange());
    }

    // optional .edu.vanderbilt.isis.meta.UnassembledComponentsType UnassembledComponents = 4;
    if (has_unassembledcomponents()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unassembledcomponents());
    }

    // required string VersionInfo = 6;
    if (has_versioninfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->versioninfo());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.AssemblyType Assembly = 1;
  total_size += 1 * this->assembly_size();
  for (int i = 0; i < this->assembly_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->assembly(i));
  }

  // repeated .edu.vanderbilt.isis.meta.AssembliesType Assemblies = 5;
  total_size += 1 * this->assemblies_size();
  for (int i = 0; i < this->assemblies_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->assemblies(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssembliesType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AssembliesType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AssembliesType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AssembliesType::MergeFrom(const AssembliesType& from) {
  GOOGLE_CHECK_NE(&from, this);
  assembly_.MergeFrom(from.assembly_);
  assemblies_.MergeFrom(from.assemblies_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_dataexchange()) {
      mutable_dataexchange()->::edu::vanderbilt::isis::meta::DataExchangeType::MergeFrom(from.dataexchange());
    }
    if (from.has_unassembledcomponents()) {
      mutable_unassembledcomponents()->::edu::vanderbilt::isis::meta::UnassembledComponentsType::MergeFrom(from.unassembledcomponents());
    }
    if (from.has_versioninfo()) {
      set_versioninfo(from.versioninfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AssembliesType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssembliesType::CopyFrom(const AssembliesType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssembliesType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->assembly())) return false;
  if (has_dataexchange()) {
    if (!this->dataexchange().IsInitialized()) return false;
  }
  if (has_unassembledcomponents()) {
    if (!this->unassembledcomponents().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->assemblies())) return false;
  return true;
}

void AssembliesType::Swap(AssembliesType* other) {
  if (other != this) {
    assembly_.Swap(&other->assembly_);
    std::swap(dataexchange_, other->dataexchange_);
    std::swap(unassembledcomponents_, other->unassembledcomponents_);
    assemblies_.Swap(&other->assemblies_);
    std::swap(versioninfo_, other->versioninfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AssembliesType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssembliesType_descriptor_;
  metadata.reflection = AssembliesType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AssemblyType::kCADComponentFieldNumber;
const int AssemblyType::kPropertiesFieldNumber;
const int AssemblyType::kConfigurationIDFieldNumber;
#endif  // !_MSC_VER

AssemblyType::AssemblyType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.AssemblyType)
}

void AssemblyType::InitAsDefaultInstance() {
  cadcomponent_ = const_cast< ::edu::vanderbilt::isis::meta::CADComponentType*>(&::edu::vanderbilt::isis::meta::CADComponentType::default_instance());
  properties_ = const_cast< ::edu::vanderbilt::isis::meta::PropertiesType*>(&::edu::vanderbilt::isis::meta::PropertiesType::default_instance());
}

AssemblyType::AssemblyType(const AssemblyType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.AssemblyType)
}

void AssemblyType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cadcomponent_ = NULL;
  properties_ = NULL;
  configurationid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssemblyType::~AssemblyType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.AssemblyType)
  SharedDtor();
}

void AssemblyType::SharedDtor() {
  if (configurationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete configurationid_;
  }
  if (this != default_instance_) {
    delete cadcomponent_;
    delete properties_;
  }
}

void AssemblyType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssemblyType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssemblyType_descriptor_;
}

const AssemblyType& AssemblyType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

AssemblyType* AssemblyType::default_instance_ = NULL;

AssemblyType* AssemblyType::New() const {
  return new AssemblyType;
}

void AssemblyType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_cadcomponent()) {
      if (cadcomponent_ != NULL) cadcomponent_->::edu::vanderbilt::isis::meta::CADComponentType::Clear();
    }
    if (has_properties()) {
      if (properties_ != NULL) properties_->::edu::vanderbilt::isis::meta::PropertiesType::Clear();
    }
    if (has_configurationid()) {
      if (configurationid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        configurationid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AssemblyType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.AssemblyType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cadcomponent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Properties;
        break;
      }

      // required .edu.vanderbilt.isis.meta.PropertiesType Properties = 4;
      case 4: {
        if (tag == 34) {
         parse_Properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ConfigurationID;
        break;
      }

      // required string ConfigurationID = 5;
      case 5: {
        if (tag == 42) {
         parse_ConfigurationID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_configurationid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->configurationid().data(), this->configurationid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "configurationid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.AssemblyType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.AssemblyType)
  return false;
#undef DO_
}

void AssemblyType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.AssemblyType)
  // optional .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 2;
  if (has_cadcomponent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cadcomponent(), output);
  }

  // required .edu.vanderbilt.isis.meta.PropertiesType Properties = 4;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->properties(), output);
  }

  // required string ConfigurationID = 5;
  if (has_configurationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configurationid().data(), this->configurationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "configurationid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->configurationid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.AssemblyType)
}

::google::protobuf::uint8* AssemblyType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.AssemblyType)
  // optional .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 2;
  if (has_cadcomponent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cadcomponent(), target);
  }

  // required .edu.vanderbilt.isis.meta.PropertiesType Properties = 4;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->properties(), target);
  }

  // required string ConfigurationID = 5;
  if (has_configurationid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configurationid().data(), this->configurationid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "configurationid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->configurationid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.AssemblyType)
  return target;
}

int AssemblyType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 2;
    if (has_cadcomponent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cadcomponent());
    }

    // required .edu.vanderbilt.isis.meta.PropertiesType Properties = 4;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required string ConfigurationID = 5;
    if (has_configurationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->configurationid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssemblyType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AssemblyType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AssemblyType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AssemblyType::MergeFrom(const AssemblyType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cadcomponent()) {
      mutable_cadcomponent()->::edu::vanderbilt::isis::meta::CADComponentType::MergeFrom(from.cadcomponent());
    }
    if (from.has_properties()) {
      mutable_properties()->::edu::vanderbilt::isis::meta::PropertiesType::MergeFrom(from.properties());
    }
    if (from.has_configurationid()) {
      set_configurationid(from.configurationid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AssemblyType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssemblyType::CopyFrom(const AssemblyType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssemblyType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  if (has_cadcomponent()) {
    if (!this->cadcomponent().IsInitialized()) return false;
  }
  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  return true;
}

void AssemblyType::Swap(AssemblyType* other) {
  if (other != this) {
    std::swap(cadcomponent_, other->cadcomponent_);
    std::swap(properties_, other->properties_);
    std::swap(configurationid_, other->configurationid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AssemblyType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssemblyType_descriptor_;
  metadata.reflection = AssemblyType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CADComponentType::kCADComponentFieldNumber;
const int CADComponentType::kParametricParametersFieldNumber;
const int CADComponentType::kConnectorsFieldNumber;
const int CADComponentType::kDatumsFieldNumber;
const int CADComponentType::kComponentIDFieldNumber;
const int CADComponentType::kAvmComponentIDFieldNumber;
const int CADComponentType::kMaterialIDFieldNumber;
const int CADComponentType::kNameFieldNumber;
const int CADComponentType::kSpecialInstructionFieldNumber;
const int CADComponentType::kStandaloneFieldNumber;
const int CADComponentType::kTypeFieldNumber;
const int CADComponentType::kCADModelIDFieldNumber;
const int CADComponentType::kDisplayNameFieldNumber;
#endif  // !_MSC_VER

CADComponentType::CADComponentType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.CADComponentType)
}

void CADComponentType::InitAsDefaultInstance() {
  parametricparameters_ = const_cast< ::edu::vanderbilt::isis::meta::ParametricParametersType*>(&::edu::vanderbilt::isis::meta::ParametricParametersType::default_instance());
}

CADComponentType::CADComponentType(const CADComponentType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.CADComponentType)
}

void CADComponentType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  parametricparameters_ = NULL;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avmcomponentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  materialid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  specialinstruction_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  standalone_ = false;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cadmodelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CADComponentType::~CADComponentType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.CADComponentType)
  SharedDtor();
}

void CADComponentType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (avmcomponentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avmcomponentid_;
  }
  if (materialid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete materialid_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (specialinstruction_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete specialinstruction_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (cadmodelid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cadmodelid_;
  }
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
    delete parametricparameters_;
  }
}

void CADComponentType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CADComponentType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CADComponentType_descriptor_;
}

const CADComponentType& CADComponentType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

CADComponentType* CADComponentType::default_instance_ = NULL;

CADComponentType* CADComponentType::New() const {
  return new CADComponentType;
}

void CADComponentType::Clear() {
  if (_has_bits_[0 / 32] & 242) {
    if (has_parametricparameters()) {
      if (parametricparameters_ != NULL) parametricparameters_->::edu::vanderbilt::isis::meta::ParametricParametersType::Clear();
    }
    if (has_componentid()) {
      if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        componentid_->clear();
      }
    }
    if (has_avmcomponentid()) {
      if (avmcomponentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        avmcomponentid_->clear();
      }
    }
    if (has_materialid()) {
      if (materialid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        materialid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    if (has_specialinstruction()) {
      if (specialinstruction_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        specialinstruction_->clear();
      }
    }
    standalone_ = false;
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_cadmodelid()) {
      if (cadmodelid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cadmodelid_->clear();
      }
    }
    if (has_displayname()) {
      if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        displayname_->clear();
      }
    }
  }
  cadcomponent_.Clear();
  connectors_.Clear();
  datums_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CADComponentType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.CADComponentType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
      case 1: {
        if (tag == 10) {
         parse_CADComponent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cadcomponent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_CADComponent;
        if (input->ExpectTag(34)) goto parse_ParametricParameters;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.ParametricParametersType ParametricParameters = 4;
      case 4: {
        if (tag == 34) {
         parse_ParametricParameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parametricparameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ComponentID;
        break;
      }

      // optional string ComponentID = 5;
      case 5: {
        if (tag == 42) {
         parse_ComponentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_MaterialID;
        break;
      }

      // optional string MaterialID = 6;
      case 6: {
        if (tag == 50) {
         parse_MaterialID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_materialid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->materialid().data(), this->materialid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "materialid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Name;
        break;
      }

      // optional string Name = 7;
      case 7: {
        if (tag == 58) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SpecialInstruction;
        break;
      }

      // optional string SpecialInstruction = 8;
      case 8: {
        if (tag == 66) {
         parse_SpecialInstruction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_specialinstruction()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->specialinstruction().data(), this->specialinstruction().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "specialinstruction");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Standalone;
        break;
      }

      // optional bool Standalone = 9;
      case 9: {
        if (tag == 72) {
         parse_Standalone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &standalone_)));
          set_has_standalone();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Type;
        break;
      }

      // optional string Type = 10;
      case 10: {
        if (tag == 82) {
         parse_Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_AvmComponentID;
        break;
      }

      // optional string AvmComponentID = 11;
      case 11: {
        if (tag == 90) {
         parse_AvmComponentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avmcomponentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->avmcomponentid().data(), this->avmcomponentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "avmcomponentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_CADModelID;
        break;
      }

      // optional string CADModelID = 12;
      case 12: {
        if (tag == 98) {
         parse_CADModelID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cadmodelid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cadmodelid().data(), this->cadmodelid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cadmodelid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_DisplayName;
        break;
      }

      // optional string DisplayName = 13;
      case 13: {
        if (tag == 106) {
         parse_DisplayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_Connectors;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ConnectorType Connectors = 14;
      case 14: {
        if (tag == 114) {
         parse_Connectors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_connectors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_Connectors;
        if (input->ExpectTag(122)) goto parse_Datums;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 15;
      case 15: {
        if (tag == 122) {
         parse_Datums:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datums()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_Datums;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.CADComponentType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.CADComponentType)
  return false;
#undef DO_
}

void CADComponentType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.CADComponentType)
  // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
  for (int i = 0; i < this->cadcomponent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cadcomponent(i), output);
  }

  // optional .edu.vanderbilt.isis.meta.ParametricParametersType ParametricParameters = 4;
  if (has_parametricparameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->parametricparameters(), output);
  }

  // optional string ComponentID = 5;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->componentid(), output);
  }

  // optional string MaterialID = 6;
  if (has_materialid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->materialid().data(), this->materialid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "materialid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->materialid(), output);
  }

  // optional string Name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // optional string SpecialInstruction = 8;
  if (has_specialinstruction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->specialinstruction().data(), this->specialinstruction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "specialinstruction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->specialinstruction(), output);
  }

  // optional bool Standalone = 9;
  if (has_standalone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->standalone(), output);
  }

  // optional string Type = 10;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->type(), output);
  }

  // optional string AvmComponentID = 11;
  if (has_avmcomponentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->avmcomponentid().data(), this->avmcomponentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "avmcomponentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->avmcomponentid(), output);
  }

  // optional string CADModelID = 12;
  if (has_cadmodelid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cadmodelid().data(), this->cadmodelid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cadmodelid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->cadmodelid(), output);
  }

  // optional string DisplayName = 13;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->displayname(), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorType Connectors = 14;
  for (int i = 0; i < this->connectors_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->connectors(i), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 15;
  for (int i = 0; i < this->datums_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->datums(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.CADComponentType)
}

::google::protobuf::uint8* CADComponentType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.CADComponentType)
  // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
  for (int i = 0; i < this->cadcomponent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cadcomponent(i), target);
  }

  // optional .edu.vanderbilt.isis.meta.ParametricParametersType ParametricParameters = 4;
  if (has_parametricparameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->parametricparameters(), target);
  }

  // optional string ComponentID = 5;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->componentid(), target);
  }

  // optional string MaterialID = 6;
  if (has_materialid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->materialid().data(), this->materialid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "materialid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->materialid(), target);
  }

  // optional string Name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // optional string SpecialInstruction = 8;
  if (has_specialinstruction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->specialinstruction().data(), this->specialinstruction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "specialinstruction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->specialinstruction(), target);
  }

  // optional bool Standalone = 9;
  if (has_standalone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->standalone(), target);
  }

  // optional string Type = 10;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->type(), target);
  }

  // optional string AvmComponentID = 11;
  if (has_avmcomponentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->avmcomponentid().data(), this->avmcomponentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "avmcomponentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->avmcomponentid(), target);
  }

  // optional string CADModelID = 12;
  if (has_cadmodelid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cadmodelid().data(), this->cadmodelid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cadmodelid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->cadmodelid(), target);
  }

  // optional string DisplayName = 13;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->displayname(), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorType Connectors = 14;
  for (int i = 0; i < this->connectors_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->connectors(i), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 15;
  for (int i = 0; i < this->datums_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->datums(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.CADComponentType)
  return target;
}

int CADComponentType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .edu.vanderbilt.isis.meta.ParametricParametersType ParametricParameters = 4;
    if (has_parametricparameters()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parametricparameters());
    }

    // optional string ComponentID = 5;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

    // optional string AvmComponentID = 11;
    if (has_avmcomponentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->avmcomponentid());
    }

    // optional string MaterialID = 6;
    if (has_materialid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->materialid());
    }

    // optional string Name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string SpecialInstruction = 8;
    if (has_specialinstruction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->specialinstruction());
    }

    // optional bool Standalone = 9;
    if (has_standalone()) {
      total_size += 1 + 1;
    }

    // optional string Type = 10;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string CADModelID = 12;
    if (has_cadmodelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cadmodelid());
    }

    // optional string DisplayName = 13;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
  total_size += 1 * this->cadcomponent_size();
  for (int i = 0; i < this->cadcomponent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cadcomponent(i));
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorType Connectors = 14;
  total_size += 1 * this->connectors_size();
  for (int i = 0; i < this->connectors_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->connectors(i));
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 15;
  total_size += 1 * this->datums_size();
  for (int i = 0; i < this->datums_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datums(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CADComponentType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CADComponentType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CADComponentType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CADComponentType::MergeFrom(const CADComponentType& from) {
  GOOGLE_CHECK_NE(&from, this);
  cadcomponent_.MergeFrom(from.cadcomponent_);
  connectors_.MergeFrom(from.connectors_);
  datums_.MergeFrom(from.datums_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_parametricparameters()) {
      mutable_parametricparameters()->::edu::vanderbilt::isis::meta::ParametricParametersType::MergeFrom(from.parametricparameters());
    }
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_avmcomponentid()) {
      set_avmcomponentid(from.avmcomponentid());
    }
    if (from.has_materialid()) {
      set_materialid(from.materialid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_specialinstruction()) {
      set_specialinstruction(from.specialinstruction());
    }
    if (from.has_standalone()) {
      set_standalone(from.standalone());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cadmodelid()) {
      set_cadmodelid(from.cadmodelid());
    }
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CADComponentType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CADComponentType::CopyFrom(const CADComponentType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CADComponentType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cadcomponent())) return false;
  if (has_parametricparameters()) {
    if (!this->parametricparameters().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->connectors())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->datums())) return false;
  return true;
}

void CADComponentType::Swap(CADComponentType* other) {
  if (other != this) {
    cadcomponent_.Swap(&other->cadcomponent_);
    std::swap(parametricparameters_, other->parametricparameters_);
    connectors_.Swap(&other->connectors_);
    datums_.Swap(&other->datums_);
    std::swap(componentid_, other->componentid_);
    std::swap(avmcomponentid_, other->avmcomponentid_);
    std::swap(materialid_, other->materialid_);
    std::swap(name_, other->name_);
    std::swap(specialinstruction_, other->specialinstruction_);
    std::swap(standalone_, other->standalone_);
    std::swap(type_, other->type_);
    std::swap(cadmodelid_, other->cadmodelid_);
    std::swap(displayname_, other->displayname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CADComponentType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CADComponentType_descriptor_;
  metadata.reflection = CADComponentType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CADParameterType::kUnitsFieldNumber;
const int CADParameterType::kNameFieldNumber;
const int CADParameterType::kTypeFieldNumber;
const int CADParameterType::kValueFieldNumber;
#endif  // !_MSC_VER

CADParameterType::CADParameterType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.CADParameterType)
}

void CADParameterType::InitAsDefaultInstance() {
  units_ = const_cast< ::edu::vanderbilt::isis::meta::UnitsType*>(&::edu::vanderbilt::isis::meta::UnitsType::default_instance());
}

CADParameterType::CADParameterType(const CADParameterType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.CADParameterType)
}

void CADParameterType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  units_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CADParameterType::~CADParameterType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.CADParameterType)
  SharedDtor();
}

void CADParameterType::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
    delete units_;
  }
}

void CADParameterType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CADParameterType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CADParameterType_descriptor_;
}

const CADParameterType& CADParameterType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

CADParameterType* CADParameterType::default_instance_ = NULL;

CADParameterType* CADParameterType::New() const {
  return new CADParameterType;
}

void CADParameterType::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_units()) {
      if (units_ != NULL) units_->::edu::vanderbilt::isis::meta::UnitsType::Clear();
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        type_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CADParameterType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.CADParameterType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // required string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Type;
        break;
      }

      // required string Type = 3;
      case 3: {
        if (tag == 26) {
         parse_Type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Value;
        break;
      }

      // required string Value = 4;
      case 4: {
        if (tag == 34) {
         parse_Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.CADParameterType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.CADParameterType)
  return false;
#undef DO_
}

void CADParameterType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.CADParameterType)
  // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
  if (has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->units(), output);
  }

  // required string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string Type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // required string Value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.CADParameterType)
}

::google::protobuf::uint8* CADParameterType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.CADParameterType)
  // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
  if (has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->units(), target);
  }

  // required string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string Type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // required string Value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.CADParameterType)
  return target;
}

int CADParameterType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->units());
    }

    // required string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string Type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required string Value = 4;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CADParameterType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CADParameterType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CADParameterType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CADParameterType::MergeFrom(const CADParameterType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_units()) {
      mutable_units()->::edu::vanderbilt::isis::meta::UnitsType::MergeFrom(from.units());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CADParameterType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CADParameterType::CopyFrom(const CADParameterType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CADParameterType::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_units()) {
    if (!this->units().IsInitialized()) return false;
  }
  return true;
}

void CADParameterType::Swap(CADParameterType* other) {
  if (other != this) {
    std::swap(units_, other->units_);
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CADParameterType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CADParameterType_descriptor_;
  metadata.reflection = CADParameterType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentType::kComponentIDFieldNumber;
const int ComponentType::kInfiniteCycleFieldNumber;
#endif  // !_MSC_VER

ComponentType::ComponentType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ComponentType)
}

void ComponentType::InitAsDefaultInstance() {
}

ComponentType::ComponentType(const ComponentType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ComponentType)
}

void ComponentType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  infinitecycle_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentType::~ComponentType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ComponentType)
  SharedDtor();
}

void ComponentType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (this != default_instance_) {
  }
}

void ComponentType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentType_descriptor_;
}

const ComponentType& ComponentType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ComponentType* ComponentType::default_instance_ = NULL;

ComponentType* ComponentType::New() const {
  return new ComponentType;
}

void ComponentType::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_componentid()) {
      if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        componentid_->clear();
      }
    }
    infinitecycle_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ComponentType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ComponentID = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_InfiniteCycle;
        break;
      }

      // required bool InfiniteCycle = 3;
      case 3: {
        if (tag == 24) {
         parse_InfiniteCycle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &infinitecycle_)));
          set_has_infinitecycle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ComponentType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ComponentType)
  return false;
#undef DO_
}

void ComponentType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ComponentType)
  // required string ComponentID = 2;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->componentid(), output);
  }

  // required bool InfiniteCycle = 3;
  if (has_infinitecycle()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->infinitecycle(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ComponentType)
}

::google::protobuf::uint8* ComponentType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ComponentType)
  // required string ComponentID = 2;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->componentid(), target);
  }

  // required bool InfiniteCycle = 3;
  if (has_infinitecycle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->infinitecycle(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ComponentType)
  return target;
}

int ComponentType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ComponentID = 2;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

    // required bool InfiniteCycle = 3;
    if (has_infinitecycle()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentType::MergeFrom(const ComponentType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_infinitecycle()) {
      set_infinitecycle(from.infinitecycle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentType::CopyFrom(const ComponentType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ComponentType::Swap(ComponentType* other) {
  if (other != this) {
    std::swap(componentid_, other->componentid_);
    std::swap(infinitecycle_, other->infinitecycle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComponentType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentType_descriptor_;
  metadata.reflection = ComponentType_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* ConnectorDatumType_AlignType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectorDatumType_AlignType_descriptor_;
}
bool ConnectorDatumType_AlignType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ConnectorDatumType_AlignType ConnectorDatumType::MATE;
const ConnectorDatumType_AlignType ConnectorDatumType::ALIGN;
const ConnectorDatumType_AlignType ConnectorDatumType::AlignType_MIN;
const ConnectorDatumType_AlignType ConnectorDatumType::AlignType_MAX;
const int ConnectorDatumType::AlignType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ConnectorDatumType::kAlignmentFieldNumber;
const int ConnectorDatumType::kIDFieldNumber;
const int ConnectorDatumType::kDisplayNameFieldNumber;
#endif  // !_MSC_VER

ConnectorDatumType::ConnectorDatumType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ConnectorDatumType)
}

void ConnectorDatumType::InitAsDefaultInstance() {
}

ConnectorDatumType::ConnectorDatumType(const ConnectorDatumType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ConnectorDatumType)
}

void ConnectorDatumType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  alignment_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConnectorDatumType::~ConnectorDatumType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ConnectorDatumType)
  SharedDtor();
}

void ConnectorDatumType::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
  }
}

void ConnectorDatumType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectorDatumType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectorDatumType_descriptor_;
}

const ConnectorDatumType& ConnectorDatumType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ConnectorDatumType* ConnectorDatumType::default_instance_ = NULL;

ConnectorDatumType* ConnectorDatumType::New() const {
  return new ConnectorDatumType;
}

void ConnectorDatumType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    alignment_ = 0;
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    if (has_displayname()) {
      if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        displayname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConnectorDatumType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ConnectorDatumType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DisplayName;
        break;
      }

      // required string DisplayName = 2;
      case 2: {
        if (tag == 18) {
         parse_DisplayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Alignment;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.ConnectorDatumType.AlignType Alignment = 3;
      case 3: {
        if (tag == 24) {
         parse_Alignment:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::edu::vanderbilt::isis::meta::ConnectorDatumType_AlignType_IsValid(value)) {
            set_alignment(static_cast< ::edu::vanderbilt::isis::meta::ConnectorDatumType_AlignType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ConnectorDatumType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ConnectorDatumType)
  return false;
#undef DO_
}

void ConnectorDatumType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ConnectorDatumType)
  // optional string ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string DisplayName = 2;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->displayname(), output);
  }

  // optional .edu.vanderbilt.isis.meta.ConnectorDatumType.AlignType Alignment = 3;
  if (has_alignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->alignment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ConnectorDatumType)
}

::google::protobuf::uint8* ConnectorDatumType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ConnectorDatumType)
  // optional string ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string DisplayName = 2;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->displayname(), target);
  }

  // optional .edu.vanderbilt.isis.meta.ConnectorDatumType.AlignType Alignment = 3;
  if (has_alignment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->alignment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ConnectorDatumType)
  return target;
}

int ConnectorDatumType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .edu.vanderbilt.isis.meta.ConnectorDatumType.AlignType Alignment = 3;
    if (has_alignment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->alignment());
    }

    // optional string ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string DisplayName = 2;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectorDatumType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConnectorDatumType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConnectorDatumType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConnectorDatumType::MergeFrom(const ConnectorDatumType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_alignment()) {
      set_alignment(from.alignment());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConnectorDatumType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectorDatumType::CopyFrom(const ConnectorDatumType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectorDatumType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void ConnectorDatumType::Swap(ConnectorDatumType* other) {
  if (other != this) {
    std::swap(alignment_, other->alignment_);
    std::swap(id_, other->id_);
    std::swap(displayname_, other->displayname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConnectorDatumType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectorDatumType_descriptor_;
  metadata.reflection = ConnectorDatumType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConnectorType::kIDFieldNumber;
const int ConnectorType::kDisplayNameFieldNumber;
const int ConnectorType::kDatumsFieldNumber;
#endif  // !_MSC_VER

ConnectorType::ConnectorType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ConnectorType)
}

void ConnectorType::InitAsDefaultInstance() {
}

ConnectorType::ConnectorType(const ConnectorType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ConnectorType)
}

void ConnectorType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConnectorType::~ConnectorType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ConnectorType)
  SharedDtor();
}

void ConnectorType::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
  }
}

void ConnectorType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectorType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectorType_descriptor_;
}

const ConnectorType& ConnectorType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ConnectorType* ConnectorType::default_instance_ = NULL;

ConnectorType* ConnectorType::New() const {
  return new ConnectorType;
}

void ConnectorType::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    if (has_displayname()) {
      if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        displayname_->clear();
      }
    }
  }
  datums_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConnectorType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ConnectorType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DisplayName;
        break;
      }

      // required string DisplayName = 2;
      case 2: {
        if (tag == 18) {
         parse_DisplayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Datums;
        break;
      }

      // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 3;
      case 3: {
        if (tag == 26) {
         parse_Datums:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datums()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Datums;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ConnectorType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ConnectorType)
  return false;
#undef DO_
}

void ConnectorType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ConnectorType)
  // required string ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string DisplayName = 2;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->displayname(), output);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 3;
  for (int i = 0; i < this->datums_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datums(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ConnectorType)
}

::google::protobuf::uint8* ConnectorType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ConnectorType)
  // required string ID = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string DisplayName = 2;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->displayname(), target);
  }

  // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 3;
  for (int i = 0; i < this->datums_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->datums(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ConnectorType)
  return target;
}

int ConnectorType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string DisplayName = 2;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.ConnectorDatumType Datums = 3;
  total_size += 1 * this->datums_size();
  for (int i = 0; i < this->datums_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datums(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectorType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConnectorType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConnectorType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConnectorType::MergeFrom(const ConnectorType& from) {
  GOOGLE_CHECK_NE(&from, this);
  datums_.MergeFrom(from.datums_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConnectorType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectorType::CopyFrom(const ConnectorType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectorType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->datums())) return false;
  return true;
}

void ConnectorType::Swap(ConnectorType* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(displayname_, other->displayname_);
    datums_.Swap(&other->datums_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConnectorType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectorType_descriptor_;
  metadata.reflection = ConnectorType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConstraintFeatureType::kComponentIDFieldNumber;
const int ConstraintFeatureType::kFeatureNameFieldNumber;
const int ConstraintFeatureType::kFeatureOrientationTypeFieldNumber;
#endif  // !_MSC_VER

ConstraintFeatureType::ConstraintFeatureType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ConstraintFeatureType)
}

void ConstraintFeatureType::InitAsDefaultInstance() {
}

ConstraintFeatureType::ConstraintFeatureType(const ConstraintFeatureType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ConstraintFeatureType)
}

void ConstraintFeatureType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  featurename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  featureorientationtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConstraintFeatureType::~ConstraintFeatureType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  SharedDtor();
}

void ConstraintFeatureType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (featurename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featurename_;
  }
  if (featureorientationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featureorientationtype_;
  }
  if (this != default_instance_) {
  }
}

void ConstraintFeatureType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConstraintFeatureType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConstraintFeatureType_descriptor_;
}

const ConstraintFeatureType& ConstraintFeatureType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ConstraintFeatureType* ConstraintFeatureType::default_instance_ = NULL;

ConstraintFeatureType* ConstraintFeatureType::New() const {
  return new ConstraintFeatureType;
}

void ConstraintFeatureType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_componentid()) {
      if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        componentid_->clear();
      }
    }
    if (has_featurename()) {
      if (featurename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featurename_->clear();
      }
    }
    if (has_featureorientationtype()) {
      if (featureorientationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featureorientationtype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConstraintFeatureType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ComponentID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_FeatureName;
        break;
      }

      // required string FeatureName = 2;
      case 2: {
        if (tag == 18) {
         parse_FeatureName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featurename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featurename().data(), this->featurename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featurename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_FeatureOrientationType;
        break;
      }

      // required string FeatureOrientationType = 3;
      case 3: {
        if (tag == 26) {
         parse_FeatureOrientationType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featureorientationtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featureorientationtype().data(), this->featureorientationtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featureorientationtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  return false;
#undef DO_
}

void ConstraintFeatureType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  // required string ComponentID = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->componentid(), output);
  }

  // required string FeatureName = 2;
  if (has_featurename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featurename().data(), this->featurename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featurename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->featurename(), output);
  }

  // required string FeatureOrientationType = 3;
  if (has_featureorientationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureorientationtype().data(), this->featureorientationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureorientationtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->featureorientationtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ConstraintFeatureType)
}

::google::protobuf::uint8* ConstraintFeatureType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  // required string ComponentID = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->componentid(), target);
  }

  // required string FeatureName = 2;
  if (has_featurename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featurename().data(), this->featurename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featurename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->featurename(), target);
  }

  // required string FeatureOrientationType = 3;
  if (has_featureorientationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureorientationtype().data(), this->featureorientationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureorientationtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->featureorientationtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ConstraintFeatureType)
  return target;
}

int ConstraintFeatureType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ComponentID = 1;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

    // required string FeatureName = 2;
    if (has_featurename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featurename());
    }

    // required string FeatureOrientationType = 3;
    if (has_featureorientationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featureorientationtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConstraintFeatureType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConstraintFeatureType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConstraintFeatureType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConstraintFeatureType::MergeFrom(const ConstraintFeatureType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_featurename()) {
      set_featurename(from.featurename());
    }
    if (from.has_featureorientationtype()) {
      set_featureorientationtype(from.featureorientationtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConstraintFeatureType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstraintFeatureType::CopyFrom(const ConstraintFeatureType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintFeatureType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ConstraintFeatureType::Swap(ConstraintFeatureType* other) {
  if (other != this) {
    std::swap(componentid_, other->componentid_);
    std::swap(featurename_, other->featurename_);
    std::swap(featureorientationtype_, other->featureorientationtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConstraintFeatureType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConstraintFeatureType_descriptor_;
  metadata.reflection = ConstraintFeatureType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConstraintOffsetType::kUnitsFieldNumber;
const int ConstraintOffsetType::kOffsetAlignmentTypeFieldNumber;
const int ConstraintOffsetType::kValueFieldNumber;
#endif  // !_MSC_VER

ConstraintOffsetType::ConstraintOffsetType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ConstraintOffsetType)
}

void ConstraintOffsetType::InitAsDefaultInstance() {
  units_ = const_cast< ::edu::vanderbilt::isis::meta::UnitsType*>(&::edu::vanderbilt::isis::meta::UnitsType::default_instance());
}

ConstraintOffsetType::ConstraintOffsetType(const ConstraintOffsetType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ConstraintOffsetType)
}

void ConstraintOffsetType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  units_ = NULL;
  offsetalignmenttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConstraintOffsetType::~ConstraintOffsetType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  SharedDtor();
}

void ConstraintOffsetType::SharedDtor() {
  if (offsetalignmenttype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete offsetalignmenttype_;
  }
  if (this != default_instance_) {
    delete units_;
  }
}

void ConstraintOffsetType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConstraintOffsetType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConstraintOffsetType_descriptor_;
}

const ConstraintOffsetType& ConstraintOffsetType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ConstraintOffsetType* ConstraintOffsetType::default_instance_ = NULL;

ConstraintOffsetType* ConstraintOffsetType::New() const {
  return new ConstraintOffsetType;
}

void ConstraintOffsetType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_units()) {
      if (units_ != NULL) units_->::edu::vanderbilt::isis::meta::UnitsType::Clear();
    }
    if (has_offsetalignmenttype()) {
      if (offsetalignmenttype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        offsetalignmenttype_->clear();
      }
    }
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConstraintOffsetType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_OffsetAlignmentType;
        break;
      }

      // required string OffsetAlignmentType = 2;
      case 2: {
        if (tag == 18) {
         parse_OffsetAlignmentType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offsetalignmenttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->offsetalignmenttype().data(), this->offsetalignmenttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "offsetalignmenttype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_Value;
        break;
      }

      // required double Value = 3;
      case 3: {
        if (tag == 25) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  return false;
#undef DO_
}

void ConstraintOffsetType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
  if (has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->units(), output);
  }

  // required string OffsetAlignmentType = 2;
  if (has_offsetalignmenttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offsetalignmenttype().data(), this->offsetalignmenttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "offsetalignmenttype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->offsetalignmenttype(), output);
  }

  // required double Value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ConstraintOffsetType)
}

::google::protobuf::uint8* ConstraintOffsetType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
  if (has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->units(), target);
  }

  // required string OffsetAlignmentType = 2;
  if (has_offsetalignmenttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->offsetalignmenttype().data(), this->offsetalignmenttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "offsetalignmenttype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->offsetalignmenttype(), target);
  }

  // required double Value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ConstraintOffsetType)
  return target;
}

int ConstraintOffsetType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->units());
    }

    // required string OffsetAlignmentType = 2;
    if (has_offsetalignmenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->offsetalignmenttype());
    }

    // required double Value = 3;
    if (has_value()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConstraintOffsetType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConstraintOffsetType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConstraintOffsetType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConstraintOffsetType::MergeFrom(const ConstraintOffsetType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_units()) {
      mutable_units()->::edu::vanderbilt::isis::meta::UnitsType::MergeFrom(from.units());
    }
    if (from.has_offsetalignmenttype()) {
      set_offsetalignmenttype(from.offsetalignmenttype());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConstraintOffsetType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstraintOffsetType::CopyFrom(const ConstraintOffsetType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintOffsetType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  if (has_units()) {
    if (!this->units().IsInitialized()) return false;
  }
  return true;
}

void ConstraintOffsetType::Swap(ConstraintOffsetType* other) {
  if (other != this) {
    std::swap(units_, other->units_);
    std::swap(offsetalignmenttype_, other->offsetalignmenttype_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConstraintOffsetType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConstraintOffsetType_descriptor_;
  metadata.reflection = ConstraintOffsetType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConstraintType::kPairFieldNumber;
const int ConstraintType::kComponentIDFieldNumber;
#endif  // !_MSC_VER

ConstraintType::ConstraintType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ConstraintType)
}

void ConstraintType::InitAsDefaultInstance() {
}

ConstraintType::ConstraintType(const ConstraintType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ConstraintType)
}

void ConstraintType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConstraintType::~ConstraintType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ConstraintType)
  SharedDtor();
}

void ConstraintType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (this != default_instance_) {
  }
}

void ConstraintType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConstraintType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConstraintType_descriptor_;
}

const ConstraintType& ConstraintType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ConstraintType* ConstraintType::default_instance_ = NULL;

ConstraintType* ConstraintType::New() const {
  return new ConstraintType;
}

void ConstraintType::Clear() {
  if (has_componentid()) {
    if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      componentid_->clear();
    }
  }
  pair_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConstraintType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ConstraintType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.PairType Pair = 1;
      case 1: {
        if (tag == 10) {
         parse_Pair:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pair()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Pair;
        if (input->ExpectTag(18)) goto parse_ComponentID;
        break;
      }

      // optional string ComponentID = 2;
      case 2: {
        if (tag == 18) {
         parse_ComponentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ConstraintType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ConstraintType)
  return false;
#undef DO_
}

void ConstraintType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ConstraintType)
  // repeated .edu.vanderbilt.isis.meta.PairType Pair = 1;
  for (int i = 0; i < this->pair_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pair(i), output);
  }

  // optional string ComponentID = 2;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->componentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ConstraintType)
}

::google::protobuf::uint8* ConstraintType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ConstraintType)
  // repeated .edu.vanderbilt.isis.meta.PairType Pair = 1;
  for (int i = 0; i < this->pair_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pair(i), target);
  }

  // optional string ComponentID = 2;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->componentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ConstraintType)
  return target;
}

int ConstraintType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string ComponentID = 2;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.PairType Pair = 1;
  total_size += 1 * this->pair_size();
  for (int i = 0; i < this->pair_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pair(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConstraintType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConstraintType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConstraintType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConstraintType::MergeFrom(const ConstraintType& from) {
  GOOGLE_CHECK_NE(&from, this);
  pair_.MergeFrom(from.pair_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConstraintType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstraintType::CopyFrom(const ConstraintType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->pair())) return false;
  return true;
}

void ConstraintType::Swap(ConstraintType* other) {
  if (other != this) {
    pair_.Swap(&other->pair_);
    std::swap(componentid_, other->componentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConstraintType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConstraintType_descriptor_;
  metadata.reflection = ConstraintType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DataExchangeType::kSTEPFormatFieldNumber;
#endif  // !_MSC_VER

DataExchangeType::DataExchangeType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.DataExchangeType)
}

void DataExchangeType::InitAsDefaultInstance() {
}

DataExchangeType::DataExchangeType(const DataExchangeType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.DataExchangeType)
}

void DataExchangeType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataExchangeType::~DataExchangeType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.DataExchangeType)
  SharedDtor();
}

void DataExchangeType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataExchangeType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataExchangeType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataExchangeType_descriptor_;
}

const DataExchangeType& DataExchangeType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

DataExchangeType* DataExchangeType::default_instance_ = NULL;

DataExchangeType* DataExchangeType::New() const {
  return new DataExchangeType;
}

void DataExchangeType::Clear() {
  stepformat_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataExchangeType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.DataExchangeType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.STEPFormatType STEPFormat = 1;
      case 1: {
        if (tag == 10) {
         parse_STEPFormat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stepformat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_STEPFormat;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.DataExchangeType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.DataExchangeType)
  return false;
#undef DO_
}

void DataExchangeType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.DataExchangeType)
  // repeated .edu.vanderbilt.isis.meta.STEPFormatType STEPFormat = 1;
  for (int i = 0; i < this->stepformat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stepformat(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.DataExchangeType)
}

::google::protobuf::uint8* DataExchangeType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.DataExchangeType)
  // repeated .edu.vanderbilt.isis.meta.STEPFormatType STEPFormat = 1;
  for (int i = 0; i < this->stepformat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->stepformat(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.DataExchangeType)
  return target;
}

int DataExchangeType::ByteSize() const {
  int total_size = 0;

  // repeated .edu.vanderbilt.isis.meta.STEPFormatType STEPFormat = 1;
  total_size += 1 * this->stepformat_size();
  for (int i = 0; i < this->stepformat_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stepformat(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataExchangeType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataExchangeType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataExchangeType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataExchangeType::MergeFrom(const DataExchangeType& from) {
  GOOGLE_CHECK_NE(&from, this);
  stepformat_.MergeFrom(from.stepformat_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataExchangeType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataExchangeType::CopyFrom(const DataExchangeType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataExchangeType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->stepformat())) return false;
  return true;
}

void DataExchangeType::Swap(DataExchangeType* other) {
  if (other != this) {
    stepformat_.Swap(&other->stepformat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataExchangeType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataExchangeType_descriptor_;
  metadata.reflection = DataExchangeType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FeatureType::kComponentIDFieldNumber;
const int FeatureType::kNameFieldNumber;
#endif  // !_MSC_VER

FeatureType::FeatureType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.FeatureType)
}

void FeatureType::InitAsDefaultInstance() {
}

FeatureType::FeatureType(const FeatureType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.FeatureType)
}

void FeatureType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FeatureType::~FeatureType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.FeatureType)
  SharedDtor();
}

void FeatureType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void FeatureType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeatureType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FeatureType_descriptor_;
}

const FeatureType& FeatureType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

FeatureType* FeatureType::default_instance_ = NULL;

FeatureType* FeatureType::New() const {
  return new FeatureType;
}

void FeatureType::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_componentid()) {
      if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        componentid_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FeatureType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.FeatureType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ComponentID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // required string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.FeatureType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.FeatureType)
  return false;
#undef DO_
}

void FeatureType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.FeatureType)
  // required string ComponentID = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->componentid(), output);
  }

  // required string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.FeatureType)
}

::google::protobuf::uint8* FeatureType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.FeatureType)
  // required string ComponentID = 1;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->componentid(), target);
  }

  // required string Name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.FeatureType)
  return target;
}

int FeatureType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ComponentID = 1;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

    // required string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeatureType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FeatureType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FeatureType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FeatureType::MergeFrom(const FeatureType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FeatureType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureType::CopyFrom(const FeatureType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FeatureType::Swap(FeatureType* other) {
  if (other != this) {
    std::swap(componentid_, other->componentid_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FeatureType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FeatureType_descriptor_;
  metadata.reflection = FeatureType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FeaturesType::kFeatureFieldNumber;
const int FeaturesType::kFeatureGeometryTypeFieldNumber;
const int FeaturesType::kFeatureIDFieldNumber;
const int FeaturesType::kFeatureInterfaceTypeFieldNumber;
const int FeaturesType::kGeometryTypeFieldNumber;
const int FeaturesType::kPrimaryGeometryQualifierFieldNumber;
const int FeaturesType::kSecondaryGeometryQualifierFieldNumber;
#endif  // !_MSC_VER

FeaturesType::FeaturesType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.FeaturesType)
}

void FeaturesType::InitAsDefaultInstance() {
}

FeaturesType::FeaturesType(const FeaturesType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.FeaturesType)
}

void FeaturesType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  featuregeometrytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  featureid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  featureinterfacetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  geometrytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primarygeometryqualifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondarygeometryqualifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FeaturesType::~FeaturesType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.FeaturesType)
  SharedDtor();
}

void FeaturesType::SharedDtor() {
  if (featuregeometrytype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featuregeometrytype_;
  }
  if (featureid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featureid_;
  }
  if (featureinterfacetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featureinterfacetype_;
  }
  if (geometrytype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete geometrytype_;
  }
  if (primarygeometryqualifier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete primarygeometryqualifier_;
  }
  if (secondarygeometryqualifier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secondarygeometryqualifier_;
  }
  if (this != default_instance_) {
  }
}

void FeaturesType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FeaturesType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FeaturesType_descriptor_;
}

const FeaturesType& FeaturesType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

FeaturesType* FeaturesType::default_instance_ = NULL;

FeaturesType* FeaturesType::New() const {
  return new FeaturesType;
}

void FeaturesType::Clear() {
  if (_has_bits_[0 / 32] & 126) {
    if (has_featuregeometrytype()) {
      if (featuregeometrytype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featuregeometrytype_->clear();
      }
    }
    if (has_featureid()) {
      if (featureid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featureid_->clear();
      }
    }
    if (has_featureinterfacetype()) {
      if (featureinterfacetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featureinterfacetype_->clear();
      }
    }
    if (has_geometrytype()) {
      if (geometrytype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        geometrytype_->clear();
      }
    }
    if (has_primarygeometryqualifier()) {
      if (primarygeometryqualifier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        primarygeometryqualifier_->clear();
      }
    }
    if (has_secondarygeometryqualifier()) {
      if (secondarygeometryqualifier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        secondarygeometryqualifier_->clear();
      }
    }
  }
  feature_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FeaturesType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.FeaturesType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.FeatureType Feature = 1;
      case 1: {
        if (tag == 10) {
         parse_Feature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_feature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Feature;
        if (input->ExpectTag(18)) goto parse_FeatureGeometryType;
        break;
      }

      // required string FeatureGeometryType = 2;
      case 2: {
        if (tag == 18) {
         parse_FeatureGeometryType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featuregeometrytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featuregeometrytype().data(), this->featuregeometrytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featuregeometrytype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_FeatureID;
        break;
      }

      // required string FeatureID = 3;
      case 3: {
        if (tag == 26) {
         parse_FeatureID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featureid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featureid().data(), this->featureid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featureid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FeatureInterfaceType;
        break;
      }

      // required string FeatureInterfaceType = 4;
      case 4: {
        if (tag == 34) {
         parse_FeatureInterfaceType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featureinterfacetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featureinterfacetype().data(), this->featureinterfacetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featureinterfacetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_GeometryType;
        break;
      }

      // required string GeometryType = 5;
      case 5: {
        if (tag == 42) {
         parse_GeometryType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_geometrytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->geometrytype().data(), this->geometrytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "geometrytype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_PrimaryGeometryQualifier;
        break;
      }

      // required string PrimaryGeometryQualifier = 6;
      case 6: {
        if (tag == 50) {
         parse_PrimaryGeometryQualifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primarygeometryqualifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->primarygeometryqualifier().data(), this->primarygeometryqualifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "primarygeometryqualifier");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_SecondaryGeometryQualifier;
        break;
      }

      // required string SecondaryGeometryQualifier = 7;
      case 7: {
        if (tag == 58) {
         parse_SecondaryGeometryQualifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondarygeometryqualifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondarygeometryqualifier().data(), this->secondarygeometryqualifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secondarygeometryqualifier");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.FeaturesType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.FeaturesType)
  return false;
#undef DO_
}

void FeaturesType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.FeaturesType)
  // repeated .edu.vanderbilt.isis.meta.FeatureType Feature = 1;
  for (int i = 0; i < this->feature_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->feature(i), output);
  }

  // required string FeatureGeometryType = 2;
  if (has_featuregeometrytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featuregeometrytype().data(), this->featuregeometrytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featuregeometrytype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->featuregeometrytype(), output);
  }

  // required string FeatureID = 3;
  if (has_featureid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureid().data(), this->featureid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->featureid(), output);
  }

  // required string FeatureInterfaceType = 4;
  if (has_featureinterfacetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureinterfacetype().data(), this->featureinterfacetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureinterfacetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->featureinterfacetype(), output);
  }

  // required string GeometryType = 5;
  if (has_geometrytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->geometrytype().data(), this->geometrytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "geometrytype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->geometrytype(), output);
  }

  // required string PrimaryGeometryQualifier = 6;
  if (has_primarygeometryqualifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->primarygeometryqualifier().data(), this->primarygeometryqualifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "primarygeometryqualifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->primarygeometryqualifier(), output);
  }

  // required string SecondaryGeometryQualifier = 7;
  if (has_secondarygeometryqualifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondarygeometryqualifier().data(), this->secondarygeometryqualifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secondarygeometryqualifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->secondarygeometryqualifier(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.FeaturesType)
}

::google::protobuf::uint8* FeaturesType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.FeaturesType)
  // repeated .edu.vanderbilt.isis.meta.FeatureType Feature = 1;
  for (int i = 0; i < this->feature_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->feature(i), target);
  }

  // required string FeatureGeometryType = 2;
  if (has_featuregeometrytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featuregeometrytype().data(), this->featuregeometrytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featuregeometrytype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->featuregeometrytype(), target);
  }

  // required string FeatureID = 3;
  if (has_featureid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureid().data(), this->featureid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->featureid(), target);
  }

  // required string FeatureInterfaceType = 4;
  if (has_featureinterfacetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureinterfacetype().data(), this->featureinterfacetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureinterfacetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->featureinterfacetype(), target);
  }

  // required string GeometryType = 5;
  if (has_geometrytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->geometrytype().data(), this->geometrytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "geometrytype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->geometrytype(), target);
  }

  // required string PrimaryGeometryQualifier = 6;
  if (has_primarygeometryqualifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->primarygeometryqualifier().data(), this->primarygeometryqualifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "primarygeometryqualifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->primarygeometryqualifier(), target);
  }

  // required string SecondaryGeometryQualifier = 7;
  if (has_secondarygeometryqualifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondarygeometryqualifier().data(), this->secondarygeometryqualifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secondarygeometryqualifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->secondarygeometryqualifier(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.FeaturesType)
  return target;
}

int FeaturesType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string FeatureGeometryType = 2;
    if (has_featuregeometrytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featuregeometrytype());
    }

    // required string FeatureID = 3;
    if (has_featureid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featureid());
    }

    // required string FeatureInterfaceType = 4;
    if (has_featureinterfacetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featureinterfacetype());
    }

    // required string GeometryType = 5;
    if (has_geometrytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->geometrytype());
    }

    // required string PrimaryGeometryQualifier = 6;
    if (has_primarygeometryqualifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->primarygeometryqualifier());
    }

    // required string SecondaryGeometryQualifier = 7;
    if (has_secondarygeometryqualifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondarygeometryqualifier());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.FeatureType Feature = 1;
  total_size += 1 * this->feature_size();
  for (int i = 0; i < this->feature_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->feature(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FeaturesType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FeaturesType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FeaturesType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FeaturesType::MergeFrom(const FeaturesType& from) {
  GOOGLE_CHECK_NE(&from, this);
  feature_.MergeFrom(from.feature_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_featuregeometrytype()) {
      set_featuregeometrytype(from.featuregeometrytype());
    }
    if (from.has_featureid()) {
      set_featureid(from.featureid());
    }
    if (from.has_featureinterfacetype()) {
      set_featureinterfacetype(from.featureinterfacetype());
    }
    if (from.has_geometrytype()) {
      set_geometrytype(from.geometrytype());
    }
    if (from.has_primarygeometryqualifier()) {
      set_primarygeometryqualifier(from.primarygeometryqualifier());
    }
    if (from.has_secondarygeometryqualifier()) {
      set_secondarygeometryqualifier(from.secondarygeometryqualifier());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FeaturesType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeaturesType::CopyFrom(const FeaturesType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeaturesType::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007e) != 0x0000007e) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->feature())) return false;
  return true;
}

void FeaturesType::Swap(FeaturesType* other) {
  if (other != this) {
    feature_.Swap(&other->feature_);
    std::swap(featuregeometrytype_, other->featuregeometrytype_);
    std::swap(featureid_, other->featureid_);
    std::swap(featureinterfacetype_, other->featureinterfacetype_);
    std::swap(geometrytype_, other->geometrytype_);
    std::swap(primarygeometryqualifier_, other->primarygeometryqualifier_);
    std::swap(secondarygeometryqualifier_, other->secondarygeometryqualifier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FeaturesType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FeaturesType_descriptor_;
  metadata.reflection = FeaturesType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GeometryType::kFeaturesFieldNumber;
#endif  // !_MSC_VER

GeometryType::GeometryType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.GeometryType)
}

void GeometryType::InitAsDefaultInstance() {
}

GeometryType::GeometryType(const GeometryType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.GeometryType)
}

void GeometryType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GeometryType::~GeometryType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.GeometryType)
  SharedDtor();
}

void GeometryType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GeometryType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeometryType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeometryType_descriptor_;
}

const GeometryType& GeometryType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

GeometryType* GeometryType::default_instance_ = NULL;

GeometryType* GeometryType::New() const {
  return new GeometryType;
}

void GeometryType::Clear() {
  features_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GeometryType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.GeometryType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.FeaturesType Features = 1;
      case 1: {
        if (tag == 10) {
         parse_Features:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Features;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.GeometryType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.GeometryType)
  return false;
#undef DO_
}

void GeometryType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.GeometryType)
  // repeated .edu.vanderbilt.isis.meta.FeaturesType Features = 1;
  for (int i = 0; i < this->features_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->features(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.GeometryType)
}

::google::protobuf::uint8* GeometryType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.GeometryType)
  // repeated .edu.vanderbilt.isis.meta.FeaturesType Features = 1;
  for (int i = 0; i < this->features_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->features(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.GeometryType)
  return target;
}

int GeometryType::ByteSize() const {
  int total_size = 0;

  // repeated .edu.vanderbilt.isis.meta.FeaturesType Features = 1;
  total_size += 1 * this->features_size();
  for (int i = 0; i < this->features_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->features(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeometryType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GeometryType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GeometryType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GeometryType::MergeFrom(const GeometryType& from) {
  GOOGLE_CHECK_NE(&from, this);
  features_.MergeFrom(from.features_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GeometryType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeometryType::CopyFrom(const GeometryType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeometryType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->features())) return false;
  return true;
}

void GeometryType::Swap(GeometryType* other) {
  if (other != this) {
    features_.Swap(&other->features_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GeometryType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GeometryType_descriptor_;
  metadata.reflection = GeometryType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PairType::kConstraintFeatureAFieldNumber;
const int PairType::kConstraintFeatureBFieldNumber;
const int PairType::kConstraintOffsetFieldNumber;
const int PairType::kFeatureAlignmentTypeFieldNumber;
const int PairType::kFeatureGeometryTypeFieldNumber;
const int PairType::kFeatureInterfaceTypeFieldNumber;
#endif  // !_MSC_VER

PairType::PairType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.PairType)
}

void PairType::InitAsDefaultInstance() {
  constraintfeaturea_ = const_cast< ::edu::vanderbilt::isis::meta::ConstraintFeatureType*>(&::edu::vanderbilt::isis::meta::ConstraintFeatureType::default_instance());
  constraintfeatureb_ = const_cast< ::edu::vanderbilt::isis::meta::ConstraintFeatureType*>(&::edu::vanderbilt::isis::meta::ConstraintFeatureType::default_instance());
  constraintoffset_ = const_cast< ::edu::vanderbilt::isis::meta::ConstraintOffsetType*>(&::edu::vanderbilt::isis::meta::ConstraintOffsetType::default_instance());
}

PairType::PairType(const PairType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.PairType)
}

void PairType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  constraintfeaturea_ = NULL;
  constraintfeatureb_ = NULL;
  constraintoffset_ = NULL;
  featurealignmenttype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  featuregeometrytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  featureinterfacetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PairType::~PairType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.PairType)
  SharedDtor();
}

void PairType::SharedDtor() {
  if (featurealignmenttype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featurealignmenttype_;
  }
  if (featuregeometrytype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featuregeometrytype_;
  }
  if (featureinterfacetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete featureinterfacetype_;
  }
  if (this != default_instance_) {
    delete constraintfeaturea_;
    delete constraintfeatureb_;
    delete constraintoffset_;
  }
}

void PairType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PairType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PairType_descriptor_;
}

const PairType& PairType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

PairType* PairType::default_instance_ = NULL;

PairType* PairType::New() const {
  return new PairType;
}

void PairType::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    if (has_constraintfeaturea()) {
      if (constraintfeaturea_ != NULL) constraintfeaturea_->::edu::vanderbilt::isis::meta::ConstraintFeatureType::Clear();
    }
    if (has_constraintfeatureb()) {
      if (constraintfeatureb_ != NULL) constraintfeatureb_->::edu::vanderbilt::isis::meta::ConstraintFeatureType::Clear();
    }
    if (has_constraintoffset()) {
      if (constraintoffset_ != NULL) constraintoffset_->::edu::vanderbilt::isis::meta::ConstraintOffsetType::Clear();
    }
    if (has_featurealignmenttype()) {
      if (featurealignmenttype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featurealignmenttype_->clear();
      }
    }
    if (has_featuregeometrytype()) {
      if (featuregeometrytype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featuregeometrytype_->clear();
      }
    }
    if (has_featureinterfacetype()) {
      if (featureinterfacetype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        featureinterfacetype_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PairType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.PairType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureA = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_constraintfeaturea()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConstraintFeatureB;
        break;
      }

      // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureB = 2;
      case 2: {
        if (tag == 18) {
         parse_ConstraintFeatureB:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_constraintfeatureb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ConstraintOffset;
        break;
      }

      // optional .edu.vanderbilt.isis.meta.ConstraintOffsetType ConstraintOffset = 3;
      case 3: {
        if (tag == 26) {
         parse_ConstraintOffset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_constraintoffset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FeatureAlignmentType;
        break;
      }

      // required string FeatureAlignmentType = 4;
      case 4: {
        if (tag == 34) {
         parse_FeatureAlignmentType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featurealignmenttype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featurealignmenttype().data(), this->featurealignmenttype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featurealignmenttype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_FeatureGeometryType;
        break;
      }

      // required string FeatureGeometryType = 5;
      case 5: {
        if (tag == 42) {
         parse_FeatureGeometryType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featuregeometrytype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featuregeometrytype().data(), this->featuregeometrytype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featuregeometrytype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_FeatureInterfaceType;
        break;
      }

      // required string FeatureInterfaceType = 6;
      case 6: {
        if (tag == 50) {
         parse_FeatureInterfaceType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_featureinterfacetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->featureinterfacetype().data(), this->featureinterfacetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "featureinterfacetype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.PairType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.PairType)
  return false;
#undef DO_
}

void PairType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.PairType)
  // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureA = 1;
  if (has_constraintfeaturea()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->constraintfeaturea(), output);
  }

  // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureB = 2;
  if (has_constraintfeatureb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->constraintfeatureb(), output);
  }

  // optional .edu.vanderbilt.isis.meta.ConstraintOffsetType ConstraintOffset = 3;
  if (has_constraintoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->constraintoffset(), output);
  }

  // required string FeatureAlignmentType = 4;
  if (has_featurealignmenttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featurealignmenttype().data(), this->featurealignmenttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featurealignmenttype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->featurealignmenttype(), output);
  }

  // required string FeatureGeometryType = 5;
  if (has_featuregeometrytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featuregeometrytype().data(), this->featuregeometrytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featuregeometrytype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->featuregeometrytype(), output);
  }

  // required string FeatureInterfaceType = 6;
  if (has_featureinterfacetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureinterfacetype().data(), this->featureinterfacetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureinterfacetype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->featureinterfacetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.PairType)
}

::google::protobuf::uint8* PairType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.PairType)
  // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureA = 1;
  if (has_constraintfeaturea()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->constraintfeaturea(), target);
  }

  // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureB = 2;
  if (has_constraintfeatureb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->constraintfeatureb(), target);
  }

  // optional .edu.vanderbilt.isis.meta.ConstraintOffsetType ConstraintOffset = 3;
  if (has_constraintoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->constraintoffset(), target);
  }

  // required string FeatureAlignmentType = 4;
  if (has_featurealignmenttype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featurealignmenttype().data(), this->featurealignmenttype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featurealignmenttype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->featurealignmenttype(), target);
  }

  // required string FeatureGeometryType = 5;
  if (has_featuregeometrytype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featuregeometrytype().data(), this->featuregeometrytype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featuregeometrytype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->featuregeometrytype(), target);
  }

  // required string FeatureInterfaceType = 6;
  if (has_featureinterfacetype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->featureinterfacetype().data(), this->featureinterfacetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "featureinterfacetype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->featureinterfacetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.PairType)
  return target;
}

int PairType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureA = 1;
    if (has_constraintfeaturea()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->constraintfeaturea());
    }

    // required .edu.vanderbilt.isis.meta.ConstraintFeatureType ConstraintFeatureB = 2;
    if (has_constraintfeatureb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->constraintfeatureb());
    }

    // optional .edu.vanderbilt.isis.meta.ConstraintOffsetType ConstraintOffset = 3;
    if (has_constraintoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->constraintoffset());
    }

    // required string FeatureAlignmentType = 4;
    if (has_featurealignmenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featurealignmenttype());
    }

    // required string FeatureGeometryType = 5;
    if (has_featuregeometrytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featuregeometrytype());
    }

    // required string FeatureInterfaceType = 6;
    if (has_featureinterfacetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->featureinterfacetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PairType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PairType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PairType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PairType::MergeFrom(const PairType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_constraintfeaturea()) {
      mutable_constraintfeaturea()->::edu::vanderbilt::isis::meta::ConstraintFeatureType::MergeFrom(from.constraintfeaturea());
    }
    if (from.has_constraintfeatureb()) {
      mutable_constraintfeatureb()->::edu::vanderbilt::isis::meta::ConstraintFeatureType::MergeFrom(from.constraintfeatureb());
    }
    if (from.has_constraintoffset()) {
      mutable_constraintoffset()->::edu::vanderbilt::isis::meta::ConstraintOffsetType::MergeFrom(from.constraintoffset());
    }
    if (from.has_featurealignmenttype()) {
      set_featurealignmenttype(from.featurealignmenttype());
    }
    if (from.has_featuregeometrytype()) {
      set_featuregeometrytype(from.featuregeometrytype());
    }
    if (from.has_featureinterfacetype()) {
      set_featureinterfacetype(from.featureinterfacetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PairType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairType::CopyFrom(const PairType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairType::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003b) != 0x0000003b) return false;

  if (has_constraintfeaturea()) {
    if (!this->constraintfeaturea().IsInitialized()) return false;
  }
  if (has_constraintfeatureb()) {
    if (!this->constraintfeatureb().IsInitialized()) return false;
  }
  if (has_constraintoffset()) {
    if (!this->constraintoffset().IsInitialized()) return false;
  }
  return true;
}

void PairType::Swap(PairType* other) {
  if (other != this) {
    std::swap(constraintfeaturea_, other->constraintfeaturea_);
    std::swap(constraintfeatureb_, other->constraintfeatureb_);
    std::swap(constraintoffset_, other->constraintoffset_);
    std::swap(featurealignmenttype_, other->featurealignmenttype_);
    std::swap(featuregeometrytype_, other->featuregeometrytype_);
    std::swap(featureinterfacetype_, other->featureinterfacetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PairType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PairType_descriptor_;
  metadata.reflection = PairType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ParametricParametersType::kCADParameterFieldNumber;
const int ParametricParametersType::kComponentIDFieldNumber;
#endif  // !_MSC_VER

ParametricParametersType::ParametricParametersType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.ParametricParametersType)
}

void ParametricParametersType::InitAsDefaultInstance() {
}

ParametricParametersType::ParametricParametersType(const ParametricParametersType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.ParametricParametersType)
}

void ParametricParametersType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParametricParametersType::~ParametricParametersType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.ParametricParametersType)
  SharedDtor();
}

void ParametricParametersType::SharedDtor() {
  if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentid_;
  }
  if (this != default_instance_) {
  }
}

void ParametricParametersType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParametricParametersType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParametricParametersType_descriptor_;
}

const ParametricParametersType& ParametricParametersType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

ParametricParametersType* ParametricParametersType::default_instance_ = NULL;

ParametricParametersType* ParametricParametersType::New() const {
  return new ParametricParametersType;
}

void ParametricParametersType::Clear() {
  if (has_componentid()) {
    if (componentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      componentid_->clear();
    }
  }
  cadparameter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ParametricParametersType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.ParametricParametersType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.CADParameterType CADParameter = 1;
      case 1: {
        if (tag == 10) {
         parse_CADParameter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cadparameter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_CADParameter;
        if (input->ExpectTag(18)) goto parse_ComponentID;
        break;
      }

      // optional string ComponentID = 2;
      case 2: {
        if (tag == 18) {
         parse_ComponentID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_componentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentid().data(), this->componentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.ParametricParametersType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.ParametricParametersType)
  return false;
#undef DO_
}

void ParametricParametersType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.ParametricParametersType)
  // repeated .edu.vanderbilt.isis.meta.CADParameterType CADParameter = 1;
  for (int i = 0; i < this->cadparameter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cadparameter(i), output);
  }

  // optional string ComponentID = 2;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->componentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.ParametricParametersType)
}

::google::protobuf::uint8* ParametricParametersType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.ParametricParametersType)
  // repeated .edu.vanderbilt.isis.meta.CADParameterType CADParameter = 1;
  for (int i = 0; i < this->cadparameter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cadparameter(i), target);
  }

  // optional string ComponentID = 2;
  if (has_componentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentid().data(), this->componentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->componentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.ParametricParametersType)
  return target;
}

int ParametricParametersType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string ComponentID = 2;
    if (has_componentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->componentid());
    }

  }
  // repeated .edu.vanderbilt.isis.meta.CADParameterType CADParameter = 1;
  total_size += 1 * this->cadparameter_size();
  for (int i = 0; i < this->cadparameter_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cadparameter(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParametricParametersType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ParametricParametersType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParametricParametersType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParametricParametersType::MergeFrom(const ParametricParametersType& from) {
  GOOGLE_CHECK_NE(&from, this);
  cadparameter_.MergeFrom(from.cadparameter_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_componentid()) {
      set_componentid(from.componentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ParametricParametersType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricParametersType::CopyFrom(const ParametricParametersType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricParametersType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cadparameter())) return false;
  return true;
}

void ParametricParametersType::Swap(ParametricParametersType* other) {
  if (other != this) {
    cadparameter_.Swap(&other->cadparameter_);
    std::swap(componentid_, other->componentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ParametricParametersType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParametricParametersType_descriptor_;
  metadata.reflection = ParametricParametersType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PropertiesType::kUnitsFieldNumber;
#endif  // !_MSC_VER

PropertiesType::PropertiesType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.PropertiesType)
}

void PropertiesType::InitAsDefaultInstance() {
  units_ = const_cast< ::edu::vanderbilt::isis::meta::UnitsType*>(&::edu::vanderbilt::isis::meta::UnitsType::default_instance());
}

PropertiesType::PropertiesType(const PropertiesType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.PropertiesType)
}

void PropertiesType::SharedCtor() {
  _cached_size_ = 0;
  units_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropertiesType::~PropertiesType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.PropertiesType)
  SharedDtor();
}

void PropertiesType::SharedDtor() {
  if (this != default_instance_) {
    delete units_;
  }
}

void PropertiesType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertiesType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertiesType_descriptor_;
}

const PropertiesType& PropertiesType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

PropertiesType* PropertiesType::default_instance_ = NULL;

PropertiesType* PropertiesType::New() const {
  return new PropertiesType;
}

void PropertiesType::Clear() {
  if (has_units()) {
    if (units_ != NULL) units_->::edu::vanderbilt::isis::meta::UnitsType::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PropertiesType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.PropertiesType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_units()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.PropertiesType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.PropertiesType)
  return false;
#undef DO_
}

void PropertiesType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.PropertiesType)
  // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
  if (has_units()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->units(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.PropertiesType)
}

::google::protobuf::uint8* PropertiesType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.PropertiesType)
  // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
  if (has_units()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->units(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.PropertiesType)
  return target;
}

int PropertiesType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .edu.vanderbilt.isis.meta.UnitsType Units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->units());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertiesType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PropertiesType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PropertiesType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PropertiesType::MergeFrom(const PropertiesType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_units()) {
      mutable_units()->::edu::vanderbilt::isis::meta::UnitsType::MergeFrom(from.units());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PropertiesType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertiesType::CopyFrom(const PropertiesType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertiesType::IsInitialized() const {

  if (has_units()) {
    if (!this->units().IsInitialized()) return false;
  }
  return true;
}

void PropertiesType::Swap(PropertiesType* other) {
  if (other != this) {
    std::swap(units_, other->units_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PropertiesType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropertiesType_descriptor_;
  metadata.reflection = PropertiesType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int STEPFormatType::kNameFieldNumber;
#endif  // !_MSC_VER

STEPFormatType::STEPFormatType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.STEPFormatType)
}

void STEPFormatType::InitAsDefaultInstance() {
}

STEPFormatType::STEPFormatType(const STEPFormatType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.STEPFormatType)
}

void STEPFormatType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

STEPFormatType::~STEPFormatType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.STEPFormatType)
  SharedDtor();
}

void STEPFormatType::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void STEPFormatType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STEPFormatType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return STEPFormatType_descriptor_;
}

const STEPFormatType& STEPFormatType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

STEPFormatType* STEPFormatType::default_instance_ = NULL;

STEPFormatType* STEPFormatType::New() const {
  return new STEPFormatType;
}

void STEPFormatType::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool STEPFormatType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.STEPFormatType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.STEPFormatType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.STEPFormatType)
  return false;
#undef DO_
}

void STEPFormatType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.STEPFormatType)
  // required string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.STEPFormatType)
}

::google::protobuf::uint8* STEPFormatType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.STEPFormatType)
  // required string Name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.STEPFormatType)
  return target;
}

int STEPFormatType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STEPFormatType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const STEPFormatType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const STEPFormatType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void STEPFormatType::MergeFrom(const STEPFormatType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void STEPFormatType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STEPFormatType::CopyFrom(const STEPFormatType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STEPFormatType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void STEPFormatType::Swap(STEPFormatType* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata STEPFormatType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = STEPFormatType_descriptor_;
  metadata.reflection = STEPFormatType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnassembledComponentsType::kCADComponentFieldNumber;
#endif  // !_MSC_VER

UnassembledComponentsType::UnassembledComponentsType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.UnassembledComponentsType)
}

void UnassembledComponentsType::InitAsDefaultInstance() {
}

UnassembledComponentsType::UnassembledComponentsType(const UnassembledComponentsType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.UnassembledComponentsType)
}

void UnassembledComponentsType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnassembledComponentsType::~UnassembledComponentsType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  SharedDtor();
}

void UnassembledComponentsType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnassembledComponentsType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnassembledComponentsType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnassembledComponentsType_descriptor_;
}

const UnassembledComponentsType& UnassembledComponentsType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

UnassembledComponentsType* UnassembledComponentsType::default_instance_ = NULL;

UnassembledComponentsType* UnassembledComponentsType::New() const {
  return new UnassembledComponentsType;
}

void UnassembledComponentsType::Clear() {
  cadcomponent_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnassembledComponentsType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
      case 1: {
        if (tag == 10) {
         parse_CADComponent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cadcomponent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_CADComponent;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  return false;
#undef DO_
}

void UnassembledComponentsType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
  for (int i = 0; i < this->cadcomponent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cadcomponent(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.UnassembledComponentsType)
}

::google::protobuf::uint8* UnassembledComponentsType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
  for (int i = 0; i < this->cadcomponent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cadcomponent(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.UnassembledComponentsType)
  return target;
}

int UnassembledComponentsType::ByteSize() const {
  int total_size = 0;

  // repeated .edu.vanderbilt.isis.meta.CADComponentType CADComponent = 1;
  total_size += 1 * this->cadcomponent_size();
  for (int i = 0; i < this->cadcomponent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cadcomponent(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnassembledComponentsType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnassembledComponentsType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnassembledComponentsType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnassembledComponentsType::MergeFrom(const UnassembledComponentsType& from) {
  GOOGLE_CHECK_NE(&from, this);
  cadcomponent_.MergeFrom(from.cadcomponent_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnassembledComponentsType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnassembledComponentsType::CopyFrom(const UnassembledComponentsType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnassembledComponentsType::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cadcomponent())) return false;
  return true;
}

void UnassembledComponentsType::Swap(UnassembledComponentsType* other) {
  if (other != this) {
    cadcomponent_.Swap(&other->cadcomponent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnassembledComponentsType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnassembledComponentsType_descriptor_;
  metadata.reflection = UnassembledComponentsType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnitsType::kValueFieldNumber;
#endif  // !_MSC_VER

UnitsType::UnitsType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:edu.vanderbilt.isis.meta.UnitsType)
}

void UnitsType::InitAsDefaultInstance() {
}

UnitsType::UnitsType(const UnitsType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:edu.vanderbilt.isis.meta.UnitsType)
}

void UnitsType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnitsType::~UnitsType() {
  // @@protoc_insertion_point(destructor:edu.vanderbilt.isis.meta.UnitsType)
  SharedDtor();
}

void UnitsType::SharedDtor() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void UnitsType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitsType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitsType_descriptor_;
}

const UnitsType& UnitsType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AssemblyInterface_2eproto();
  return *default_instance_;
}

UnitsType* UnitsType::default_instance_ = NULL;

UnitsType* UnitsType::New() const {
  return new UnitsType;
}

void UnitsType::Clear() {
  if (has_value()) {
    if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      value_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnitsType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edu.vanderbilt.isis.meta.UnitsType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edu.vanderbilt.isis.meta.UnitsType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edu.vanderbilt.isis.meta.UnitsType)
  return false;
#undef DO_
}

void UnitsType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edu.vanderbilt.isis.meta.UnitsType)
  // required string Value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:edu.vanderbilt.isis.meta.UnitsType)
}

::google::protobuf::uint8* UnitsType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:edu.vanderbilt.isis.meta.UnitsType)
  // required string Value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edu.vanderbilt.isis.meta.UnitsType)
  return target;
}

int UnitsType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitsType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnitsType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnitsType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnitsType::MergeFrom(const UnitsType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnitsType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitsType::CopyFrom(const UnitsType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitsType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UnitsType::Swap(UnitsType* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnitsType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitsType_descriptor_;
  metadata.reflection = UnitsType_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace meta
}  // namespace isis
}  // namespace vanderbilt
}  // namespace edu

// @@protoc_insertion_point(global_scope)
