# Python stubs generated by omniidl from ..\..\..\..\..\idl\ir.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

#
# Start of module "CORBA"
#
__name__ = "CORBA"
_0_CORBA = omniORB.openModule("CORBA", r"..\..\..\..\..\idl\ir.idl")
_0_CORBA__POA = omniORB.openModule("CORBA__POA", r"..\..\..\..\..\idl\ir.idl")


# typedef ... ScopedName
class ScopedName:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ScopedName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ScopedName = ScopedName
_0_CORBA._d_ScopedName  = (omniORB.tcInternal.tv_string,0)
_0_CORBA._ad_ScopedName = (omniORB.tcInternal.tv_alias, ScopedName._NP_RepositoryId, "ScopedName", (omniORB.tcInternal.tv_string,0))
_0_CORBA._tc_ScopedName = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ScopedName)
omniORB.registerType(ScopedName._NP_RepositoryId, _0_CORBA._ad_ScopedName, _0_CORBA._tc_ScopedName)
del ScopedName

# enum DefinitionKind
_0_CORBA.dk_none = omniORB.EnumItem("dk_none", 0)
_0_CORBA.dk_all = omniORB.EnumItem("dk_all", 1)
_0_CORBA.dk_Attribute = omniORB.EnumItem("dk_Attribute", 2)
_0_CORBA.dk_Constant = omniORB.EnumItem("dk_Constant", 3)
_0_CORBA.dk_Exception = omniORB.EnumItem("dk_Exception", 4)
_0_CORBA.dk_Interface = omniORB.EnumItem("dk_Interface", 5)
_0_CORBA.dk_Module = omniORB.EnumItem("dk_Module", 6)
_0_CORBA.dk_Operation = omniORB.EnumItem("dk_Operation", 7)
_0_CORBA.dk_Typedef = omniORB.EnumItem("dk_Typedef", 8)
_0_CORBA.dk_Alias = omniORB.EnumItem("dk_Alias", 9)
_0_CORBA.dk_Struct = omniORB.EnumItem("dk_Struct", 10)
_0_CORBA.dk_Union = omniORB.EnumItem("dk_Union", 11)
_0_CORBA.dk_Enum = omniORB.EnumItem("dk_Enum", 12)
_0_CORBA.dk_Primitive = omniORB.EnumItem("dk_Primitive", 13)
_0_CORBA.dk_String = omniORB.EnumItem("dk_String", 14)
_0_CORBA.dk_Sequence = omniORB.EnumItem("dk_Sequence", 15)
_0_CORBA.dk_Array = omniORB.EnumItem("dk_Array", 16)
_0_CORBA.dk_Repository = omniORB.EnumItem("dk_Repository", 17)
_0_CORBA.dk_Wstring = omniORB.EnumItem("dk_Wstring", 18)
_0_CORBA.dk_Fixed = omniORB.EnumItem("dk_Fixed", 19)
_0_CORBA.dk_Value = omniORB.EnumItem("dk_Value", 20)
_0_CORBA.dk_ValueBox = omniORB.EnumItem("dk_ValueBox", 21)
_0_CORBA.dk_ValueMember = omniORB.EnumItem("dk_ValueMember", 22)
_0_CORBA.dk_Native = omniORB.EnumItem("dk_Native", 23)
_0_CORBA.dk_AbstractInterface = omniORB.EnumItem("dk_AbstractInterface", 24)
_0_CORBA.DefinitionKind = omniORB.Enum("IDL:omg.org/CORBA/DefinitionKind:1.0", (_0_CORBA.dk_none, _0_CORBA.dk_all, _0_CORBA.dk_Attribute, _0_CORBA.dk_Constant, _0_CORBA.dk_Exception, _0_CORBA.dk_Interface, _0_CORBA.dk_Module, _0_CORBA.dk_Operation, _0_CORBA.dk_Typedef, _0_CORBA.dk_Alias, _0_CORBA.dk_Struct, _0_CORBA.dk_Union, _0_CORBA.dk_Enum, _0_CORBA.dk_Primitive, _0_CORBA.dk_String, _0_CORBA.dk_Sequence, _0_CORBA.dk_Array, _0_CORBA.dk_Repository, _0_CORBA.dk_Wstring, _0_CORBA.dk_Fixed, _0_CORBA.dk_Value, _0_CORBA.dk_ValueBox, _0_CORBA.dk_ValueMember, _0_CORBA.dk_Native, _0_CORBA.dk_AbstractInterface,))

_0_CORBA._d_DefinitionKind  = (omniORB.tcInternal.tv_enum, _0_CORBA.DefinitionKind._NP_RepositoryId, "DefinitionKind", _0_CORBA.DefinitionKind._items)
_0_CORBA._tc_DefinitionKind = omniORB.tcInternal.createTypeCode(_0_CORBA._d_DefinitionKind)
omniORB.registerType(_0_CORBA.DefinitionKind._NP_RepositoryId, _0_CORBA._d_DefinitionKind, _0_CORBA._tc_DefinitionKind)

# interface IRObject
_0_CORBA._d_IRObject = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/IRObject:1.0", "IRObject")
omniORB.typeMapping["IDL:omg.org/CORBA/IRObject:1.0"] = _0_CORBA._d_IRObject
_0_CORBA.IRObject = omniORB.newEmptyClass()
class IRObject :
    _NP_RepositoryId = _0_CORBA._d_IRObject[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.IRObject = IRObject
_0_CORBA._tc_IRObject = omniORB.tcInternal.createTypeCode(_0_CORBA._d_IRObject)
omniORB.registerType(IRObject._NP_RepositoryId, _0_CORBA._d_IRObject, _0_CORBA._tc_IRObject)

# IRObject operations and attributes
IRObject._d__get_def_kind = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/DefinitionKind:1.0"],),None)
IRObject._d_destroy = ((), (), None)

# IRObject object reference
class _objref_IRObject (CORBA.Object):
    _NP_RepositoryId = IRObject._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def _get_def_kind(self, *args):
        return self._obj.invoke("_get_def_kind", _0_CORBA.IRObject._d__get_def_kind, args)

    def_kind = property(_get_def_kind)


    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_CORBA.IRObject._d_destroy, args)

omniORB.registerObjref(IRObject._NP_RepositoryId, _objref_IRObject)
_0_CORBA._objref_IRObject = _objref_IRObject
del IRObject, _objref_IRObject

# IRObject skeleton
__name__ = "CORBA__POA"
class IRObject (PortableServer.Servant):
    _NP_RepositoryId = _0_CORBA.IRObject._NP_RepositoryId


    _omni_op_d = {"_get_def_kind": _0_CORBA.IRObject._d__get_def_kind, "destroy": _0_CORBA.IRObject._d_destroy}

IRObject._omni_skeleton = IRObject
_0_CORBA__POA.IRObject = IRObject
omniORB.registerSkeleton(IRObject._NP_RepositoryId, IRObject)
del IRObject
__name__ = "CORBA"

# forward interface Contained;
_0_CORBA._d_Contained = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/Contained:1.0", "Contained")
omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"] = _0_CORBA._d_Contained

# forward interface Repository;
_0_CORBA._d_Repository = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/Repository:1.0", "Repository")
omniORB.typeMapping["IDL:omg.org/CORBA/Repository:1.0"] = _0_CORBA._d_Repository

# forward interface Container;
_0_CORBA._d_Container = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/Container:1.0", "Container")
omniORB.typeMapping["IDL:omg.org/CORBA/Container:1.0"] = _0_CORBA._d_Container

# interface Contained
_0_CORBA._d_Contained = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/Contained:1.0", "Contained")
omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"] = _0_CORBA._d_Contained
_0_CORBA.Contained = omniORB.newEmptyClass()
class Contained (_0_CORBA.IRObject):
    _NP_RepositoryId = _0_CORBA._d_Contained[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct Description
    _0_CORBA.Contained.Description = omniORB.newEmptyClass()
    class Description (omniORB.StructBase):
        _NP_RepositoryId = "IDL:omg.org/CORBA/Contained/Description:1.0"

        _NP_ClassName = "CORBA.Contained.Description"

        def __init__(self, kind, value):
            self.kind = kind
            self.value = value
    
    _d_Description  = _0_CORBA.Contained._d_Description = (omniORB.tcInternal.tv_struct, Description, Description._NP_RepositoryId, "Description", "kind", omniORB.typeMapping["IDL:omg.org/CORBA/DefinitionKind:1.0"], "value", omniORB.tcInternal.tv_any)
    _tc_Description = omniORB.tcInternal.createTypeCode(_d_Description)
    omniORB.registerType(Description._NP_RepositoryId, _d_Description, _tc_Description)


_0_CORBA.Contained = Contained
_0_CORBA._tc_Contained = omniORB.tcInternal.createTypeCode(_0_CORBA._d_Contained)
omniORB.registerType(Contained._NP_RepositoryId, _0_CORBA._d_Contained, _0_CORBA._tc_Contained)

# Contained operations and attributes
Contained._d__get_id = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"],),None)
Contained._d__set_id = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"],),(),None)
Contained._d__get_name = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"],),None)
Contained._d__set_name = ((omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"],),(),None)
Contained._d__get_version = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"],),None)
Contained._d__set_version = ((omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"],),(),None)
Contained._d__get_defined_in = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/Container:1.0"],),None)
Contained._d__get_absolute_name = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/ScopedName:1.0"],),None)
Contained._d__get_containing_repository = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/Repository:1.0"],),None)
Contained._d_describe = ((), (omniORB.typeMapping["IDL:omg.org/CORBA/Contained/Description:1.0"], ), None)
Contained._d_move = ((omniORB.typeMapping["IDL:omg.org/CORBA/Container:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"]), (), None)

# Contained object reference
class _objref_Contained (_0_CORBA._objref_IRObject):
    _NP_RepositoryId = Contained._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IRObject.__init__(self, obj)

    def _get_id(self, *args):
        return self._obj.invoke("_get_id", _0_CORBA.Contained._d__get_id, args)

    def _set_id(self, *args):
        return self._obj.invoke("_set_id", _0_CORBA.Contained._d__set_id, args)

    id = property(_get_id, _set_id)


    def _get_name(self, *args):
        return self._obj.invoke("_get_name", _0_CORBA.Contained._d__get_name, args)

    def _set_name(self, *args):
        return self._obj.invoke("_set_name", _0_CORBA.Contained._d__set_name, args)

    name = property(_get_name, _set_name)


    def _get_version(self, *args):
        return self._obj.invoke("_get_version", _0_CORBA.Contained._d__get_version, args)

    def _set_version(self, *args):
        return self._obj.invoke("_set_version", _0_CORBA.Contained._d__set_version, args)

    version = property(_get_version, _set_version)


    def _get_defined_in(self, *args):
        return self._obj.invoke("_get_defined_in", _0_CORBA.Contained._d__get_defined_in, args)

    defined_in = property(_get_defined_in)


    def _get_absolute_name(self, *args):
        return self._obj.invoke("_get_absolute_name", _0_CORBA.Contained._d__get_absolute_name, args)

    absolute_name = property(_get_absolute_name)


    def _get_containing_repository(self, *args):
        return self._obj.invoke("_get_containing_repository", _0_CORBA.Contained._d__get_containing_repository, args)

    containing_repository = property(_get_containing_repository)


    def describe(self, *args):
        return self._obj.invoke("describe", _0_CORBA.Contained._d_describe, args)

    def move(self, *args):
        return self._obj.invoke("move", _0_CORBA.Contained._d_move, args)

omniORB.registerObjref(Contained._NP_RepositoryId, _objref_Contained)
_0_CORBA._objref_Contained = _objref_Contained
del Contained, _objref_Contained

# Contained skeleton
__name__ = "CORBA__POA"
class Contained (_0_CORBA__POA.IRObject):
    _NP_RepositoryId = _0_CORBA.Contained._NP_RepositoryId


    _omni_op_d = {"_get_id": _0_CORBA.Contained._d__get_id, "_set_id": _0_CORBA.Contained._d__set_id, "_get_name": _0_CORBA.Contained._d__get_name, "_set_name": _0_CORBA.Contained._d__set_name, "_get_version": _0_CORBA.Contained._d__get_version, "_set_version": _0_CORBA.Contained._d__set_version, "_get_defined_in": _0_CORBA.Contained._d__get_defined_in, "_get_absolute_name": _0_CORBA.Contained._d__get_absolute_name, "_get_containing_repository": _0_CORBA.Contained._d__get_containing_repository, "describe": _0_CORBA.Contained._d_describe, "move": _0_CORBA.Contained._d_move}
    _omni_op_d.update(_0_CORBA__POA.IRObject._omni_op_d)

Contained._omni_skeleton = Contained
_0_CORBA__POA.Contained = Contained
omniORB.registerSkeleton(Contained._NP_RepositoryId, Contained)
del Contained
__name__ = "CORBA"

# forward interface ModuleDef;
_0_CORBA._d_ModuleDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ModuleDef:1.0", "ModuleDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ModuleDef:1.0"] = _0_CORBA._d_ModuleDef

# forward interface ConstantDef;
_0_CORBA._d_ConstantDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ConstantDef:1.0", "ConstantDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ConstantDef:1.0"] = _0_CORBA._d_ConstantDef

# forward interface IDLType;
_0_CORBA._d_IDLType = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/IDLType:1.0", "IDLType")
omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"] = _0_CORBA._d_IDLType

# forward interface StructDef;
_0_CORBA._d_StructDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/StructDef:1.0", "StructDef")
omniORB.typeMapping["IDL:omg.org/CORBA/StructDef:1.0"] = _0_CORBA._d_StructDef

# forward interface UnionDef;
_0_CORBA._d_UnionDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/UnionDef:1.0", "UnionDef")
omniORB.typeMapping["IDL:omg.org/CORBA/UnionDef:1.0"] = _0_CORBA._d_UnionDef

# forward interface EnumDef;
_0_CORBA._d_EnumDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/EnumDef:1.0", "EnumDef")
omniORB.typeMapping["IDL:omg.org/CORBA/EnumDef:1.0"] = _0_CORBA._d_EnumDef

# forward interface AliasDef;
_0_CORBA._d_AliasDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/AliasDef:1.0", "AliasDef")
omniORB.typeMapping["IDL:omg.org/CORBA/AliasDef:1.0"] = _0_CORBA._d_AliasDef

# forward interface InterfaceDef;
_0_CORBA._d_InterfaceDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/InterfaceDef:1.0", "InterfaceDef")
omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDef:1.0"] = _0_CORBA._d_InterfaceDef

# forward interface ValueDef;
_0_CORBA._d_ValueDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ValueDef:1.0", "ValueDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"] = _0_CORBA._d_ValueDef

# forward interface ValueBoxDef;
_0_CORBA._d_ValueBoxDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ValueBoxDef:1.0", "ValueBoxDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ValueBoxDef:1.0"] = _0_CORBA._d_ValueBoxDef

# forward interface ExceptionDef;
_0_CORBA._d_ExceptionDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ExceptionDef:1.0", "ExceptionDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDef:1.0"] = _0_CORBA._d_ExceptionDef

# forward interface NativeDef;
_0_CORBA._d_NativeDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/NativeDef:1.0", "NativeDef")
omniORB.typeMapping["IDL:omg.org/CORBA/NativeDef:1.0"] = _0_CORBA._d_NativeDef

# forward interface AbstractInterfaceDef;
_0_CORBA._d_AbstractInterfaceDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0", "AbstractInterfaceDef")
omniORB.typeMapping["IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"] = _0_CORBA._d_AbstractInterfaceDef

# forward interface WstringDef;
_0_CORBA._d_WstringDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/WstringDef:1.0", "WstringDef")
omniORB.typeMapping["IDL:omg.org/CORBA/WstringDef:1.0"] = _0_CORBA._d_WstringDef

# forward interface FixedDef;
_0_CORBA._d_FixedDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/FixedDef:1.0", "FixedDef")
omniORB.typeMapping["IDL:omg.org/CORBA/FixedDef:1.0"] = _0_CORBA._d_FixedDef

# typedef ... InterfaceDefSeq
class InterfaceDefSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/InterfaceDefSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.InterfaceDefSeq = InterfaceDefSeq
_0_CORBA._d_InterfaceDefSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDef:1.0"], 0)
_0_CORBA._ad_InterfaceDefSeq = (omniORB.tcInternal.tv_alias, InterfaceDefSeq._NP_RepositoryId, "InterfaceDefSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDef:1.0"], 0))
_0_CORBA._tc_InterfaceDefSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_InterfaceDefSeq)
omniORB.registerType(InterfaceDefSeq._NP_RepositoryId, _0_CORBA._ad_InterfaceDefSeq, _0_CORBA._tc_InterfaceDefSeq)
del InterfaceDefSeq

# typedef ... ValueDefSeq
class ValueDefSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ValueDefSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ValueDefSeq = ValueDefSeq
_0_CORBA._d_ValueDefSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"], 0)
_0_CORBA._ad_ValueDefSeq = (omniORB.tcInternal.tv_alias, ValueDefSeq._NP_RepositoryId, "ValueDefSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"], 0))
_0_CORBA._tc_ValueDefSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ValueDefSeq)
omniORB.registerType(ValueDefSeq._NP_RepositoryId, _0_CORBA._ad_ValueDefSeq, _0_CORBA._tc_ValueDefSeq)
del ValueDefSeq

# typedef ... AbstractInterfaceDefSeq
class AbstractInterfaceDefSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/AbstractInterfaceDefSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.AbstractInterfaceDefSeq = AbstractInterfaceDefSeq
_0_CORBA._d_AbstractInterfaceDefSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"], 0)
_0_CORBA._ad_AbstractInterfaceDefSeq = (omniORB.tcInternal.tv_alias, AbstractInterfaceDefSeq._NP_RepositoryId, "AbstractInterfaceDefSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"], 0))
_0_CORBA._tc_AbstractInterfaceDefSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_AbstractInterfaceDefSeq)
omniORB.registerType(AbstractInterfaceDefSeq._NP_RepositoryId, _0_CORBA._ad_AbstractInterfaceDefSeq, _0_CORBA._tc_AbstractInterfaceDefSeq)
del AbstractInterfaceDefSeq

# typedef ... ContainedSeq
class ContainedSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ContainedSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ContainedSeq = ContainedSeq
_0_CORBA._d_ContainedSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"], 0)
_0_CORBA._ad_ContainedSeq = (omniORB.tcInternal.tv_alias, ContainedSeq._NP_RepositoryId, "ContainedSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"], 0))
_0_CORBA._tc_ContainedSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ContainedSeq)
omniORB.registerType(ContainedSeq._NP_RepositoryId, _0_CORBA._ad_ContainedSeq, _0_CORBA._tc_ContainedSeq)
del ContainedSeq

# struct Initializer
_0_CORBA.Initializer = omniORB.newEmptyClass()
class Initializer (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/Initializer:1.0"

    def __init__(self, members, name):
        self.members = members
        self.name = name

_0_CORBA.Initializer = Initializer
_0_CORBA._d_Initializer  = (omniORB.tcInternal.tv_struct, Initializer, Initializer._NP_RepositoryId, "Initializer", "members", omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"], "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"])
_0_CORBA._tc_Initializer = omniORB.tcInternal.createTypeCode(_0_CORBA._d_Initializer)
omniORB.registerType(Initializer._NP_RepositoryId, _0_CORBA._d_Initializer, _0_CORBA._tc_Initializer)
del Initializer

# typedef ... InitializerSeq
class InitializerSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/InitializerSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.InitializerSeq = InitializerSeq
_0_CORBA._d_InitializerSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/Initializer:1.0"], 0)
_0_CORBA._ad_InitializerSeq = (omniORB.tcInternal.tv_alias, InitializerSeq._NP_RepositoryId, "InitializerSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/Initializer:1.0"], 0))
_0_CORBA._tc_InitializerSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_InitializerSeq)
omniORB.registerType(InitializerSeq._NP_RepositoryId, _0_CORBA._ad_InitializerSeq, _0_CORBA._tc_InitializerSeq)
del InitializerSeq

# interface Container
_0_CORBA._d_Container = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/Container:1.0", "Container")
omniORB.typeMapping["IDL:omg.org/CORBA/Container:1.0"] = _0_CORBA._d_Container
_0_CORBA.Container = omniORB.newEmptyClass()
class Container (_0_CORBA.IRObject):
    _NP_RepositoryId = _0_CORBA._d_Container[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct Description
    _0_CORBA.Container.Description = omniORB.newEmptyClass()
    class Description (omniORB.StructBase):
        _NP_RepositoryId = "IDL:omg.org/CORBA/Container/Description:1.0"

        _NP_ClassName = "CORBA.Container.Description"

        def __init__(self, contained_object, kind, value):
            self.contained_object = contained_object
            self.kind = kind
            self.value = value
    
    _d_Description  = _0_CORBA.Container._d_Description = (omniORB.tcInternal.tv_struct, Description, Description._NP_RepositoryId, "Description", "contained_object", omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"], "kind", omniORB.typeMapping["IDL:omg.org/CORBA/DefinitionKind:1.0"], "value", omniORB.tcInternal.tv_any)
    _tc_Description = omniORB.tcInternal.createTypeCode(_d_Description)
    omniORB.registerType(Description._NP_RepositoryId, _d_Description, _tc_Description)
    
    # typedef ... DescriptionSeq
    class DescriptionSeq:
        _NP_RepositoryId = "IDL:omg.org/CORBA/Container/DescriptionSeq:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_DescriptionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/Container/Description:1.0"], 0)
    _ad_DescriptionSeq = (omniORB.tcInternal.tv_alias, DescriptionSeq._NP_RepositoryId, "DescriptionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/Container/Description:1.0"], 0))
    _tc_DescriptionSeq = omniORB.tcInternal.createTypeCode(_ad_DescriptionSeq)
    omniORB.registerType(DescriptionSeq._NP_RepositoryId, _ad_DescriptionSeq, _tc_DescriptionSeq)


_0_CORBA.Container = Container
_0_CORBA._tc_Container = omniORB.tcInternal.createTypeCode(_0_CORBA._d_Container)
omniORB.registerType(Container._NP_RepositoryId, _0_CORBA._d_Container, _0_CORBA._tc_Container)

# Container operations and attributes
Container._d_lookup = ((omniORB.typeMapping["IDL:omg.org/CORBA/ScopedName:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"], ), None)
Container._d_contents = ((omniORB.typeMapping["IDL:omg.org/CORBA/DefinitionKind:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:omg.org/CORBA/ContainedSeq:1.0"], ), None)
Container._d_lookup_name = ((omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:omg.org/CORBA/DefinitionKind:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:omg.org/CORBA/ContainedSeq:1.0"], ), None)
Container._d_describe_contents = ((omniORB.typeMapping["IDL:omg.org/CORBA/DefinitionKind:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_long), (omniORB.typeMapping["IDL:omg.org/CORBA/Container/DescriptionSeq:1.0"], ), None)
Container._d_create_module = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/ModuleDef:1.0"], ), None)
Container._d_create_constant = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.tcInternal.tv_any), (omniORB.typeMapping["IDL:omg.org/CORBA/ConstantDef:1.0"], ), None)
Container._d_create_struct = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/StructDef:1.0"], ), None)
Container._d_create_union = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/UnionMemberSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/UnionDef:1.0"], ), None)
Container._d_create_enum = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/EnumMemberSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/EnumDef:1.0"], ), None)
Container._d_create_alias = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/AliasDef:1.0"], ), None)
Container._d_create_interface = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDefSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDef:1.0"], ), None)
Container._d_create_value = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"], omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CORBA/ValueDefSeq:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDefSeq:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/InitializerSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"], ), None)
Container._d_create_value_box = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/ValueBoxDef:1.0"], ), None)
Container._d_create_exception = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDef:1.0"], ), None)
Container._d_create_native = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/NativeDef:1.0"], ), None)
Container._d_create_abstract_interface = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/AbstractInterfaceDefSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"], ), None)

# Container object reference
class _objref_Container (_0_CORBA._objref_IRObject):
    _NP_RepositoryId = Container._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IRObject.__init__(self, obj)

    def lookup(self, *args):
        return self._obj.invoke("lookup", _0_CORBA.Container._d_lookup, args)

    def contents(self, *args):
        return self._obj.invoke("contents", _0_CORBA.Container._d_contents, args)

    def lookup_name(self, *args):
        return self._obj.invoke("lookup_name", _0_CORBA.Container._d_lookup_name, args)

    def describe_contents(self, *args):
        return self._obj.invoke("describe_contents", _0_CORBA.Container._d_describe_contents, args)

    def create_module(self, *args):
        return self._obj.invoke("create_module", _0_CORBA.Container._d_create_module, args)

    def create_constant(self, *args):
        return self._obj.invoke("create_constant", _0_CORBA.Container._d_create_constant, args)

    def create_struct(self, *args):
        return self._obj.invoke("create_struct", _0_CORBA.Container._d_create_struct, args)

    def create_union(self, *args):
        return self._obj.invoke("create_union", _0_CORBA.Container._d_create_union, args)

    def create_enum(self, *args):
        return self._obj.invoke("create_enum", _0_CORBA.Container._d_create_enum, args)

    def create_alias(self, *args):
        return self._obj.invoke("create_alias", _0_CORBA.Container._d_create_alias, args)

    def create_interface(self, *args):
        return self._obj.invoke("create_interface", _0_CORBA.Container._d_create_interface, args)

    def create_value(self, *args):
        return self._obj.invoke("create_value", _0_CORBA.Container._d_create_value, args)

    def create_value_box(self, *args):
        return self._obj.invoke("create_value_box", _0_CORBA.Container._d_create_value_box, args)

    def create_exception(self, *args):
        return self._obj.invoke("create_exception", _0_CORBA.Container._d_create_exception, args)

    def create_native(self, *args):
        return self._obj.invoke("create_native", _0_CORBA.Container._d_create_native, args)

    def create_abstract_interface(self, *args):
        return self._obj.invoke("create_abstract_interface", _0_CORBA.Container._d_create_abstract_interface, args)

omniORB.registerObjref(Container._NP_RepositoryId, _objref_Container)
_0_CORBA._objref_Container = _objref_Container
del Container, _objref_Container

# Container skeleton
__name__ = "CORBA__POA"
class Container (_0_CORBA__POA.IRObject):
    _NP_RepositoryId = _0_CORBA.Container._NP_RepositoryId


    _omni_op_d = {"lookup": _0_CORBA.Container._d_lookup, "contents": _0_CORBA.Container._d_contents, "lookup_name": _0_CORBA.Container._d_lookup_name, "describe_contents": _0_CORBA.Container._d_describe_contents, "create_module": _0_CORBA.Container._d_create_module, "create_constant": _0_CORBA.Container._d_create_constant, "create_struct": _0_CORBA.Container._d_create_struct, "create_union": _0_CORBA.Container._d_create_union, "create_enum": _0_CORBA.Container._d_create_enum, "create_alias": _0_CORBA.Container._d_create_alias, "create_interface": _0_CORBA.Container._d_create_interface, "create_value": _0_CORBA.Container._d_create_value, "create_value_box": _0_CORBA.Container._d_create_value_box, "create_exception": _0_CORBA.Container._d_create_exception, "create_native": _0_CORBA.Container._d_create_native, "create_abstract_interface": _0_CORBA.Container._d_create_abstract_interface}
    _omni_op_d.update(_0_CORBA__POA.IRObject._omni_op_d)

Container._omni_skeleton = Container
_0_CORBA__POA.Container = Container
omniORB.registerSkeleton(Container._NP_RepositoryId, Container)
del Container
__name__ = "CORBA"

# interface IDLType
_0_CORBA._d_IDLType = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/IDLType:1.0", "IDLType")
omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"] = _0_CORBA._d_IDLType
_0_CORBA.IDLType = omniORB.newEmptyClass()
class IDLType (_0_CORBA.IRObject):
    _NP_RepositoryId = _0_CORBA._d_IDLType[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.IDLType = IDLType
_0_CORBA._tc_IDLType = omniORB.tcInternal.createTypeCode(_0_CORBA._d_IDLType)
omniORB.registerType(IDLType._NP_RepositoryId, _0_CORBA._d_IDLType, _0_CORBA._tc_IDLType)

# IDLType operations and attributes
IDLType._d__get_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)

# IDLType object reference
class _objref_IDLType (_0_CORBA._objref_IRObject):
    _NP_RepositoryId = IDLType._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IRObject.__init__(self, obj)

    def _get_type(self, *args):
        return self._obj.invoke("_get_type", _0_CORBA.IDLType._d__get_type, args)

    type = property(_get_type)


omniORB.registerObjref(IDLType._NP_RepositoryId, _objref_IDLType)
_0_CORBA._objref_IDLType = _objref_IDLType
del IDLType, _objref_IDLType

# IDLType skeleton
__name__ = "CORBA__POA"
class IDLType (_0_CORBA__POA.IRObject):
    _NP_RepositoryId = _0_CORBA.IDLType._NP_RepositoryId


    _omni_op_d = {"_get_type": _0_CORBA.IDLType._d__get_type}
    _omni_op_d.update(_0_CORBA__POA.IRObject._omni_op_d)

IDLType._omni_skeleton = IDLType
_0_CORBA__POA.IDLType = IDLType
omniORB.registerSkeleton(IDLType._NP_RepositoryId, IDLType)
del IDLType
__name__ = "CORBA"

# forward interface PrimitiveDef;
_0_CORBA._d_PrimitiveDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/PrimitiveDef:1.0", "PrimitiveDef")
omniORB.typeMapping["IDL:omg.org/CORBA/PrimitiveDef:1.0"] = _0_CORBA._d_PrimitiveDef

# forward interface StringDef;
_0_CORBA._d_StringDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/StringDef:1.0", "StringDef")
omniORB.typeMapping["IDL:omg.org/CORBA/StringDef:1.0"] = _0_CORBA._d_StringDef

# forward interface SequenceDef;
_0_CORBA._d_SequenceDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/SequenceDef:1.0", "SequenceDef")
omniORB.typeMapping["IDL:omg.org/CORBA/SequenceDef:1.0"] = _0_CORBA._d_SequenceDef

# forward interface ArrayDef;
_0_CORBA._d_ArrayDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ArrayDef:1.0", "ArrayDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ArrayDef:1.0"] = _0_CORBA._d_ArrayDef

# enum PrimitiveKind
_0_CORBA.pk_null = omniORB.EnumItem("pk_null", 0)
_0_CORBA.pk_void = omniORB.EnumItem("pk_void", 1)
_0_CORBA.pk_short = omniORB.EnumItem("pk_short", 2)
_0_CORBA.pk_long = omniORB.EnumItem("pk_long", 3)
_0_CORBA.pk_ushort = omniORB.EnumItem("pk_ushort", 4)
_0_CORBA.pk_ulong = omniORB.EnumItem("pk_ulong", 5)
_0_CORBA.pk_float = omniORB.EnumItem("pk_float", 6)
_0_CORBA.pk_double = omniORB.EnumItem("pk_double", 7)
_0_CORBA.pk_boolean = omniORB.EnumItem("pk_boolean", 8)
_0_CORBA.pk_char = omniORB.EnumItem("pk_char", 9)
_0_CORBA.pk_octet = omniORB.EnumItem("pk_octet", 10)
_0_CORBA.pk_any = omniORB.EnumItem("pk_any", 11)
_0_CORBA.pk_TypeCode = omniORB.EnumItem("pk_TypeCode", 12)
_0_CORBA.pk_Principal = omniORB.EnumItem("pk_Principal", 13)
_0_CORBA.pk_string = omniORB.EnumItem("pk_string", 14)
_0_CORBA.pk_objref = omniORB.EnumItem("pk_objref", 15)
_0_CORBA.pk_longlong = omniORB.EnumItem("pk_longlong", 16)
_0_CORBA.pk_ulonglong = omniORB.EnumItem("pk_ulonglong", 17)
_0_CORBA.pk_longdouble = omniORB.EnumItem("pk_longdouble", 18)
_0_CORBA.pk_wchar = omniORB.EnumItem("pk_wchar", 19)
_0_CORBA.pk_wstring = omniORB.EnumItem("pk_wstring", 20)
_0_CORBA.pk_value_base = omniORB.EnumItem("pk_value_base", 21)
_0_CORBA.PrimitiveKind = omniORB.Enum("IDL:omg.org/CORBA/PrimitiveKind:1.0", (_0_CORBA.pk_null, _0_CORBA.pk_void, _0_CORBA.pk_short, _0_CORBA.pk_long, _0_CORBA.pk_ushort, _0_CORBA.pk_ulong, _0_CORBA.pk_float, _0_CORBA.pk_double, _0_CORBA.pk_boolean, _0_CORBA.pk_char, _0_CORBA.pk_octet, _0_CORBA.pk_any, _0_CORBA.pk_TypeCode, _0_CORBA.pk_Principal, _0_CORBA.pk_string, _0_CORBA.pk_objref, _0_CORBA.pk_longlong, _0_CORBA.pk_ulonglong, _0_CORBA.pk_longdouble, _0_CORBA.pk_wchar, _0_CORBA.pk_wstring, _0_CORBA.pk_value_base,))

_0_CORBA._d_PrimitiveKind  = (omniORB.tcInternal.tv_enum, _0_CORBA.PrimitiveKind._NP_RepositoryId, "PrimitiveKind", _0_CORBA.PrimitiveKind._items)
_0_CORBA._tc_PrimitiveKind = omniORB.tcInternal.createTypeCode(_0_CORBA._d_PrimitiveKind)
omniORB.registerType(_0_CORBA.PrimitiveKind._NP_RepositoryId, _0_CORBA._d_PrimitiveKind, _0_CORBA._tc_PrimitiveKind)

# interface Repository
_0_CORBA._d_Repository = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/Repository:1.0", "Repository")
omniORB.typeMapping["IDL:omg.org/CORBA/Repository:1.0"] = _0_CORBA._d_Repository
_0_CORBA.Repository = omniORB.newEmptyClass()
class Repository (_0_CORBA.Container):
    _NP_RepositoryId = _0_CORBA._d_Repository[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.Repository = Repository
_0_CORBA._tc_Repository = omniORB.tcInternal.createTypeCode(_0_CORBA._d_Repository)
omniORB.registerType(Repository._NP_RepositoryId, _0_CORBA._d_Repository, _0_CORBA._tc_Repository)

# Repository operations and attributes
Repository._d_lookup_id = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CORBA/Contained:1.0"], ), None)
Repository._d_get_canonical_typecode = ((omniORB.tcInternal.tv_TypeCode, ), (omniORB.tcInternal.tv_TypeCode, ), None)
Repository._d_get_primitive = ((omniORB.typeMapping["IDL:omg.org/CORBA/PrimitiveKind:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CORBA/PrimitiveDef:1.0"], ), None)
Repository._d_create_string = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:omg.org/CORBA/StringDef:1.0"], ), None)
Repository._d_create_wstring = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:omg.org/CORBA/WstringDef:1.0"], ), None)
Repository._d_create_sequence = ((omniORB.tcInternal.tv_ulong, omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/SequenceDef:1.0"], ), None)
Repository._d_create_array = ((omniORB.tcInternal.tv_ulong, omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/ArrayDef:1.0"], ), None)
Repository._d_create_fixed = ((omniORB.tcInternal.tv_ushort, omniORB.tcInternal.tv_short), (omniORB.typeMapping["IDL:omg.org/CORBA/FixedDef:1.0"], ), None)

# Repository object reference
class _objref_Repository (_0_CORBA._objref_Container):
    _NP_RepositoryId = Repository._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Container.__init__(self, obj)

    def lookup_id(self, *args):
        return self._obj.invoke("lookup_id", _0_CORBA.Repository._d_lookup_id, args)

    def get_canonical_typecode(self, *args):
        return self._obj.invoke("get_canonical_typecode", _0_CORBA.Repository._d_get_canonical_typecode, args)

    def get_primitive(self, *args):
        return self._obj.invoke("get_primitive", _0_CORBA.Repository._d_get_primitive, args)

    def create_string(self, *args):
        return self._obj.invoke("create_string", _0_CORBA.Repository._d_create_string, args)

    def create_wstring(self, *args):
        return self._obj.invoke("create_wstring", _0_CORBA.Repository._d_create_wstring, args)

    def create_sequence(self, *args):
        return self._obj.invoke("create_sequence", _0_CORBA.Repository._d_create_sequence, args)

    def create_array(self, *args):
        return self._obj.invoke("create_array", _0_CORBA.Repository._d_create_array, args)

    def create_fixed(self, *args):
        return self._obj.invoke("create_fixed", _0_CORBA.Repository._d_create_fixed, args)

omniORB.registerObjref(Repository._NP_RepositoryId, _objref_Repository)
_0_CORBA._objref_Repository = _objref_Repository
del Repository, _objref_Repository

# Repository skeleton
__name__ = "CORBA__POA"
class Repository (_0_CORBA__POA.Container):
    _NP_RepositoryId = _0_CORBA.Repository._NP_RepositoryId


    _omni_op_d = {"lookup_id": _0_CORBA.Repository._d_lookup_id, "get_canonical_typecode": _0_CORBA.Repository._d_get_canonical_typecode, "get_primitive": _0_CORBA.Repository._d_get_primitive, "create_string": _0_CORBA.Repository._d_create_string, "create_wstring": _0_CORBA.Repository._d_create_wstring, "create_sequence": _0_CORBA.Repository._d_create_sequence, "create_array": _0_CORBA.Repository._d_create_array, "create_fixed": _0_CORBA.Repository._d_create_fixed}
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)

Repository._omni_skeleton = Repository
_0_CORBA__POA.Repository = Repository
omniORB.registerSkeleton(Repository._NP_RepositoryId, Repository)
del Repository
__name__ = "CORBA"

# interface ModuleDef
_0_CORBA._d_ModuleDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ModuleDef:1.0", "ModuleDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ModuleDef:1.0"] = _0_CORBA._d_ModuleDef
_0_CORBA.ModuleDef = omniORB.newEmptyClass()
class ModuleDef (_0_CORBA.Container, _0_CORBA.Contained):
    _NP_RepositoryId = _0_CORBA._d_ModuleDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.ModuleDef = ModuleDef
_0_CORBA._tc_ModuleDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ModuleDef)
omniORB.registerType(ModuleDef._NP_RepositoryId, _0_CORBA._d_ModuleDef, _0_CORBA._tc_ModuleDef)

# ModuleDef object reference
class _objref_ModuleDef (_0_CORBA._objref_Container, _0_CORBA._objref_Contained):
    _NP_RepositoryId = ModuleDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Container.__init__(self, obj)
        _0_CORBA._objref_Contained.__init__(self, obj)

omniORB.registerObjref(ModuleDef._NP_RepositoryId, _objref_ModuleDef)
_0_CORBA._objref_ModuleDef = _objref_ModuleDef
del ModuleDef, _objref_ModuleDef

# ModuleDef skeleton
__name__ = "CORBA__POA"
class ModuleDef (_0_CORBA__POA.Container, _0_CORBA__POA.Contained):
    _NP_RepositoryId = _0_CORBA.ModuleDef._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)

ModuleDef._omni_skeleton = ModuleDef
_0_CORBA__POA.ModuleDef = ModuleDef
omniORB.registerSkeleton(ModuleDef._NP_RepositoryId, ModuleDef)
del ModuleDef
__name__ = "CORBA"

# struct ModuleDescription
_0_CORBA.ModuleDescription = omniORB.newEmptyClass()
class ModuleDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/ModuleDescription:1.0"

    def __init__(self, name, id, defined_in, version):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version

_0_CORBA.ModuleDescription = ModuleDescription
_0_CORBA._d_ModuleDescription  = (omniORB.tcInternal.tv_struct, ModuleDescription, ModuleDescription._NP_RepositoryId, "ModuleDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"])
_0_CORBA._tc_ModuleDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ModuleDescription)
omniORB.registerType(ModuleDescription._NP_RepositoryId, _0_CORBA._d_ModuleDescription, _0_CORBA._tc_ModuleDescription)
del ModuleDescription

# interface ConstantDef
_0_CORBA._d_ConstantDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ConstantDef:1.0", "ConstantDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ConstantDef:1.0"] = _0_CORBA._d_ConstantDef
_0_CORBA.ConstantDef = omniORB.newEmptyClass()
class ConstantDef (_0_CORBA.Contained):
    _NP_RepositoryId = _0_CORBA._d_ConstantDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.ConstantDef = ConstantDef
_0_CORBA._tc_ConstantDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ConstantDef)
omniORB.registerType(ConstantDef._NP_RepositoryId, _0_CORBA._d_ConstantDef, _0_CORBA._tc_ConstantDef)

# ConstantDef operations and attributes
ConstantDef._d__get_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
ConstantDef._d__get_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
ConstantDef._d__set_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)
ConstantDef._d__get_value = ((),(omniORB.tcInternal.tv_any,),None)
ConstantDef._d__set_value = ((omniORB.tcInternal.tv_any,),(),None)

# ConstantDef object reference
class _objref_ConstantDef (_0_CORBA._objref_Contained):
    _NP_RepositoryId = ConstantDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Contained.__init__(self, obj)

    def _get_type(self, *args):
        return self._obj.invoke("_get_type", _0_CORBA.ConstantDef._d__get_type, args)

    type = property(_get_type)


    def _get_type_def(self, *args):
        return self._obj.invoke("_get_type_def", _0_CORBA.ConstantDef._d__get_type_def, args)

    def _set_type_def(self, *args):
        return self._obj.invoke("_set_type_def", _0_CORBA.ConstantDef._d__set_type_def, args)

    type_def = property(_get_type_def, _set_type_def)


    def _get_value(self, *args):
        return self._obj.invoke("_get_value", _0_CORBA.ConstantDef._d__get_value, args)

    def _set_value(self, *args):
        return self._obj.invoke("_set_value", _0_CORBA.ConstantDef._d__set_value, args)

    value = property(_get_value, _set_value)


omniORB.registerObjref(ConstantDef._NP_RepositoryId, _objref_ConstantDef)
_0_CORBA._objref_ConstantDef = _objref_ConstantDef
del ConstantDef, _objref_ConstantDef

# ConstantDef skeleton
__name__ = "CORBA__POA"
class ConstantDef (_0_CORBA__POA.Contained):
    _NP_RepositoryId = _0_CORBA.ConstantDef._NP_RepositoryId


    _omni_op_d = {"_get_type": _0_CORBA.ConstantDef._d__get_type, "_get_type_def": _0_CORBA.ConstantDef._d__get_type_def, "_set_type_def": _0_CORBA.ConstantDef._d__set_type_def, "_get_value": _0_CORBA.ConstantDef._d__get_value, "_set_value": _0_CORBA.ConstantDef._d__set_value}
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)

ConstantDef._omni_skeleton = ConstantDef
_0_CORBA__POA.ConstantDef = ConstantDef
omniORB.registerSkeleton(ConstantDef._NP_RepositoryId, ConstantDef)
del ConstantDef
__name__ = "CORBA"

# struct ConstantDescription
_0_CORBA.ConstantDescription = omniORB.newEmptyClass()
class ConstantDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/ConstantDescription:1.0"

    def __init__(self, name, id, defined_in, version, type, value):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version
        self.type = type
        self.value = value

_0_CORBA.ConstantDescription = ConstantDescription
_0_CORBA._d_ConstantDescription  = (omniORB.tcInternal.tv_struct, ConstantDescription, ConstantDescription._NP_RepositoryId, "ConstantDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "type", omniORB.tcInternal.tv_TypeCode, "value", omniORB.tcInternal.tv_any)
_0_CORBA._tc_ConstantDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ConstantDescription)
omniORB.registerType(ConstantDescription._NP_RepositoryId, _0_CORBA._d_ConstantDescription, _0_CORBA._tc_ConstantDescription)
del ConstantDescription

# interface TypedefDef
_0_CORBA._d_TypedefDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/TypedefDef:1.0", "TypedefDef")
omniORB.typeMapping["IDL:omg.org/CORBA/TypedefDef:1.0"] = _0_CORBA._d_TypedefDef
_0_CORBA.TypedefDef = omniORB.newEmptyClass()
class TypedefDef (_0_CORBA.Contained, _0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_TypedefDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.TypedefDef = TypedefDef
_0_CORBA._tc_TypedefDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_TypedefDef)
omniORB.registerType(TypedefDef._NP_RepositoryId, _0_CORBA._d_TypedefDef, _0_CORBA._tc_TypedefDef)

# TypedefDef object reference
class _objref_TypedefDef (_0_CORBA._objref_Contained, _0_CORBA._objref_IDLType):
    _NP_RepositoryId = TypedefDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Contained.__init__(self, obj)
        _0_CORBA._objref_IDLType.__init__(self, obj)

omniORB.registerObjref(TypedefDef._NP_RepositoryId, _objref_TypedefDef)
_0_CORBA._objref_TypedefDef = _objref_TypedefDef
del TypedefDef, _objref_TypedefDef

# TypedefDef skeleton
__name__ = "CORBA__POA"
class TypedefDef (_0_CORBA__POA.Contained, _0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.TypedefDef._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

TypedefDef._omni_skeleton = TypedefDef
_0_CORBA__POA.TypedefDef = TypedefDef
omniORB.registerSkeleton(TypedefDef._NP_RepositoryId, TypedefDef)
del TypedefDef
__name__ = "CORBA"

# struct TypeDescription
_0_CORBA.TypeDescription = omniORB.newEmptyClass()
class TypeDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/TypeDescription:1.0"

    def __init__(self, name, id, defined_in, version, type):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version
        self.type = type

_0_CORBA.TypeDescription = TypeDescription
_0_CORBA._d_TypeDescription  = (omniORB.tcInternal.tv_struct, TypeDescription, TypeDescription._NP_RepositoryId, "TypeDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "type", omniORB.tcInternal.tv_TypeCode)
_0_CORBA._tc_TypeDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_TypeDescription)
omniORB.registerType(TypeDescription._NP_RepositoryId, _0_CORBA._d_TypeDescription, _0_CORBA._tc_TypeDescription)
del TypeDescription

# interface StructDef
_0_CORBA._d_StructDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/StructDef:1.0", "StructDef")
omniORB.typeMapping["IDL:omg.org/CORBA/StructDef:1.0"] = _0_CORBA._d_StructDef
_0_CORBA.StructDef = omniORB.newEmptyClass()
class StructDef (_0_CORBA.TypedefDef, _0_CORBA.Container):
    _NP_RepositoryId = _0_CORBA._d_StructDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.StructDef = StructDef
_0_CORBA._tc_StructDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_StructDef)
omniORB.registerType(StructDef._NP_RepositoryId, _0_CORBA._d_StructDef, _0_CORBA._tc_StructDef)

# StructDef operations and attributes
StructDef._d__get_members = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"],),None)
StructDef._d__set_members = ((omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"],),(),None)

# StructDef object reference
class _objref_StructDef (_0_CORBA._objref_TypedefDef, _0_CORBA._objref_Container):
    _NP_RepositoryId = StructDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_TypedefDef.__init__(self, obj)
        _0_CORBA._objref_Container.__init__(self, obj)

    def _get_members(self, *args):
        return self._obj.invoke("_get_members", _0_CORBA.StructDef._d__get_members, args)

    def _set_members(self, *args):
        return self._obj.invoke("_set_members", _0_CORBA.StructDef._d__set_members, args)

    members = property(_get_members, _set_members)


omniORB.registerObjref(StructDef._NP_RepositoryId, _objref_StructDef)
_0_CORBA._objref_StructDef = _objref_StructDef
del StructDef, _objref_StructDef

# StructDef skeleton
__name__ = "CORBA__POA"
class StructDef (_0_CORBA__POA.TypedefDef, _0_CORBA__POA.Container):
    _NP_RepositoryId = _0_CORBA.StructDef._NP_RepositoryId


    _omni_op_d = {"_get_members": _0_CORBA.StructDef._d__get_members, "_set_members": _0_CORBA.StructDef._d__set_members}
    _omni_op_d.update(_0_CORBA__POA.TypedefDef._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)

StructDef._omni_skeleton = StructDef
_0_CORBA__POA.StructDef = StructDef
omniORB.registerSkeleton(StructDef._NP_RepositoryId, StructDef)
del StructDef
__name__ = "CORBA"

# interface UnionDef
_0_CORBA._d_UnionDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/UnionDef:1.0", "UnionDef")
omniORB.typeMapping["IDL:omg.org/CORBA/UnionDef:1.0"] = _0_CORBA._d_UnionDef
_0_CORBA.UnionDef = omniORB.newEmptyClass()
class UnionDef (_0_CORBA.TypedefDef, _0_CORBA.Container):
    _NP_RepositoryId = _0_CORBA._d_UnionDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.UnionDef = UnionDef
_0_CORBA._tc_UnionDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_UnionDef)
omniORB.registerType(UnionDef._NP_RepositoryId, _0_CORBA._d_UnionDef, _0_CORBA._tc_UnionDef)

# UnionDef operations and attributes
UnionDef._d__get_discriminator_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
UnionDef._d__get_discriminator_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
UnionDef._d__set_discriminator_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)
UnionDef._d__get_members = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/UnionMemberSeq:1.0"],),None)
UnionDef._d__set_members = ((omniORB.typeMapping["IDL:omg.org/CORBA/UnionMemberSeq:1.0"],),(),None)

# UnionDef object reference
class _objref_UnionDef (_0_CORBA._objref_TypedefDef, _0_CORBA._objref_Container):
    _NP_RepositoryId = UnionDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_TypedefDef.__init__(self, obj)
        _0_CORBA._objref_Container.__init__(self, obj)

    def _get_discriminator_type(self, *args):
        return self._obj.invoke("_get_discriminator_type", _0_CORBA.UnionDef._d__get_discriminator_type, args)

    discriminator_type = property(_get_discriminator_type)


    def _get_discriminator_type_def(self, *args):
        return self._obj.invoke("_get_discriminator_type_def", _0_CORBA.UnionDef._d__get_discriminator_type_def, args)

    def _set_discriminator_type_def(self, *args):
        return self._obj.invoke("_set_discriminator_type_def", _0_CORBA.UnionDef._d__set_discriminator_type_def, args)

    discriminator_type_def = property(_get_discriminator_type_def, _set_discriminator_type_def)


    def _get_members(self, *args):
        return self._obj.invoke("_get_members", _0_CORBA.UnionDef._d__get_members, args)

    def _set_members(self, *args):
        return self._obj.invoke("_set_members", _0_CORBA.UnionDef._d__set_members, args)

    members = property(_get_members, _set_members)


omniORB.registerObjref(UnionDef._NP_RepositoryId, _objref_UnionDef)
_0_CORBA._objref_UnionDef = _objref_UnionDef
del UnionDef, _objref_UnionDef

# UnionDef skeleton
__name__ = "CORBA__POA"
class UnionDef (_0_CORBA__POA.TypedefDef, _0_CORBA__POA.Container):
    _NP_RepositoryId = _0_CORBA.UnionDef._NP_RepositoryId


    _omni_op_d = {"_get_discriminator_type": _0_CORBA.UnionDef._d__get_discriminator_type, "_get_discriminator_type_def": _0_CORBA.UnionDef._d__get_discriminator_type_def, "_set_discriminator_type_def": _0_CORBA.UnionDef._d__set_discriminator_type_def, "_get_members": _0_CORBA.UnionDef._d__get_members, "_set_members": _0_CORBA.UnionDef._d__set_members}
    _omni_op_d.update(_0_CORBA__POA.TypedefDef._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)

UnionDef._omni_skeleton = UnionDef
_0_CORBA__POA.UnionDef = UnionDef
omniORB.registerSkeleton(UnionDef._NP_RepositoryId, UnionDef)
del UnionDef
__name__ = "CORBA"

# interface EnumDef
_0_CORBA._d_EnumDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/EnumDef:1.0", "EnumDef")
omniORB.typeMapping["IDL:omg.org/CORBA/EnumDef:1.0"] = _0_CORBA._d_EnumDef
_0_CORBA.EnumDef = omniORB.newEmptyClass()
class EnumDef (_0_CORBA.TypedefDef):
    _NP_RepositoryId = _0_CORBA._d_EnumDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.EnumDef = EnumDef
_0_CORBA._tc_EnumDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_EnumDef)
omniORB.registerType(EnumDef._NP_RepositoryId, _0_CORBA._d_EnumDef, _0_CORBA._tc_EnumDef)

# EnumDef operations and attributes
EnumDef._d__get_members = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/EnumMemberSeq:1.0"],),None)
EnumDef._d__set_members = ((omniORB.typeMapping["IDL:omg.org/CORBA/EnumMemberSeq:1.0"],),(),None)

# EnumDef object reference
class _objref_EnumDef (_0_CORBA._objref_TypedefDef):
    _NP_RepositoryId = EnumDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_TypedefDef.__init__(self, obj)

    def _get_members(self, *args):
        return self._obj.invoke("_get_members", _0_CORBA.EnumDef._d__get_members, args)

    def _set_members(self, *args):
        return self._obj.invoke("_set_members", _0_CORBA.EnumDef._d__set_members, args)

    members = property(_get_members, _set_members)


omniORB.registerObjref(EnumDef._NP_RepositoryId, _objref_EnumDef)
_0_CORBA._objref_EnumDef = _objref_EnumDef
del EnumDef, _objref_EnumDef

# EnumDef skeleton
__name__ = "CORBA__POA"
class EnumDef (_0_CORBA__POA.TypedefDef):
    _NP_RepositoryId = _0_CORBA.EnumDef._NP_RepositoryId


    _omni_op_d = {"_get_members": _0_CORBA.EnumDef._d__get_members, "_set_members": _0_CORBA.EnumDef._d__set_members}
    _omni_op_d.update(_0_CORBA__POA.TypedefDef._omni_op_d)

EnumDef._omni_skeleton = EnumDef
_0_CORBA__POA.EnumDef = EnumDef
omniORB.registerSkeleton(EnumDef._NP_RepositoryId, EnumDef)
del EnumDef
__name__ = "CORBA"

# interface AliasDef
_0_CORBA._d_AliasDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/AliasDef:1.0", "AliasDef")
omniORB.typeMapping["IDL:omg.org/CORBA/AliasDef:1.0"] = _0_CORBA._d_AliasDef
_0_CORBA.AliasDef = omniORB.newEmptyClass()
class AliasDef (_0_CORBA.TypedefDef):
    _NP_RepositoryId = _0_CORBA._d_AliasDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.AliasDef = AliasDef
_0_CORBA._tc_AliasDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_AliasDef)
omniORB.registerType(AliasDef._NP_RepositoryId, _0_CORBA._d_AliasDef, _0_CORBA._tc_AliasDef)

# AliasDef operations and attributes
AliasDef._d__get_original_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
AliasDef._d__set_original_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)

# AliasDef object reference
class _objref_AliasDef (_0_CORBA._objref_TypedefDef):
    _NP_RepositoryId = AliasDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_TypedefDef.__init__(self, obj)

    def _get_original_type_def(self, *args):
        return self._obj.invoke("_get_original_type_def", _0_CORBA.AliasDef._d__get_original_type_def, args)

    def _set_original_type_def(self, *args):
        return self._obj.invoke("_set_original_type_def", _0_CORBA.AliasDef._d__set_original_type_def, args)

    original_type_def = property(_get_original_type_def, _set_original_type_def)


omniORB.registerObjref(AliasDef._NP_RepositoryId, _objref_AliasDef)
_0_CORBA._objref_AliasDef = _objref_AliasDef
del AliasDef, _objref_AliasDef

# AliasDef skeleton
__name__ = "CORBA__POA"
class AliasDef (_0_CORBA__POA.TypedefDef):
    _NP_RepositoryId = _0_CORBA.AliasDef._NP_RepositoryId


    _omni_op_d = {"_get_original_type_def": _0_CORBA.AliasDef._d__get_original_type_def, "_set_original_type_def": _0_CORBA.AliasDef._d__set_original_type_def}
    _omni_op_d.update(_0_CORBA__POA.TypedefDef._omni_op_d)

AliasDef._omni_skeleton = AliasDef
_0_CORBA__POA.AliasDef = AliasDef
omniORB.registerSkeleton(AliasDef._NP_RepositoryId, AliasDef)
del AliasDef
__name__ = "CORBA"

# interface NativeDef
_0_CORBA._d_NativeDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/NativeDef:1.0", "NativeDef")
omniORB.typeMapping["IDL:omg.org/CORBA/NativeDef:1.0"] = _0_CORBA._d_NativeDef
_0_CORBA.NativeDef = omniORB.newEmptyClass()
class NativeDef (_0_CORBA.TypedefDef):
    _NP_RepositoryId = _0_CORBA._d_NativeDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.NativeDef = NativeDef
_0_CORBA._tc_NativeDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_NativeDef)
omniORB.registerType(NativeDef._NP_RepositoryId, _0_CORBA._d_NativeDef, _0_CORBA._tc_NativeDef)

# NativeDef object reference
class _objref_NativeDef (_0_CORBA._objref_TypedefDef):
    _NP_RepositoryId = NativeDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_TypedefDef.__init__(self, obj)

omniORB.registerObjref(NativeDef._NP_RepositoryId, _objref_NativeDef)
_0_CORBA._objref_NativeDef = _objref_NativeDef
del NativeDef, _objref_NativeDef

# NativeDef skeleton
__name__ = "CORBA__POA"
class NativeDef (_0_CORBA__POA.TypedefDef):
    _NP_RepositoryId = _0_CORBA.NativeDef._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CORBA__POA.TypedefDef._omni_op_d)

NativeDef._omni_skeleton = NativeDef
_0_CORBA__POA.NativeDef = NativeDef
omniORB.registerSkeleton(NativeDef._NP_RepositoryId, NativeDef)
del NativeDef
__name__ = "CORBA"

# interface PrimitiveDef
_0_CORBA._d_PrimitiveDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/PrimitiveDef:1.0", "PrimitiveDef")
omniORB.typeMapping["IDL:omg.org/CORBA/PrimitiveDef:1.0"] = _0_CORBA._d_PrimitiveDef
_0_CORBA.PrimitiveDef = omniORB.newEmptyClass()
class PrimitiveDef (_0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_PrimitiveDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.PrimitiveDef = PrimitiveDef
_0_CORBA._tc_PrimitiveDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_PrimitiveDef)
omniORB.registerType(PrimitiveDef._NP_RepositoryId, _0_CORBA._d_PrimitiveDef, _0_CORBA._tc_PrimitiveDef)

# PrimitiveDef operations and attributes
PrimitiveDef._d__get_kind = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/PrimitiveKind:1.0"],),None)

# PrimitiveDef object reference
class _objref_PrimitiveDef (_0_CORBA._objref_IDLType):
    _NP_RepositoryId = PrimitiveDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_kind(self, *args):
        return self._obj.invoke("_get_kind", _0_CORBA.PrimitiveDef._d__get_kind, args)

    kind = property(_get_kind)


omniORB.registerObjref(PrimitiveDef._NP_RepositoryId, _objref_PrimitiveDef)
_0_CORBA._objref_PrimitiveDef = _objref_PrimitiveDef
del PrimitiveDef, _objref_PrimitiveDef

# PrimitiveDef skeleton
__name__ = "CORBA__POA"
class PrimitiveDef (_0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.PrimitiveDef._NP_RepositoryId


    _omni_op_d = {"_get_kind": _0_CORBA.PrimitiveDef._d__get_kind}
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

PrimitiveDef._omni_skeleton = PrimitiveDef
_0_CORBA__POA.PrimitiveDef = PrimitiveDef
omniORB.registerSkeleton(PrimitiveDef._NP_RepositoryId, PrimitiveDef)
del PrimitiveDef
__name__ = "CORBA"

# interface StringDef
_0_CORBA._d_StringDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/StringDef:1.0", "StringDef")
omniORB.typeMapping["IDL:omg.org/CORBA/StringDef:1.0"] = _0_CORBA._d_StringDef
_0_CORBA.StringDef = omniORB.newEmptyClass()
class StringDef (_0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_StringDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.StringDef = StringDef
_0_CORBA._tc_StringDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_StringDef)
omniORB.registerType(StringDef._NP_RepositoryId, _0_CORBA._d_StringDef, _0_CORBA._tc_StringDef)

# StringDef operations and attributes
StringDef._d__get_bound = ((),(omniORB.tcInternal.tv_ulong,),None)
StringDef._d__set_bound = ((omniORB.tcInternal.tv_ulong,),(),None)

# StringDef object reference
class _objref_StringDef (_0_CORBA._objref_IDLType):
    _NP_RepositoryId = StringDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_bound(self, *args):
        return self._obj.invoke("_get_bound", _0_CORBA.StringDef._d__get_bound, args)

    def _set_bound(self, *args):
        return self._obj.invoke("_set_bound", _0_CORBA.StringDef._d__set_bound, args)

    bound = property(_get_bound, _set_bound)


omniORB.registerObjref(StringDef._NP_RepositoryId, _objref_StringDef)
_0_CORBA._objref_StringDef = _objref_StringDef
del StringDef, _objref_StringDef

# StringDef skeleton
__name__ = "CORBA__POA"
class StringDef (_0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.StringDef._NP_RepositoryId


    _omni_op_d = {"_get_bound": _0_CORBA.StringDef._d__get_bound, "_set_bound": _0_CORBA.StringDef._d__set_bound}
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

StringDef._omni_skeleton = StringDef
_0_CORBA__POA.StringDef = StringDef
omniORB.registerSkeleton(StringDef._NP_RepositoryId, StringDef)
del StringDef
__name__ = "CORBA"

# interface WstringDef
_0_CORBA._d_WstringDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/WstringDef:1.0", "WstringDef")
omniORB.typeMapping["IDL:omg.org/CORBA/WstringDef:1.0"] = _0_CORBA._d_WstringDef
_0_CORBA.WstringDef = omniORB.newEmptyClass()
class WstringDef (_0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_WstringDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.WstringDef = WstringDef
_0_CORBA._tc_WstringDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_WstringDef)
omniORB.registerType(WstringDef._NP_RepositoryId, _0_CORBA._d_WstringDef, _0_CORBA._tc_WstringDef)

# WstringDef operations and attributes
WstringDef._d__get_bound = ((),(omniORB.tcInternal.tv_ulong,),None)
WstringDef._d__set_bound = ((omniORB.tcInternal.tv_ulong,),(),None)

# WstringDef object reference
class _objref_WstringDef (_0_CORBA._objref_IDLType):
    _NP_RepositoryId = WstringDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_bound(self, *args):
        return self._obj.invoke("_get_bound", _0_CORBA.WstringDef._d__get_bound, args)

    def _set_bound(self, *args):
        return self._obj.invoke("_set_bound", _0_CORBA.WstringDef._d__set_bound, args)

    bound = property(_get_bound, _set_bound)


omniORB.registerObjref(WstringDef._NP_RepositoryId, _objref_WstringDef)
_0_CORBA._objref_WstringDef = _objref_WstringDef
del WstringDef, _objref_WstringDef

# WstringDef skeleton
__name__ = "CORBA__POA"
class WstringDef (_0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.WstringDef._NP_RepositoryId


    _omni_op_d = {"_get_bound": _0_CORBA.WstringDef._d__get_bound, "_set_bound": _0_CORBA.WstringDef._d__set_bound}
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

WstringDef._omni_skeleton = WstringDef
_0_CORBA__POA.WstringDef = WstringDef
omniORB.registerSkeleton(WstringDef._NP_RepositoryId, WstringDef)
del WstringDef
__name__ = "CORBA"

# interface FixedDef
_0_CORBA._d_FixedDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/FixedDef:1.0", "FixedDef")
omniORB.typeMapping["IDL:omg.org/CORBA/FixedDef:1.0"] = _0_CORBA._d_FixedDef
_0_CORBA.FixedDef = omniORB.newEmptyClass()
class FixedDef (_0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_FixedDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.FixedDef = FixedDef
_0_CORBA._tc_FixedDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_FixedDef)
omniORB.registerType(FixedDef._NP_RepositoryId, _0_CORBA._d_FixedDef, _0_CORBA._tc_FixedDef)

# FixedDef operations and attributes
FixedDef._d__get_digits = ((),(omniORB.tcInternal.tv_ushort,),None)
FixedDef._d__set_digits = ((omniORB.tcInternal.tv_ushort,),(),None)
FixedDef._d__get_scale = ((),(omniORB.tcInternal.tv_short,),None)
FixedDef._d__set_scale = ((omniORB.tcInternal.tv_short,),(),None)

# FixedDef object reference
class _objref_FixedDef (_0_CORBA._objref_IDLType):
    _NP_RepositoryId = FixedDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_digits(self, *args):
        return self._obj.invoke("_get_digits", _0_CORBA.FixedDef._d__get_digits, args)

    def _set_digits(self, *args):
        return self._obj.invoke("_set_digits", _0_CORBA.FixedDef._d__set_digits, args)

    digits = property(_get_digits, _set_digits)


    def _get_scale(self, *args):
        return self._obj.invoke("_get_scale", _0_CORBA.FixedDef._d__get_scale, args)

    def _set_scale(self, *args):
        return self._obj.invoke("_set_scale", _0_CORBA.FixedDef._d__set_scale, args)

    scale = property(_get_scale, _set_scale)


omniORB.registerObjref(FixedDef._NP_RepositoryId, _objref_FixedDef)
_0_CORBA._objref_FixedDef = _objref_FixedDef
del FixedDef, _objref_FixedDef

# FixedDef skeleton
__name__ = "CORBA__POA"
class FixedDef (_0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.FixedDef._NP_RepositoryId


    _omni_op_d = {"_get_digits": _0_CORBA.FixedDef._d__get_digits, "_set_digits": _0_CORBA.FixedDef._d__set_digits, "_get_scale": _0_CORBA.FixedDef._d__get_scale, "_set_scale": _0_CORBA.FixedDef._d__set_scale}
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

FixedDef._omni_skeleton = FixedDef
_0_CORBA__POA.FixedDef = FixedDef
omniORB.registerSkeleton(FixedDef._NP_RepositoryId, FixedDef)
del FixedDef
__name__ = "CORBA"

# interface SequenceDef
_0_CORBA._d_SequenceDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/SequenceDef:1.0", "SequenceDef")
omniORB.typeMapping["IDL:omg.org/CORBA/SequenceDef:1.0"] = _0_CORBA._d_SequenceDef
_0_CORBA.SequenceDef = omniORB.newEmptyClass()
class SequenceDef (_0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_SequenceDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.SequenceDef = SequenceDef
_0_CORBA._tc_SequenceDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_SequenceDef)
omniORB.registerType(SequenceDef._NP_RepositoryId, _0_CORBA._d_SequenceDef, _0_CORBA._tc_SequenceDef)

# SequenceDef operations and attributes
SequenceDef._d__get_bound = ((),(omniORB.tcInternal.tv_ulong,),None)
SequenceDef._d__set_bound = ((omniORB.tcInternal.tv_ulong,),(),None)
SequenceDef._d__get_element_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
SequenceDef._d__get_element_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
SequenceDef._d__set_element_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)

# SequenceDef object reference
class _objref_SequenceDef (_0_CORBA._objref_IDLType):
    _NP_RepositoryId = SequenceDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_bound(self, *args):
        return self._obj.invoke("_get_bound", _0_CORBA.SequenceDef._d__get_bound, args)

    def _set_bound(self, *args):
        return self._obj.invoke("_set_bound", _0_CORBA.SequenceDef._d__set_bound, args)

    bound = property(_get_bound, _set_bound)


    def _get_element_type(self, *args):
        return self._obj.invoke("_get_element_type", _0_CORBA.SequenceDef._d__get_element_type, args)

    element_type = property(_get_element_type)


    def _get_element_type_def(self, *args):
        return self._obj.invoke("_get_element_type_def", _0_CORBA.SequenceDef._d__get_element_type_def, args)

    def _set_element_type_def(self, *args):
        return self._obj.invoke("_set_element_type_def", _0_CORBA.SequenceDef._d__set_element_type_def, args)

    element_type_def = property(_get_element_type_def, _set_element_type_def)


omniORB.registerObjref(SequenceDef._NP_RepositoryId, _objref_SequenceDef)
_0_CORBA._objref_SequenceDef = _objref_SequenceDef
del SequenceDef, _objref_SequenceDef

# SequenceDef skeleton
__name__ = "CORBA__POA"
class SequenceDef (_0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.SequenceDef._NP_RepositoryId


    _omni_op_d = {"_get_bound": _0_CORBA.SequenceDef._d__get_bound, "_set_bound": _0_CORBA.SequenceDef._d__set_bound, "_get_element_type": _0_CORBA.SequenceDef._d__get_element_type, "_get_element_type_def": _0_CORBA.SequenceDef._d__get_element_type_def, "_set_element_type_def": _0_CORBA.SequenceDef._d__set_element_type_def}
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

SequenceDef._omni_skeleton = SequenceDef
_0_CORBA__POA.SequenceDef = SequenceDef
omniORB.registerSkeleton(SequenceDef._NP_RepositoryId, SequenceDef)
del SequenceDef
__name__ = "CORBA"

# interface ArrayDef
_0_CORBA._d_ArrayDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ArrayDef:1.0", "ArrayDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ArrayDef:1.0"] = _0_CORBA._d_ArrayDef
_0_CORBA.ArrayDef = omniORB.newEmptyClass()
class ArrayDef (_0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_ArrayDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.ArrayDef = ArrayDef
_0_CORBA._tc_ArrayDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ArrayDef)
omniORB.registerType(ArrayDef._NP_RepositoryId, _0_CORBA._d_ArrayDef, _0_CORBA._tc_ArrayDef)

# ArrayDef operations and attributes
ArrayDef._d__get_length = ((),(omniORB.tcInternal.tv_ulong,),None)
ArrayDef._d__set_length = ((omniORB.tcInternal.tv_ulong,),(),None)
ArrayDef._d__get_element_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
ArrayDef._d__get_element_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
ArrayDef._d__set_element_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)

# ArrayDef object reference
class _objref_ArrayDef (_0_CORBA._objref_IDLType):
    _NP_RepositoryId = ArrayDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_length(self, *args):
        return self._obj.invoke("_get_length", _0_CORBA.ArrayDef._d__get_length, args)

    def _set_length(self, *args):
        return self._obj.invoke("_set_length", _0_CORBA.ArrayDef._d__set_length, args)

    length = property(_get_length, _set_length)


    def _get_element_type(self, *args):
        return self._obj.invoke("_get_element_type", _0_CORBA.ArrayDef._d__get_element_type, args)

    element_type = property(_get_element_type)


    def _get_element_type_def(self, *args):
        return self._obj.invoke("_get_element_type_def", _0_CORBA.ArrayDef._d__get_element_type_def, args)

    def _set_element_type_def(self, *args):
        return self._obj.invoke("_set_element_type_def", _0_CORBA.ArrayDef._d__set_element_type_def, args)

    element_type_def = property(_get_element_type_def, _set_element_type_def)


omniORB.registerObjref(ArrayDef._NP_RepositoryId, _objref_ArrayDef)
_0_CORBA._objref_ArrayDef = _objref_ArrayDef
del ArrayDef, _objref_ArrayDef

# ArrayDef skeleton
__name__ = "CORBA__POA"
class ArrayDef (_0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.ArrayDef._NP_RepositoryId


    _omni_op_d = {"_get_length": _0_CORBA.ArrayDef._d__get_length, "_set_length": _0_CORBA.ArrayDef._d__set_length, "_get_element_type": _0_CORBA.ArrayDef._d__get_element_type, "_get_element_type_def": _0_CORBA.ArrayDef._d__get_element_type_def, "_set_element_type_def": _0_CORBA.ArrayDef._d__set_element_type_def}
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

ArrayDef._omni_skeleton = ArrayDef
_0_CORBA__POA.ArrayDef = ArrayDef
omniORB.registerSkeleton(ArrayDef._NP_RepositoryId, ArrayDef)
del ArrayDef
__name__ = "CORBA"

# interface ExceptionDef
_0_CORBA._d_ExceptionDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ExceptionDef:1.0", "ExceptionDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDef:1.0"] = _0_CORBA._d_ExceptionDef
_0_CORBA.ExceptionDef = omniORB.newEmptyClass()
class ExceptionDef (_0_CORBA.Contained, _0_CORBA.Container):
    _NP_RepositoryId = _0_CORBA._d_ExceptionDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.ExceptionDef = ExceptionDef
_0_CORBA._tc_ExceptionDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ExceptionDef)
omniORB.registerType(ExceptionDef._NP_RepositoryId, _0_CORBA._d_ExceptionDef, _0_CORBA._tc_ExceptionDef)

# ExceptionDef operations and attributes
ExceptionDef._d__get_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
ExceptionDef._d__get_members = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"],),None)
ExceptionDef._d__set_members = ((omniORB.typeMapping["IDL:omg.org/CORBA/StructMemberSeq:1.0"],),(),None)

# ExceptionDef object reference
class _objref_ExceptionDef (_0_CORBA._objref_Contained, _0_CORBA._objref_Container):
    _NP_RepositoryId = ExceptionDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Contained.__init__(self, obj)
        _0_CORBA._objref_Container.__init__(self, obj)

    def _get_type(self, *args):
        return self._obj.invoke("_get_type", _0_CORBA.ExceptionDef._d__get_type, args)

    type = property(_get_type)


    def _get_members(self, *args):
        return self._obj.invoke("_get_members", _0_CORBA.ExceptionDef._d__get_members, args)

    def _set_members(self, *args):
        return self._obj.invoke("_set_members", _0_CORBA.ExceptionDef._d__set_members, args)

    members = property(_get_members, _set_members)


omniORB.registerObjref(ExceptionDef._NP_RepositoryId, _objref_ExceptionDef)
_0_CORBA._objref_ExceptionDef = _objref_ExceptionDef
del ExceptionDef, _objref_ExceptionDef

# ExceptionDef skeleton
__name__ = "CORBA__POA"
class ExceptionDef (_0_CORBA__POA.Contained, _0_CORBA__POA.Container):
    _NP_RepositoryId = _0_CORBA.ExceptionDef._NP_RepositoryId


    _omni_op_d = {"_get_type": _0_CORBA.ExceptionDef._d__get_type, "_get_members": _0_CORBA.ExceptionDef._d__get_members, "_set_members": _0_CORBA.ExceptionDef._d__set_members}
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)

ExceptionDef._omni_skeleton = ExceptionDef
_0_CORBA__POA.ExceptionDef = ExceptionDef
omniORB.registerSkeleton(ExceptionDef._NP_RepositoryId, ExceptionDef)
del ExceptionDef
__name__ = "CORBA"

# struct ExceptionDescription
_0_CORBA.ExceptionDescription = omniORB.newEmptyClass()
class ExceptionDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/ExceptionDescription:1.0"

    def __init__(self, name, id, defined_in, version, type):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version
        self.type = type

_0_CORBA.ExceptionDescription = ExceptionDescription
_0_CORBA._d_ExceptionDescription  = (omniORB.tcInternal.tv_struct, ExceptionDescription, ExceptionDescription._NP_RepositoryId, "ExceptionDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "type", omniORB.tcInternal.tv_TypeCode)
_0_CORBA._tc_ExceptionDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ExceptionDescription)
omniORB.registerType(ExceptionDescription._NP_RepositoryId, _0_CORBA._d_ExceptionDescription, _0_CORBA._tc_ExceptionDescription)
del ExceptionDescription

# enum AttributeMode
_0_CORBA.ATTR_NORMAL = omniORB.EnumItem("ATTR_NORMAL", 0)
_0_CORBA.ATTR_READONLY = omniORB.EnumItem("ATTR_READONLY", 1)
_0_CORBA.AttributeMode = omniORB.Enum("IDL:omg.org/CORBA/AttributeMode:1.0", (_0_CORBA.ATTR_NORMAL, _0_CORBA.ATTR_READONLY,))

_0_CORBA._d_AttributeMode  = (omniORB.tcInternal.tv_enum, _0_CORBA.AttributeMode._NP_RepositoryId, "AttributeMode", _0_CORBA.AttributeMode._items)
_0_CORBA._tc_AttributeMode = omniORB.tcInternal.createTypeCode(_0_CORBA._d_AttributeMode)
omniORB.registerType(_0_CORBA.AttributeMode._NP_RepositoryId, _0_CORBA._d_AttributeMode, _0_CORBA._tc_AttributeMode)

# interface AttributeDef
_0_CORBA._d_AttributeDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/AttributeDef:1.0", "AttributeDef")
omniORB.typeMapping["IDL:omg.org/CORBA/AttributeDef:1.0"] = _0_CORBA._d_AttributeDef
_0_CORBA.AttributeDef = omniORB.newEmptyClass()
class AttributeDef (_0_CORBA.Contained):
    _NP_RepositoryId = _0_CORBA._d_AttributeDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.AttributeDef = AttributeDef
_0_CORBA._tc_AttributeDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_AttributeDef)
omniORB.registerType(AttributeDef._NP_RepositoryId, _0_CORBA._d_AttributeDef, _0_CORBA._tc_AttributeDef)

# AttributeDef operations and attributes
AttributeDef._d__get_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
AttributeDef._d__get_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
AttributeDef._d__set_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)
AttributeDef._d__get_mode = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/AttributeMode:1.0"],),None)
AttributeDef._d__set_mode = ((omniORB.typeMapping["IDL:omg.org/CORBA/AttributeMode:1.0"],),(),None)

# AttributeDef object reference
class _objref_AttributeDef (_0_CORBA._objref_Contained):
    _NP_RepositoryId = AttributeDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Contained.__init__(self, obj)

    def _get_type(self, *args):
        return self._obj.invoke("_get_type", _0_CORBA.AttributeDef._d__get_type, args)

    type = property(_get_type)


    def _get_type_def(self, *args):
        return self._obj.invoke("_get_type_def", _0_CORBA.AttributeDef._d__get_type_def, args)

    def _set_type_def(self, *args):
        return self._obj.invoke("_set_type_def", _0_CORBA.AttributeDef._d__set_type_def, args)

    type_def = property(_get_type_def, _set_type_def)


    def _get_mode(self, *args):
        return self._obj.invoke("_get_mode", _0_CORBA.AttributeDef._d__get_mode, args)

    def _set_mode(self, *args):
        return self._obj.invoke("_set_mode", _0_CORBA.AttributeDef._d__set_mode, args)

    mode = property(_get_mode, _set_mode)


omniORB.registerObjref(AttributeDef._NP_RepositoryId, _objref_AttributeDef)
_0_CORBA._objref_AttributeDef = _objref_AttributeDef
del AttributeDef, _objref_AttributeDef

# AttributeDef skeleton
__name__ = "CORBA__POA"
class AttributeDef (_0_CORBA__POA.Contained):
    _NP_RepositoryId = _0_CORBA.AttributeDef._NP_RepositoryId


    _omni_op_d = {"_get_type": _0_CORBA.AttributeDef._d__get_type, "_get_type_def": _0_CORBA.AttributeDef._d__get_type_def, "_set_type_def": _0_CORBA.AttributeDef._d__set_type_def, "_get_mode": _0_CORBA.AttributeDef._d__get_mode, "_set_mode": _0_CORBA.AttributeDef._d__set_mode}
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)

AttributeDef._omni_skeleton = AttributeDef
_0_CORBA__POA.AttributeDef = AttributeDef
omniORB.registerSkeleton(AttributeDef._NP_RepositoryId, AttributeDef)
del AttributeDef
__name__ = "CORBA"

# struct AttributeDescription
_0_CORBA.AttributeDescription = omniORB.newEmptyClass()
class AttributeDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/AttributeDescription:1.0"

    def __init__(self, name, id, defined_in, version, type, mode):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version
        self.type = type
        self.mode = mode

_0_CORBA.AttributeDescription = AttributeDescription
_0_CORBA._d_AttributeDescription  = (omniORB.tcInternal.tv_struct, AttributeDescription, AttributeDescription._NP_RepositoryId, "AttributeDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "type", omniORB.tcInternal.tv_TypeCode, "mode", omniORB.typeMapping["IDL:omg.org/CORBA/AttributeMode:1.0"])
_0_CORBA._tc_AttributeDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_AttributeDescription)
omniORB.registerType(AttributeDescription._NP_RepositoryId, _0_CORBA._d_AttributeDescription, _0_CORBA._tc_AttributeDescription)
del AttributeDescription

# enum OperationMode
_0_CORBA.OP_NORMAL = omniORB.EnumItem("OP_NORMAL", 0)
_0_CORBA.OP_ONEWAY = omniORB.EnumItem("OP_ONEWAY", 1)
_0_CORBA.OperationMode = omniORB.Enum("IDL:omg.org/CORBA/OperationMode:1.0", (_0_CORBA.OP_NORMAL, _0_CORBA.OP_ONEWAY,))

_0_CORBA._d_OperationMode  = (omniORB.tcInternal.tv_enum, _0_CORBA.OperationMode._NP_RepositoryId, "OperationMode", _0_CORBA.OperationMode._items)
_0_CORBA._tc_OperationMode = omniORB.tcInternal.createTypeCode(_0_CORBA._d_OperationMode)
omniORB.registerType(_0_CORBA.OperationMode._NP_RepositoryId, _0_CORBA._d_OperationMode, _0_CORBA._tc_OperationMode)

# enum ParameterMode
_0_CORBA.PARAM_IN = omniORB.EnumItem("PARAM_IN", 0)
_0_CORBA.PARAM_OUT = omniORB.EnumItem("PARAM_OUT", 1)
_0_CORBA.PARAM_INOUT = omniORB.EnumItem("PARAM_INOUT", 2)
_0_CORBA.ParameterMode = omniORB.Enum("IDL:omg.org/CORBA/ParameterMode:1.0", (_0_CORBA.PARAM_IN, _0_CORBA.PARAM_OUT, _0_CORBA.PARAM_INOUT,))

_0_CORBA._d_ParameterMode  = (omniORB.tcInternal.tv_enum, _0_CORBA.ParameterMode._NP_RepositoryId, "ParameterMode", _0_CORBA.ParameterMode._items)
_0_CORBA._tc_ParameterMode = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ParameterMode)
omniORB.registerType(_0_CORBA.ParameterMode._NP_RepositoryId, _0_CORBA._d_ParameterMode, _0_CORBA._tc_ParameterMode)

# struct ParameterDescription
_0_CORBA.ParameterDescription = omniORB.newEmptyClass()
class ParameterDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/ParameterDescription:1.0"

    def __init__(self, name, type, type_def, mode):
        self.name = name
        self.type = type
        self.type_def = type_def
        self.mode = mode

_0_CORBA.ParameterDescription = ParameterDescription
_0_CORBA._d_ParameterDescription  = (omniORB.tcInternal.tv_struct, ParameterDescription, ParameterDescription._NP_RepositoryId, "ParameterDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "type", omniORB.tcInternal.tv_TypeCode, "type_def", omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], "mode", omniORB.typeMapping["IDL:omg.org/CORBA/ParameterMode:1.0"])
_0_CORBA._tc_ParameterDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ParameterDescription)
omniORB.registerType(ParameterDescription._NP_RepositoryId, _0_CORBA._d_ParameterDescription, _0_CORBA._tc_ParameterDescription)
del ParameterDescription

# typedef ... ParDescriptionSeq
class ParDescriptionSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ParDescriptionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ParDescriptionSeq = ParDescriptionSeq
_0_CORBA._d_ParDescriptionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ParameterDescription:1.0"], 0)
_0_CORBA._ad_ParDescriptionSeq = (omniORB.tcInternal.tv_alias, ParDescriptionSeq._NP_RepositoryId, "ParDescriptionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ParameterDescription:1.0"], 0))
_0_CORBA._tc_ParDescriptionSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ParDescriptionSeq)
omniORB.registerType(ParDescriptionSeq._NP_RepositoryId, _0_CORBA._ad_ParDescriptionSeq, _0_CORBA._tc_ParDescriptionSeq)
del ParDescriptionSeq

# typedef ... ContextIdentifier
class ContextIdentifier:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ContextIdentifier:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ContextIdentifier = ContextIdentifier
_0_CORBA._d_ContextIdentifier  = omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"]
_0_CORBA._ad_ContextIdentifier = (omniORB.tcInternal.tv_alias, ContextIdentifier._NP_RepositoryId, "ContextIdentifier", omniORB.typeCodeMapping["IDL:omg.org/CORBA/Identifier:1.0"]._d)
_0_CORBA._tc_ContextIdentifier = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ContextIdentifier)
omniORB.registerType(ContextIdentifier._NP_RepositoryId, _0_CORBA._ad_ContextIdentifier, _0_CORBA._tc_ContextIdentifier)
del ContextIdentifier

# typedef ... ContextIdSeq
class ContextIdSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ContextIdSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ContextIdSeq = ContextIdSeq
_0_CORBA._d_ContextIdSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdentifier:1.0"], 0)
_0_CORBA._ad_ContextIdSeq = (omniORB.tcInternal.tv_alias, ContextIdSeq._NP_RepositoryId, "ContextIdSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdentifier:1.0"], 0))
_0_CORBA._tc_ContextIdSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ContextIdSeq)
omniORB.registerType(ContextIdSeq._NP_RepositoryId, _0_CORBA._ad_ContextIdSeq, _0_CORBA._tc_ContextIdSeq)
del ContextIdSeq

# typedef ... ExceptionDefSeq
class ExceptionDefSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ExceptionDefSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ExceptionDefSeq = ExceptionDefSeq
_0_CORBA._d_ExceptionDefSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDef:1.0"], 0)
_0_CORBA._ad_ExceptionDefSeq = (omniORB.tcInternal.tv_alias, ExceptionDefSeq._NP_RepositoryId, "ExceptionDefSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDef:1.0"], 0))
_0_CORBA._tc_ExceptionDefSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ExceptionDefSeq)
omniORB.registerType(ExceptionDefSeq._NP_RepositoryId, _0_CORBA._ad_ExceptionDefSeq, _0_CORBA._tc_ExceptionDefSeq)
del ExceptionDefSeq

# typedef ... ExcDescriptionSeq
class ExcDescriptionSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/ExcDescriptionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.ExcDescriptionSeq = ExcDescriptionSeq
_0_CORBA._d_ExcDescriptionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDescription:1.0"], 0)
_0_CORBA._ad_ExcDescriptionSeq = (omniORB.tcInternal.tv_alias, ExcDescriptionSeq._NP_RepositoryId, "ExcDescriptionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDescription:1.0"], 0))
_0_CORBA._tc_ExcDescriptionSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_ExcDescriptionSeq)
omniORB.registerType(ExcDescriptionSeq._NP_RepositoryId, _0_CORBA._ad_ExcDescriptionSeq, _0_CORBA._tc_ExcDescriptionSeq)
del ExcDescriptionSeq

# interface OperationDef
_0_CORBA._d_OperationDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/OperationDef:1.0", "OperationDef")
omniORB.typeMapping["IDL:omg.org/CORBA/OperationDef:1.0"] = _0_CORBA._d_OperationDef
_0_CORBA.OperationDef = omniORB.newEmptyClass()
class OperationDef (_0_CORBA.Contained):
    _NP_RepositoryId = _0_CORBA._d_OperationDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.OperationDef = OperationDef
_0_CORBA._tc_OperationDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_OperationDef)
omniORB.registerType(OperationDef._NP_RepositoryId, _0_CORBA._d_OperationDef, _0_CORBA._tc_OperationDef)

# OperationDef operations and attributes
OperationDef._d__get_result = ((),(omniORB.tcInternal.tv_TypeCode,),None)
OperationDef._d__get_result_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
OperationDef._d__set_result_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)
OperationDef._d__get_params = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/ParDescriptionSeq:1.0"],),None)
OperationDef._d__set_params = ((omniORB.typeMapping["IDL:omg.org/CORBA/ParDescriptionSeq:1.0"],),(),None)
OperationDef._d__get_mode = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/OperationMode:1.0"],),None)
OperationDef._d__set_mode = ((omniORB.typeMapping["IDL:omg.org/CORBA/OperationMode:1.0"],),(),None)
OperationDef._d__get_contexts = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdSeq:1.0"],),None)
OperationDef._d__set_contexts = ((omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdSeq:1.0"],),(),None)
OperationDef._d__get_exceptions = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDefSeq:1.0"],),None)
OperationDef._d__set_exceptions = ((omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDefSeq:1.0"],),(),None)

# OperationDef object reference
class _objref_OperationDef (_0_CORBA._objref_Contained):
    _NP_RepositoryId = OperationDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Contained.__init__(self, obj)

    def _get_result(self, *args):
        return self._obj.invoke("_get_result", _0_CORBA.OperationDef._d__get_result, args)

    result = property(_get_result)


    def _get_result_def(self, *args):
        return self._obj.invoke("_get_result_def", _0_CORBA.OperationDef._d__get_result_def, args)

    def _set_result_def(self, *args):
        return self._obj.invoke("_set_result_def", _0_CORBA.OperationDef._d__set_result_def, args)

    result_def = property(_get_result_def, _set_result_def)


    def _get_params(self, *args):
        return self._obj.invoke("_get_params", _0_CORBA.OperationDef._d__get_params, args)

    def _set_params(self, *args):
        return self._obj.invoke("_set_params", _0_CORBA.OperationDef._d__set_params, args)

    params = property(_get_params, _set_params)


    def _get_mode(self, *args):
        return self._obj.invoke("_get_mode", _0_CORBA.OperationDef._d__get_mode, args)

    def _set_mode(self, *args):
        return self._obj.invoke("_set_mode", _0_CORBA.OperationDef._d__set_mode, args)

    mode = property(_get_mode, _set_mode)


    def _get_contexts(self, *args):
        return self._obj.invoke("_get_contexts", _0_CORBA.OperationDef._d__get_contexts, args)

    def _set_contexts(self, *args):
        return self._obj.invoke("_set_contexts", _0_CORBA.OperationDef._d__set_contexts, args)

    contexts = property(_get_contexts, _set_contexts)


    def _get_exceptions(self, *args):
        return self._obj.invoke("_get_exceptions", _0_CORBA.OperationDef._d__get_exceptions, args)

    def _set_exceptions(self, *args):
        return self._obj.invoke("_set_exceptions", _0_CORBA.OperationDef._d__set_exceptions, args)

    exceptions = property(_get_exceptions, _set_exceptions)


omniORB.registerObjref(OperationDef._NP_RepositoryId, _objref_OperationDef)
_0_CORBA._objref_OperationDef = _objref_OperationDef
del OperationDef, _objref_OperationDef

# OperationDef skeleton
__name__ = "CORBA__POA"
class OperationDef (_0_CORBA__POA.Contained):
    _NP_RepositoryId = _0_CORBA.OperationDef._NP_RepositoryId


    _omni_op_d = {"_get_result": _0_CORBA.OperationDef._d__get_result, "_get_result_def": _0_CORBA.OperationDef._d__get_result_def, "_set_result_def": _0_CORBA.OperationDef._d__set_result_def, "_get_params": _0_CORBA.OperationDef._d__get_params, "_set_params": _0_CORBA.OperationDef._d__set_params, "_get_mode": _0_CORBA.OperationDef._d__get_mode, "_set_mode": _0_CORBA.OperationDef._d__set_mode, "_get_contexts": _0_CORBA.OperationDef._d__get_contexts, "_set_contexts": _0_CORBA.OperationDef._d__set_contexts, "_get_exceptions": _0_CORBA.OperationDef._d__get_exceptions, "_set_exceptions": _0_CORBA.OperationDef._d__set_exceptions}
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)

OperationDef._omni_skeleton = OperationDef
_0_CORBA__POA.OperationDef = OperationDef
omniORB.registerSkeleton(OperationDef._NP_RepositoryId, OperationDef)
del OperationDef
__name__ = "CORBA"

# struct OperationDescription
_0_CORBA.OperationDescription = omniORB.newEmptyClass()
class OperationDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/OperationDescription:1.0"

    def __init__(self, name, id, defined_in, version, result, mode, contexts, parameters, exceptions):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version
        self.result = result
        self.mode = mode
        self.contexts = contexts
        self.parameters = parameters
        self.exceptions = exceptions

_0_CORBA.OperationDescription = OperationDescription
_0_CORBA._d_OperationDescription  = (omniORB.tcInternal.tv_struct, OperationDescription, OperationDescription._NP_RepositoryId, "OperationDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "result", omniORB.tcInternal.tv_TypeCode, "mode", omniORB.typeMapping["IDL:omg.org/CORBA/OperationMode:1.0"], "contexts", omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdSeq:1.0"], "parameters", omniORB.typeMapping["IDL:omg.org/CORBA/ParDescriptionSeq:1.0"], "exceptions", omniORB.typeMapping["IDL:omg.org/CORBA/ExcDescriptionSeq:1.0"])
_0_CORBA._tc_OperationDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_OperationDescription)
omniORB.registerType(OperationDescription._NP_RepositoryId, _0_CORBA._d_OperationDescription, _0_CORBA._tc_OperationDescription)
del OperationDescription

# typedef ... RepositoryIdSeq
class RepositoryIdSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/RepositoryIdSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.RepositoryIdSeq = RepositoryIdSeq
_0_CORBA._d_RepositoryIdSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], 0)
_0_CORBA._ad_RepositoryIdSeq = (omniORB.tcInternal.tv_alias, RepositoryIdSeq._NP_RepositoryId, "RepositoryIdSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], 0))
_0_CORBA._tc_RepositoryIdSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_RepositoryIdSeq)
omniORB.registerType(RepositoryIdSeq._NP_RepositoryId, _0_CORBA._ad_RepositoryIdSeq, _0_CORBA._tc_RepositoryIdSeq)
del RepositoryIdSeq

# typedef ... OpDescriptionSeq
class OpDescriptionSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/OpDescriptionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.OpDescriptionSeq = OpDescriptionSeq
_0_CORBA._d_OpDescriptionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/OperationDescription:1.0"], 0)
_0_CORBA._ad_OpDescriptionSeq = (omniORB.tcInternal.tv_alias, OpDescriptionSeq._NP_RepositoryId, "OpDescriptionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/OperationDescription:1.0"], 0))
_0_CORBA._tc_OpDescriptionSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_OpDescriptionSeq)
omniORB.registerType(OpDescriptionSeq._NP_RepositoryId, _0_CORBA._ad_OpDescriptionSeq, _0_CORBA._tc_OpDescriptionSeq)
del OpDescriptionSeq

# typedef ... AttrDescriptionSeq
class AttrDescriptionSeq:
    _NP_RepositoryId = "IDL:omg.org/CORBA/AttrDescriptionSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CORBA.AttrDescriptionSeq = AttrDescriptionSeq
_0_CORBA._d_AttrDescriptionSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/AttributeDescription:1.0"], 0)
_0_CORBA._ad_AttrDescriptionSeq = (omniORB.tcInternal.tv_alias, AttrDescriptionSeq._NP_RepositoryId, "AttrDescriptionSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CORBA/AttributeDescription:1.0"], 0))
_0_CORBA._tc_AttrDescriptionSeq = omniORB.tcInternal.createTypeCode(_0_CORBA._ad_AttrDescriptionSeq)
omniORB.registerType(AttrDescriptionSeq._NP_RepositoryId, _0_CORBA._ad_AttrDescriptionSeq, _0_CORBA._tc_AttrDescriptionSeq)
del AttrDescriptionSeq

# interface InterfaceDef
_0_CORBA._d_InterfaceDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/InterfaceDef:1.0", "InterfaceDef")
omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDef:1.0"] = _0_CORBA._d_InterfaceDef
_0_CORBA.InterfaceDef = omniORB.newEmptyClass()
class InterfaceDef (_0_CORBA.Container, _0_CORBA.Contained, _0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_InterfaceDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct FullInterfaceDescription
    _0_CORBA.InterfaceDef.FullInterfaceDescription = omniORB.newEmptyClass()
    class FullInterfaceDescription (omniORB.StructBase):
        _NP_RepositoryId = "IDL:omg.org/CORBA/InterfaceDef/FullInterfaceDescription:1.0"

        _NP_ClassName = "CORBA.InterfaceDef.FullInterfaceDescription"

        def __init__(self, name, id, defined_in, version, operations, attributes, base_interfaces, type):
            self.name = name
            self.id = id
            self.defined_in = defined_in
            self.version = version
            self.operations = operations
            self.attributes = attributes
            self.base_interfaces = base_interfaces
            self.type = type
    
    _d_FullInterfaceDescription  = _0_CORBA.InterfaceDef._d_FullInterfaceDescription = (omniORB.tcInternal.tv_struct, FullInterfaceDescription, FullInterfaceDescription._NP_RepositoryId, "FullInterfaceDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "operations", omniORB.typeMapping["IDL:omg.org/CORBA/OpDescriptionSeq:1.0"], "attributes", omniORB.typeMapping["IDL:omg.org/CORBA/AttrDescriptionSeq:1.0"], "base_interfaces", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryIdSeq:1.0"], "type", omniORB.tcInternal.tv_TypeCode)
    _tc_FullInterfaceDescription = omniORB.tcInternal.createTypeCode(_d_FullInterfaceDescription)
    omniORB.registerType(FullInterfaceDescription._NP_RepositoryId, _d_FullInterfaceDescription, _tc_FullInterfaceDescription)


_0_CORBA.InterfaceDef = InterfaceDef
_0_CORBA._tc_InterfaceDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_InterfaceDef)
omniORB.registerType(InterfaceDef._NP_RepositoryId, _0_CORBA._d_InterfaceDef, _0_CORBA._tc_InterfaceDef)

# InterfaceDef operations and attributes
InterfaceDef._d__get_base_interfaces = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDefSeq:1.0"],),None)
InterfaceDef._d__set_base_interfaces = ((omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDefSeq:1.0"],),(),None)
InterfaceDef._d_is_a = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
InterfaceDef._d_describe_interface = ((), (omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDef/FullInterfaceDescription:1.0"], ), None)
InterfaceDef._d_create_attribute = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/AttributeMode:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/AttributeDef:1.0"], ), None)
InterfaceDef._d_create_operation = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/OperationMode:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/ParDescriptionSeq:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDefSeq:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/OperationDef:1.0"], ), None)

# InterfaceDef object reference
class _objref_InterfaceDef (_0_CORBA._objref_Container, _0_CORBA._objref_Contained, _0_CORBA._objref_IDLType):
    _NP_RepositoryId = InterfaceDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Container.__init__(self, obj)
        _0_CORBA._objref_Contained.__init__(self, obj)
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_base_interfaces(self, *args):
        return self._obj.invoke("_get_base_interfaces", _0_CORBA.InterfaceDef._d__get_base_interfaces, args)

    def _set_base_interfaces(self, *args):
        return self._obj.invoke("_set_base_interfaces", _0_CORBA.InterfaceDef._d__set_base_interfaces, args)

    base_interfaces = property(_get_base_interfaces, _set_base_interfaces)


    def is_a(self, *args):
        return self._obj.invoke("is_a", _0_CORBA.InterfaceDef._d_is_a, args)

    def describe_interface(self, *args):
        return self._obj.invoke("describe_interface", _0_CORBA.InterfaceDef._d_describe_interface, args)

    def create_attribute(self, *args):
        return self._obj.invoke("create_attribute", _0_CORBA.InterfaceDef._d_create_attribute, args)

    def create_operation(self, *args):
        return self._obj.invoke("create_operation", _0_CORBA.InterfaceDef._d_create_operation, args)

omniORB.registerObjref(InterfaceDef._NP_RepositoryId, _objref_InterfaceDef)
_0_CORBA._objref_InterfaceDef = _objref_InterfaceDef
del InterfaceDef, _objref_InterfaceDef

# InterfaceDef skeleton
__name__ = "CORBA__POA"
class InterfaceDef (_0_CORBA__POA.Container, _0_CORBA__POA.Contained, _0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.InterfaceDef._NP_RepositoryId


    _omni_op_d = {"_get_base_interfaces": _0_CORBA.InterfaceDef._d__get_base_interfaces, "_set_base_interfaces": _0_CORBA.InterfaceDef._d__set_base_interfaces, "is_a": _0_CORBA.InterfaceDef._d_is_a, "describe_interface": _0_CORBA.InterfaceDef._d_describe_interface, "create_attribute": _0_CORBA.InterfaceDef._d_create_attribute, "create_operation": _0_CORBA.InterfaceDef._d_create_operation}
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

InterfaceDef._omni_skeleton = InterfaceDef
_0_CORBA__POA.InterfaceDef = InterfaceDef
omniORB.registerSkeleton(InterfaceDef._NP_RepositoryId, InterfaceDef)
del InterfaceDef
__name__ = "CORBA"

# struct InterfaceDescription
_0_CORBA.InterfaceDescription = omniORB.newEmptyClass()
class InterfaceDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/InterfaceDescription:1.0"

    def __init__(self, name, id, defined_in, version, base_interfaces):
        self.name = name
        self.id = id
        self.defined_in = defined_in
        self.version = version
        self.base_interfaces = base_interfaces

_0_CORBA.InterfaceDescription = InterfaceDescription
_0_CORBA._d_InterfaceDescription  = (omniORB.tcInternal.tv_struct, InterfaceDescription, InterfaceDescription._NP_RepositoryId, "InterfaceDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "base_interfaces", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryIdSeq:1.0"])
_0_CORBA._tc_InterfaceDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_InterfaceDescription)
omniORB.registerType(InterfaceDescription._NP_RepositoryId, _0_CORBA._d_InterfaceDescription, _0_CORBA._tc_InterfaceDescription)
del InterfaceDescription

# interface ValueMemberDef
_0_CORBA._d_ValueMemberDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ValueMemberDef:1.0", "ValueMemberDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ValueMemberDef:1.0"] = _0_CORBA._d_ValueMemberDef
_0_CORBA.ValueMemberDef = omniORB.newEmptyClass()
class ValueMemberDef (_0_CORBA.Contained):
    _NP_RepositoryId = _0_CORBA._d_ValueMemberDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.ValueMemberDef = ValueMemberDef
_0_CORBA._tc_ValueMemberDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ValueMemberDef)
omniORB.registerType(ValueMemberDef._NP_RepositoryId, _0_CORBA._d_ValueMemberDef, _0_CORBA._tc_ValueMemberDef)

# ValueMemberDef operations and attributes
ValueMemberDef._d__get_type = ((),(omniORB.tcInternal.tv_TypeCode,),None)
ValueMemberDef._d__get_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
ValueMemberDef._d__set_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)
ValueMemberDef._d__get_access = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/Visibility:1.0"],),None)
ValueMemberDef._d__set_access = ((omniORB.typeMapping["IDL:omg.org/CORBA/Visibility:1.0"],),(),None)

# ValueMemberDef object reference
class _objref_ValueMemberDef (_0_CORBA._objref_Contained):
    _NP_RepositoryId = ValueMemberDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Contained.__init__(self, obj)

    def _get_type(self, *args):
        return self._obj.invoke("_get_type", _0_CORBA.ValueMemberDef._d__get_type, args)

    type = property(_get_type)


    def _get_type_def(self, *args):
        return self._obj.invoke("_get_type_def", _0_CORBA.ValueMemberDef._d__get_type_def, args)

    def _set_type_def(self, *args):
        return self._obj.invoke("_set_type_def", _0_CORBA.ValueMemberDef._d__set_type_def, args)

    type_def = property(_get_type_def, _set_type_def)


    def _get_access(self, *args):
        return self._obj.invoke("_get_access", _0_CORBA.ValueMemberDef._d__get_access, args)

    def _set_access(self, *args):
        return self._obj.invoke("_set_access", _0_CORBA.ValueMemberDef._d__set_access, args)

    access = property(_get_access, _set_access)


omniORB.registerObjref(ValueMemberDef._NP_RepositoryId, _objref_ValueMemberDef)
_0_CORBA._objref_ValueMemberDef = _objref_ValueMemberDef
del ValueMemberDef, _objref_ValueMemberDef

# ValueMemberDef skeleton
__name__ = "CORBA__POA"
class ValueMemberDef (_0_CORBA__POA.Contained):
    _NP_RepositoryId = _0_CORBA.ValueMemberDef._NP_RepositoryId


    _omni_op_d = {"_get_type": _0_CORBA.ValueMemberDef._d__get_type, "_get_type_def": _0_CORBA.ValueMemberDef._d__get_type_def, "_set_type_def": _0_CORBA.ValueMemberDef._d__set_type_def, "_get_access": _0_CORBA.ValueMemberDef._d__get_access, "_set_access": _0_CORBA.ValueMemberDef._d__set_access}
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)

ValueMemberDef._omni_skeleton = ValueMemberDef
_0_CORBA__POA.ValueMemberDef = ValueMemberDef
omniORB.registerSkeleton(ValueMemberDef._NP_RepositoryId, ValueMemberDef)
del ValueMemberDef
__name__ = "CORBA"

# interface ValueDef
_0_CORBA._d_ValueDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ValueDef:1.0", "ValueDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"] = _0_CORBA._d_ValueDef
_0_CORBA.ValueDef = omniORB.newEmptyClass()
class ValueDef (_0_CORBA.Container, _0_CORBA.Contained, _0_CORBA.IDLType):
    _NP_RepositoryId = _0_CORBA._d_ValueDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct FullValueDescription
    _0_CORBA.ValueDef.FullValueDescription = omniORB.newEmptyClass()
    class FullValueDescription (omniORB.StructBase):
        _NP_RepositoryId = "IDL:omg.org/CORBA/ValueDef/FullValueDescription:1.0"

        _NP_ClassName = "CORBA.ValueDef.FullValueDescription"

        def __init__(self, name, id, is_abstract, is_custom, defined_in, version, operations, attributes, members, initializers, supported_interfaces, abstract_base_values, is_truncatable, base_value, type):
            self.name = name
            self.id = id
            self.is_abstract = is_abstract
            self.is_custom = is_custom
            self.defined_in = defined_in
            self.version = version
            self.operations = operations
            self.attributes = attributes
            self.members = members
            self.initializers = initializers
            self.supported_interfaces = supported_interfaces
            self.abstract_base_values = abstract_base_values
            self.is_truncatable = is_truncatable
            self.base_value = base_value
            self.type = type
    
    _d_FullValueDescription  = _0_CORBA.ValueDef._d_FullValueDescription = (omniORB.tcInternal.tv_struct, FullValueDescription, FullValueDescription._NP_RepositoryId, "FullValueDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "is_abstract", omniORB.tcInternal.tv_boolean, "is_custom", omniORB.tcInternal.tv_boolean, "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "operations", omniORB.typeMapping["IDL:omg.org/CORBA/OpDescriptionSeq:1.0"], "attributes", omniORB.typeMapping["IDL:omg.org/CORBA/AttrDescriptionSeq:1.0"], "members", omniORB.typeMapping["IDL:omg.org/CORBA/ValueMemberSeq:1.0"], "initializers", omniORB.typeMapping["IDL:omg.org/CORBA/InitializerSeq:1.0"], "supported_interfaces", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryIdSeq:1.0"], "abstract_base_values", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryIdSeq:1.0"], "is_truncatable", omniORB.tcInternal.tv_boolean, "base_value", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "type", omniORB.tcInternal.tv_TypeCode)
    _tc_FullValueDescription = omniORB.tcInternal.createTypeCode(_d_FullValueDescription)
    omniORB.registerType(FullValueDescription._NP_RepositoryId, _d_FullValueDescription, _tc_FullValueDescription)


_0_CORBA.ValueDef = ValueDef
_0_CORBA._tc_ValueDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ValueDef)
omniORB.registerType(ValueDef._NP_RepositoryId, _0_CORBA._d_ValueDef, _0_CORBA._tc_ValueDef)

# ValueDef operations and attributes
ValueDef._d__get_supported_interfaces = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDefSeq:1.0"],),None)
ValueDef._d__set_supported_interfaces = ((omniORB.typeMapping["IDL:omg.org/CORBA/InterfaceDefSeq:1.0"],),(),None)
ValueDef._d__get_initializers = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/InitializerSeq:1.0"],),None)
ValueDef._d__set_initializers = ((omniORB.typeMapping["IDL:omg.org/CORBA/InitializerSeq:1.0"],),(),None)
ValueDef._d__get_base_value = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"],),None)
ValueDef._d__set_base_value = ((omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef:1.0"],),(),None)
ValueDef._d__get_abstract_base_values = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/ValueDefSeq:1.0"],),None)
ValueDef._d__set_abstract_base_values = ((omniORB.typeMapping["IDL:omg.org/CORBA/ValueDefSeq:1.0"],),(),None)
ValueDef._d__get_is_abstract = ((),(omniORB.tcInternal.tv_boolean,),None)
ValueDef._d__set_is_abstract = ((omniORB.tcInternal.tv_boolean,),(),None)
ValueDef._d__get_is_custom = ((),(omniORB.tcInternal.tv_boolean,),None)
ValueDef._d__set_is_custom = ((omniORB.tcInternal.tv_boolean,),(),None)
ValueDef._d__get_is_truncatable = ((),(omniORB.tcInternal.tv_boolean,),None)
ValueDef._d__set_is_truncatable = ((omniORB.tcInternal.tv_boolean,),(),None)
ValueDef._d_is_a = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
ValueDef._d_describe_value = ((), (omniORB.typeMapping["IDL:omg.org/CORBA/ValueDef/FullValueDescription:1.0"], ), None)
ValueDef._d_create_value_member = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Visibility:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/ValueMemberDef:1.0"], ), None)
ValueDef._d_create_attribute = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/AttributeMode:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/AttributeDef:1.0"], ), None)
ValueDef._d_create_operation = ((omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/OperationMode:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/ParDescriptionSeq:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/ExceptionDefSeq:1.0"], omniORB.typeMapping["IDL:omg.org/CORBA/ContextIdSeq:1.0"]), (omniORB.typeMapping["IDL:omg.org/CORBA/OperationDef:1.0"], ), None)

# ValueDef object reference
class _objref_ValueDef (_0_CORBA._objref_Container, _0_CORBA._objref_Contained, _0_CORBA._objref_IDLType):
    _NP_RepositoryId = ValueDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_Container.__init__(self, obj)
        _0_CORBA._objref_Contained.__init__(self, obj)
        _0_CORBA._objref_IDLType.__init__(self, obj)

    def _get_supported_interfaces(self, *args):
        return self._obj.invoke("_get_supported_interfaces", _0_CORBA.ValueDef._d__get_supported_interfaces, args)

    def _set_supported_interfaces(self, *args):
        return self._obj.invoke("_set_supported_interfaces", _0_CORBA.ValueDef._d__set_supported_interfaces, args)

    supported_interfaces = property(_get_supported_interfaces, _set_supported_interfaces)


    def _get_initializers(self, *args):
        return self._obj.invoke("_get_initializers", _0_CORBA.ValueDef._d__get_initializers, args)

    def _set_initializers(self, *args):
        return self._obj.invoke("_set_initializers", _0_CORBA.ValueDef._d__set_initializers, args)

    initializers = property(_get_initializers, _set_initializers)


    def _get_base_value(self, *args):
        return self._obj.invoke("_get_base_value", _0_CORBA.ValueDef._d__get_base_value, args)

    def _set_base_value(self, *args):
        return self._obj.invoke("_set_base_value", _0_CORBA.ValueDef._d__set_base_value, args)

    base_value = property(_get_base_value, _set_base_value)


    def _get_abstract_base_values(self, *args):
        return self._obj.invoke("_get_abstract_base_values", _0_CORBA.ValueDef._d__get_abstract_base_values, args)

    def _set_abstract_base_values(self, *args):
        return self._obj.invoke("_set_abstract_base_values", _0_CORBA.ValueDef._d__set_abstract_base_values, args)

    abstract_base_values = property(_get_abstract_base_values, _set_abstract_base_values)


    def _get_is_abstract(self, *args):
        return self._obj.invoke("_get_is_abstract", _0_CORBA.ValueDef._d__get_is_abstract, args)

    def _set_is_abstract(self, *args):
        return self._obj.invoke("_set_is_abstract", _0_CORBA.ValueDef._d__set_is_abstract, args)

    is_abstract = property(_get_is_abstract, _set_is_abstract)


    def _get_is_custom(self, *args):
        return self._obj.invoke("_get_is_custom", _0_CORBA.ValueDef._d__get_is_custom, args)

    def _set_is_custom(self, *args):
        return self._obj.invoke("_set_is_custom", _0_CORBA.ValueDef._d__set_is_custom, args)

    is_custom = property(_get_is_custom, _set_is_custom)


    def _get_is_truncatable(self, *args):
        return self._obj.invoke("_get_is_truncatable", _0_CORBA.ValueDef._d__get_is_truncatable, args)

    def _set_is_truncatable(self, *args):
        return self._obj.invoke("_set_is_truncatable", _0_CORBA.ValueDef._d__set_is_truncatable, args)

    is_truncatable = property(_get_is_truncatable, _set_is_truncatable)


    def is_a(self, *args):
        return self._obj.invoke("is_a", _0_CORBA.ValueDef._d_is_a, args)

    def describe_value(self, *args):
        return self._obj.invoke("describe_value", _0_CORBA.ValueDef._d_describe_value, args)

    def create_value_member(self, *args):
        return self._obj.invoke("create_value_member", _0_CORBA.ValueDef._d_create_value_member, args)

    def create_attribute(self, *args):
        return self._obj.invoke("create_attribute", _0_CORBA.ValueDef._d_create_attribute, args)

    def create_operation(self, *args):
        return self._obj.invoke("create_operation", _0_CORBA.ValueDef._d_create_operation, args)

omniORB.registerObjref(ValueDef._NP_RepositoryId, _objref_ValueDef)
_0_CORBA._objref_ValueDef = _objref_ValueDef
del ValueDef, _objref_ValueDef

# ValueDef skeleton
__name__ = "CORBA__POA"
class ValueDef (_0_CORBA__POA.Container, _0_CORBA__POA.Contained, _0_CORBA__POA.IDLType):
    _NP_RepositoryId = _0_CORBA.ValueDef._NP_RepositoryId


    _omni_op_d = {"_get_supported_interfaces": _0_CORBA.ValueDef._d__get_supported_interfaces, "_set_supported_interfaces": _0_CORBA.ValueDef._d__set_supported_interfaces, "_get_initializers": _0_CORBA.ValueDef._d__get_initializers, "_set_initializers": _0_CORBA.ValueDef._d__set_initializers, "_get_base_value": _0_CORBA.ValueDef._d__get_base_value, "_set_base_value": _0_CORBA.ValueDef._d__set_base_value, "_get_abstract_base_values": _0_CORBA.ValueDef._d__get_abstract_base_values, "_set_abstract_base_values": _0_CORBA.ValueDef._d__set_abstract_base_values, "_get_is_abstract": _0_CORBA.ValueDef._d__get_is_abstract, "_set_is_abstract": _0_CORBA.ValueDef._d__set_is_abstract, "_get_is_custom": _0_CORBA.ValueDef._d__get_is_custom, "_set_is_custom": _0_CORBA.ValueDef._d__set_is_custom, "_get_is_truncatable": _0_CORBA.ValueDef._d__get_is_truncatable, "_set_is_truncatable": _0_CORBA.ValueDef._d__set_is_truncatable, "is_a": _0_CORBA.ValueDef._d_is_a, "describe_value": _0_CORBA.ValueDef._d_describe_value, "create_value_member": _0_CORBA.ValueDef._d_create_value_member, "create_attribute": _0_CORBA.ValueDef._d_create_attribute, "create_operation": _0_CORBA.ValueDef._d_create_operation}
    _omni_op_d.update(_0_CORBA__POA.Container._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.Contained._omni_op_d)
    _omni_op_d.update(_0_CORBA__POA.IDLType._omni_op_d)

ValueDef._omni_skeleton = ValueDef
_0_CORBA__POA.ValueDef = ValueDef
omniORB.registerSkeleton(ValueDef._NP_RepositoryId, ValueDef)
del ValueDef
__name__ = "CORBA"

# struct ValueDescription
_0_CORBA.ValueDescription = omniORB.newEmptyClass()
class ValueDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CORBA/ValueDescription:1.0"

    def __init__(self, name, id, is_abstract, is_custom, defined_in, version, supported_interfaces, abstract_base_values, is_truncatable, base_value):
        self.name = name
        self.id = id
        self.is_abstract = is_abstract
        self.is_custom = is_custom
        self.defined_in = defined_in
        self.version = version
        self.supported_interfaces = supported_interfaces
        self.abstract_base_values = abstract_base_values
        self.is_truncatable = is_truncatable
        self.base_value = base_value

_0_CORBA.ValueDescription = ValueDescription
_0_CORBA._d_ValueDescription  = (omniORB.tcInternal.tv_struct, ValueDescription, ValueDescription._NP_RepositoryId, "ValueDescription", "name", omniORB.typeMapping["IDL:omg.org/CORBA/Identifier:1.0"], "id", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "is_abstract", omniORB.tcInternal.tv_boolean, "is_custom", omniORB.tcInternal.tv_boolean, "defined_in", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"], "version", omniORB.typeMapping["IDL:omg.org/CORBA/VersionSpec:1.0"], "supported_interfaces", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryIdSeq:1.0"], "abstract_base_values", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryIdSeq:1.0"], "is_truncatable", omniORB.tcInternal.tv_boolean, "base_value", omniORB.typeMapping["IDL:omg.org/CORBA/RepositoryId:1.0"])
_0_CORBA._tc_ValueDescription = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ValueDescription)
omniORB.registerType(ValueDescription._NP_RepositoryId, _0_CORBA._d_ValueDescription, _0_CORBA._tc_ValueDescription)
del ValueDescription

# interface ValueBoxDef
_0_CORBA._d_ValueBoxDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/ValueBoxDef:1.0", "ValueBoxDef")
omniORB.typeMapping["IDL:omg.org/CORBA/ValueBoxDef:1.0"] = _0_CORBA._d_ValueBoxDef
_0_CORBA.ValueBoxDef = omniORB.newEmptyClass()
class ValueBoxDef (_0_CORBA.TypedefDef):
    _NP_RepositoryId = _0_CORBA._d_ValueBoxDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.ValueBoxDef = ValueBoxDef
_0_CORBA._tc_ValueBoxDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_ValueBoxDef)
omniORB.registerType(ValueBoxDef._NP_RepositoryId, _0_CORBA._d_ValueBoxDef, _0_CORBA._tc_ValueBoxDef)

# ValueBoxDef operations and attributes
ValueBoxDef._d__get_original_type_def = ((),(omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),None)
ValueBoxDef._d__set_original_type_def = ((omniORB.typeMapping["IDL:omg.org/CORBA/IDLType:1.0"],),(),None)

# ValueBoxDef object reference
class _objref_ValueBoxDef (_0_CORBA._objref_TypedefDef):
    _NP_RepositoryId = ValueBoxDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_TypedefDef.__init__(self, obj)

    def _get_original_type_def(self, *args):
        return self._obj.invoke("_get_original_type_def", _0_CORBA.ValueBoxDef._d__get_original_type_def, args)

    def _set_original_type_def(self, *args):
        return self._obj.invoke("_set_original_type_def", _0_CORBA.ValueBoxDef._d__set_original_type_def, args)

    original_type_def = property(_get_original_type_def, _set_original_type_def)


omniORB.registerObjref(ValueBoxDef._NP_RepositoryId, _objref_ValueBoxDef)
_0_CORBA._objref_ValueBoxDef = _objref_ValueBoxDef
del ValueBoxDef, _objref_ValueBoxDef

# ValueBoxDef skeleton
__name__ = "CORBA__POA"
class ValueBoxDef (_0_CORBA__POA.TypedefDef):
    _NP_RepositoryId = _0_CORBA.ValueBoxDef._NP_RepositoryId


    _omni_op_d = {"_get_original_type_def": _0_CORBA.ValueBoxDef._d__get_original_type_def, "_set_original_type_def": _0_CORBA.ValueBoxDef._d__set_original_type_def}
    _omni_op_d.update(_0_CORBA__POA.TypedefDef._omni_op_d)

ValueBoxDef._omni_skeleton = ValueBoxDef
_0_CORBA__POA.ValueBoxDef = ValueBoxDef
omniORB.registerSkeleton(ValueBoxDef._NP_RepositoryId, ValueBoxDef)
del ValueBoxDef
__name__ = "CORBA"

# interface AbstractInterfaceDef
_0_CORBA._d_AbstractInterfaceDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0", "AbstractInterfaceDef")
omniORB.typeMapping["IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"] = _0_CORBA._d_AbstractInterfaceDef
_0_CORBA.AbstractInterfaceDef = omniORB.newEmptyClass()
class AbstractInterfaceDef (_0_CORBA.InterfaceDef):
    _NP_RepositoryId = _0_CORBA._d_AbstractInterfaceDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBA.AbstractInterfaceDef = AbstractInterfaceDef
_0_CORBA._tc_AbstractInterfaceDef = omniORB.tcInternal.createTypeCode(_0_CORBA._d_AbstractInterfaceDef)
omniORB.registerType(AbstractInterfaceDef._NP_RepositoryId, _0_CORBA._d_AbstractInterfaceDef, _0_CORBA._tc_AbstractInterfaceDef)

# AbstractInterfaceDef object reference
class _objref_AbstractInterfaceDef (_0_CORBA._objref_InterfaceDef):
    _NP_RepositoryId = AbstractInterfaceDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CORBA._objref_InterfaceDef.__init__(self, obj)

omniORB.registerObjref(AbstractInterfaceDef._NP_RepositoryId, _objref_AbstractInterfaceDef)
_0_CORBA._objref_AbstractInterfaceDef = _objref_AbstractInterfaceDef
del AbstractInterfaceDef, _objref_AbstractInterfaceDef

# AbstractInterfaceDef skeleton
__name__ = "CORBA__POA"
class AbstractInterfaceDef (_0_CORBA__POA.InterfaceDef):
    _NP_RepositoryId = _0_CORBA.AbstractInterfaceDef._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CORBA__POA.InterfaceDef._omni_op_d)

AbstractInterfaceDef._omni_skeleton = AbstractInterfaceDef
_0_CORBA__POA.AbstractInterfaceDef = AbstractInterfaceDef
omniORB.registerSkeleton(AbstractInterfaceDef._NP_RepositoryId, AbstractInterfaceDef)
del AbstractInterfaceDef
__name__ = "CORBA"

#
# End of module "CORBA"
#
__name__ = "ir_idl"

_exported_modules = ( "CORBA", )

# The end.
