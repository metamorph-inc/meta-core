# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosTypedEventComm.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")

#
# Start of module "CosTypedEventComm"
#
__name__ = "CosTypedEventComm"
_0_CosTypedEventComm = omniORB.openModule("CosTypedEventComm", r"..\..\..\..\..\idl\COS\CosTypedEventComm.idl")
_0_CosTypedEventComm__POA = omniORB.openModule("CosTypedEventComm__POA", r"..\..\..\..\..\idl\COS\CosTypedEventComm.idl")


# interface TypedPushConsumer
_0_CosTypedEventComm._d_TypedPushConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosTypedEventComm/TypedPushConsumer:1.0", "TypedPushConsumer")
omniORB.typeMapping["IDL:omg.org/CosTypedEventComm/TypedPushConsumer:1.0"] = _0_CosTypedEventComm._d_TypedPushConsumer
_0_CosTypedEventComm.TypedPushConsumer = omniORB.newEmptyClass()
class TypedPushConsumer (_0_CosEventComm.PushConsumer):
    _NP_RepositoryId = _0_CosTypedEventComm._d_TypedPushConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosTypedEventComm.TypedPushConsumer = TypedPushConsumer
_0_CosTypedEventComm._tc_TypedPushConsumer = omniORB.tcInternal.createTypeCode(_0_CosTypedEventComm._d_TypedPushConsumer)
omniORB.registerType(TypedPushConsumer._NP_RepositoryId, _0_CosTypedEventComm._d_TypedPushConsumer, _0_CosTypedEventComm._tc_TypedPushConsumer)

# TypedPushConsumer operations and attributes
TypedPushConsumer._d_get_typed_consumer = ((), (omniORB.typeMapping["IDL:omg.org/CORBA/Object:1.0"], ), None)

# TypedPushConsumer object reference
class _objref_TypedPushConsumer (_0_CosEventComm._objref_PushConsumer):
    _NP_RepositoryId = TypedPushConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosEventComm._objref_PushConsumer.__init__(self, obj)

    def get_typed_consumer(self, *args):
        return self._obj.invoke("get_typed_consumer", _0_CosTypedEventComm.TypedPushConsumer._d_get_typed_consumer, args)

omniORB.registerObjref(TypedPushConsumer._NP_RepositoryId, _objref_TypedPushConsumer)
_0_CosTypedEventComm._objref_TypedPushConsumer = _objref_TypedPushConsumer
del TypedPushConsumer, _objref_TypedPushConsumer

# TypedPushConsumer skeleton
__name__ = "CosTypedEventComm__POA"
class TypedPushConsumer (_0_CosEventComm__POA.PushConsumer):
    _NP_RepositoryId = _0_CosTypedEventComm.TypedPushConsumer._NP_RepositoryId


    _omni_op_d = {"get_typed_consumer": _0_CosTypedEventComm.TypedPushConsumer._d_get_typed_consumer}
    _omni_op_d.update(_0_CosEventComm__POA.PushConsumer._omni_op_d)

TypedPushConsumer._omni_skeleton = TypedPushConsumer
_0_CosTypedEventComm__POA.TypedPushConsumer = TypedPushConsumer
omniORB.registerSkeleton(TypedPushConsumer._NP_RepositoryId, TypedPushConsumer)
del TypedPushConsumer
__name__ = "CosTypedEventComm"

# interface TypedPullSupplier
_0_CosTypedEventComm._d_TypedPullSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosTypedEventComm/TypedPullSupplier:1.0", "TypedPullSupplier")
omniORB.typeMapping["IDL:omg.org/CosTypedEventComm/TypedPullSupplier:1.0"] = _0_CosTypedEventComm._d_TypedPullSupplier
_0_CosTypedEventComm.TypedPullSupplier = omniORB.newEmptyClass()
class TypedPullSupplier (_0_CosEventComm.PullSupplier):
    _NP_RepositoryId = _0_CosTypedEventComm._d_TypedPullSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosTypedEventComm.TypedPullSupplier = TypedPullSupplier
_0_CosTypedEventComm._tc_TypedPullSupplier = omniORB.tcInternal.createTypeCode(_0_CosTypedEventComm._d_TypedPullSupplier)
omniORB.registerType(TypedPullSupplier._NP_RepositoryId, _0_CosTypedEventComm._d_TypedPullSupplier, _0_CosTypedEventComm._tc_TypedPullSupplier)

# TypedPullSupplier operations and attributes
TypedPullSupplier._d_get_typed_supplier = ((), (omniORB.typeMapping["IDL:omg.org/CORBA/Object:1.0"], ), None)

# TypedPullSupplier object reference
class _objref_TypedPullSupplier (_0_CosEventComm._objref_PullSupplier):
    _NP_RepositoryId = TypedPullSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosEventComm._objref_PullSupplier.__init__(self, obj)

    def get_typed_supplier(self, *args):
        return self._obj.invoke("get_typed_supplier", _0_CosTypedEventComm.TypedPullSupplier._d_get_typed_supplier, args)

omniORB.registerObjref(TypedPullSupplier._NP_RepositoryId, _objref_TypedPullSupplier)
_0_CosTypedEventComm._objref_TypedPullSupplier = _objref_TypedPullSupplier
del TypedPullSupplier, _objref_TypedPullSupplier

# TypedPullSupplier skeleton
__name__ = "CosTypedEventComm__POA"
class TypedPullSupplier (_0_CosEventComm__POA.PullSupplier):
    _NP_RepositoryId = _0_CosTypedEventComm.TypedPullSupplier._NP_RepositoryId


    _omni_op_d = {"get_typed_supplier": _0_CosTypedEventComm.TypedPullSupplier._d_get_typed_supplier}
    _omni_op_d.update(_0_CosEventComm__POA.PullSupplier._omni_op_d)

TypedPullSupplier._omni_skeleton = TypedPullSupplier
_0_CosTypedEventComm__POA.TypedPullSupplier = TypedPullSupplier
omniORB.registerSkeleton(TypedPullSupplier._NP_RepositoryId, TypedPullSupplier)
del TypedPullSupplier
__name__ = "CosTypedEventComm"

#
# End of module "CosTypedEventComm"
#
__name__ = "CosTypedEventComm_idl"

_exported_modules = ( "CosTypedEventComm", )

# The end.
