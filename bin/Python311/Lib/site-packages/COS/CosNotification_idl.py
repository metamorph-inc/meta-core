# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosNotification.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "CosNotification"
#
__name__ = "CosNotification"
_0_CosNotification = omniORB.openModule("CosNotification", r"..\..\..\..\..\idl\COS\CosNotification.idl")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA", r"..\..\..\..\..\idl\COS\CosNotification.idl")


# typedef ... Istring
class Istring:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/Istring:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.Istring = Istring
_0_CosNotification._d_Istring  = (omniORB.tcInternal.tv_string,0)
_0_CosNotification._ad_Istring = (omniORB.tcInternal.tv_alias, Istring._NP_RepositoryId, "Istring", (omniORB.tcInternal.tv_string,0))
_0_CosNotification._tc_Istring = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_Istring)
omniORB.registerType(Istring._NP_RepositoryId, _0_CosNotification._ad_Istring, _0_CosNotification._tc_Istring)
del Istring

# typedef ... PropertyName
class PropertyName:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/PropertyName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.PropertyName = PropertyName
_0_CosNotification._d_PropertyName  = omniORB.typeMapping["IDL:omg.org/CosNotification/Istring:1.0"]
_0_CosNotification._ad_PropertyName = (omniORB.tcInternal.tv_alias, PropertyName._NP_RepositoryId, "PropertyName", omniORB.typeCodeMapping["IDL:omg.org/CosNotification/Istring:1.0"]._d)
_0_CosNotification._tc_PropertyName = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_PropertyName)
omniORB.registerType(PropertyName._NP_RepositoryId, _0_CosNotification._ad_PropertyName, _0_CosNotification._tc_PropertyName)
del PropertyName

# typedef ... PropertyValue
class PropertyValue:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/PropertyValue:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.PropertyValue = PropertyValue
_0_CosNotification._d_PropertyValue  = omniORB.tcInternal.tv_any
_0_CosNotification._ad_PropertyValue = (omniORB.tcInternal.tv_alias, PropertyValue._NP_RepositoryId, "PropertyValue", omniORB.tcInternal.tv_any)
_0_CosNotification._tc_PropertyValue = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_PropertyValue)
omniORB.registerType(PropertyValue._NP_RepositoryId, _0_CosNotification._ad_PropertyValue, _0_CosNotification._tc_PropertyValue)
del PropertyValue

# struct Property
_0_CosNotification.Property = omniORB.newEmptyClass()
class Property (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/Property:1.0"

    def __init__(self, name, value):
        self.name = name
        self.value = value

_0_CosNotification.Property = Property
_0_CosNotification._d_Property  = (omniORB.tcInternal.tv_struct, Property, Property._NP_RepositoryId, "Property", "name", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyName:1.0"], "value", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyValue:1.0"])
_0_CosNotification._tc_Property = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_Property)
omniORB.registerType(Property._NP_RepositoryId, _0_CosNotification._d_Property, _0_CosNotification._tc_Property)
del Property

# typedef ... PropertySeq
class PropertySeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/PropertySeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.PropertySeq = PropertySeq
_0_CosNotification._d_PropertySeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/Property:1.0"], 0)
_0_CosNotification._ad_PropertySeq = (omniORB.tcInternal.tv_alias, PropertySeq._NP_RepositoryId, "PropertySeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/Property:1.0"], 0))
_0_CosNotification._tc_PropertySeq = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_PropertySeq)
omniORB.registerType(PropertySeq._NP_RepositoryId, _0_CosNotification._ad_PropertySeq, _0_CosNotification._tc_PropertySeq)
del PropertySeq

# typedef ... OptionalHeaderFields
class OptionalHeaderFields:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/OptionalHeaderFields:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.OptionalHeaderFields = OptionalHeaderFields
_0_CosNotification._d_OptionalHeaderFields  = omniORB.typeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]
_0_CosNotification._ad_OptionalHeaderFields = (omniORB.tcInternal.tv_alias, OptionalHeaderFields._NP_RepositoryId, "OptionalHeaderFields", omniORB.typeCodeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]._d)
_0_CosNotification._tc_OptionalHeaderFields = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_OptionalHeaderFields)
omniORB.registerType(OptionalHeaderFields._NP_RepositoryId, _0_CosNotification._ad_OptionalHeaderFields, _0_CosNotification._tc_OptionalHeaderFields)
del OptionalHeaderFields

# typedef ... FilterableEventBody
class FilterableEventBody:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/FilterableEventBody:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.FilterableEventBody = FilterableEventBody
_0_CosNotification._d_FilterableEventBody  = omniORB.typeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]
_0_CosNotification._ad_FilterableEventBody = (omniORB.tcInternal.tv_alias, FilterableEventBody._NP_RepositoryId, "FilterableEventBody", omniORB.typeCodeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]._d)
_0_CosNotification._tc_FilterableEventBody = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_FilterableEventBody)
omniORB.registerType(FilterableEventBody._NP_RepositoryId, _0_CosNotification._ad_FilterableEventBody, _0_CosNotification._tc_FilterableEventBody)
del FilterableEventBody

# typedef ... QoSProperties
class QoSProperties:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/QoSProperties:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.QoSProperties = QoSProperties
_0_CosNotification._d_QoSProperties  = omniORB.typeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]
_0_CosNotification._ad_QoSProperties = (omniORB.tcInternal.tv_alias, QoSProperties._NP_RepositoryId, "QoSProperties", omniORB.typeCodeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]._d)
_0_CosNotification._tc_QoSProperties = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_QoSProperties)
omniORB.registerType(QoSProperties._NP_RepositoryId, _0_CosNotification._ad_QoSProperties, _0_CosNotification._tc_QoSProperties)
del QoSProperties

# typedef ... AdminProperties
class AdminProperties:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/AdminProperties:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.AdminProperties = AdminProperties
_0_CosNotification._d_AdminProperties  = omniORB.typeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]
_0_CosNotification._ad_AdminProperties = (omniORB.tcInternal.tv_alias, AdminProperties._NP_RepositoryId, "AdminProperties", omniORB.typeCodeMapping["IDL:omg.org/CosNotification/PropertySeq:1.0"]._d)
_0_CosNotification._tc_AdminProperties = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_AdminProperties)
omniORB.registerType(AdminProperties._NP_RepositoryId, _0_CosNotification._ad_AdminProperties, _0_CosNotification._tc_AdminProperties)
del AdminProperties

# struct EventType
_0_CosNotification.EventType = omniORB.newEmptyClass()
class EventType (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/EventType:1.0"

    def __init__(self, domain_name, type_name):
        self.domain_name = domain_name
        self.type_name = type_name

_0_CosNotification.EventType = EventType
_0_CosNotification._d_EventType  = (omniORB.tcInternal.tv_struct, EventType, EventType._NP_RepositoryId, "EventType", "domain_name", (omniORB.tcInternal.tv_string,0), "type_name", (omniORB.tcInternal.tv_string,0))
_0_CosNotification._tc_EventType = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_EventType)
omniORB.registerType(EventType._NP_RepositoryId, _0_CosNotification._d_EventType, _0_CosNotification._tc_EventType)
del EventType

# typedef ... EventTypeSeq
class EventTypeSeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/EventTypeSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.EventTypeSeq = EventTypeSeq
_0_CosNotification._d_EventTypeSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/EventType:1.0"], 0)
_0_CosNotification._ad_EventTypeSeq = (omniORB.tcInternal.tv_alias, EventTypeSeq._NP_RepositoryId, "EventTypeSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/EventType:1.0"], 0))
_0_CosNotification._tc_EventTypeSeq = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_EventTypeSeq)
omniORB.registerType(EventTypeSeq._NP_RepositoryId, _0_CosNotification._ad_EventTypeSeq, _0_CosNotification._tc_EventTypeSeq)
del EventTypeSeq

# struct PropertyRange
_0_CosNotification.PropertyRange = omniORB.newEmptyClass()
class PropertyRange (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/PropertyRange:1.0"

    def __init__(self, low_val, high_val):
        self.low_val = low_val
        self.high_val = high_val

_0_CosNotification.PropertyRange = PropertyRange
_0_CosNotification._d_PropertyRange  = (omniORB.tcInternal.tv_struct, PropertyRange, PropertyRange._NP_RepositoryId, "PropertyRange", "low_val", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyValue:1.0"], "high_val", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyValue:1.0"])
_0_CosNotification._tc_PropertyRange = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_PropertyRange)
omniORB.registerType(PropertyRange._NP_RepositoryId, _0_CosNotification._d_PropertyRange, _0_CosNotification._tc_PropertyRange)
del PropertyRange

# struct NamedPropertyRange
_0_CosNotification.NamedPropertyRange = omniORB.newEmptyClass()
class NamedPropertyRange (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/NamedPropertyRange:1.0"

    def __init__(self, name, range):
        self.name = name
        self.range = range

_0_CosNotification.NamedPropertyRange = NamedPropertyRange
_0_CosNotification._d_NamedPropertyRange  = (omniORB.tcInternal.tv_struct, NamedPropertyRange, NamedPropertyRange._NP_RepositoryId, "NamedPropertyRange", "name", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyName:1.0"], "range", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyRange:1.0"])
_0_CosNotification._tc_NamedPropertyRange = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_NamedPropertyRange)
omniORB.registerType(NamedPropertyRange._NP_RepositoryId, _0_CosNotification._d_NamedPropertyRange, _0_CosNotification._tc_NamedPropertyRange)
del NamedPropertyRange

# typedef ... NamedPropertyRangeSeq
class NamedPropertyRangeSeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/NamedPropertyRangeSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.NamedPropertyRangeSeq = NamedPropertyRangeSeq
_0_CosNotification._d_NamedPropertyRangeSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/NamedPropertyRange:1.0"], 0)
_0_CosNotification._ad_NamedPropertyRangeSeq = (omniORB.tcInternal.tv_alias, NamedPropertyRangeSeq._NP_RepositoryId, "NamedPropertyRangeSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/NamedPropertyRange:1.0"], 0))
_0_CosNotification._tc_NamedPropertyRangeSeq = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_NamedPropertyRangeSeq)
omniORB.registerType(NamedPropertyRangeSeq._NP_RepositoryId, _0_CosNotification._ad_NamedPropertyRangeSeq, _0_CosNotification._tc_NamedPropertyRangeSeq)
del NamedPropertyRangeSeq

# enum QoSError_code
_0_CosNotification.UNSUPPORTED_PROPERTY = omniORB.EnumItem("UNSUPPORTED_PROPERTY", 0)
_0_CosNotification.UNAVAILABLE_PROPERTY = omniORB.EnumItem("UNAVAILABLE_PROPERTY", 1)
_0_CosNotification.UNSUPPORTED_VALUE = omniORB.EnumItem("UNSUPPORTED_VALUE", 2)
_0_CosNotification.UNAVAILABLE_VALUE = omniORB.EnumItem("UNAVAILABLE_VALUE", 3)
_0_CosNotification.BAD_PROPERTY = omniORB.EnumItem("BAD_PROPERTY", 4)
_0_CosNotification.BAD_TYPE = omniORB.EnumItem("BAD_TYPE", 5)
_0_CosNotification.BAD_VALUE = omniORB.EnumItem("BAD_VALUE", 6)
_0_CosNotification.QoSError_code = omniORB.Enum("IDL:omg.org/CosNotification/QoSError_code:1.0", (_0_CosNotification.UNSUPPORTED_PROPERTY, _0_CosNotification.UNAVAILABLE_PROPERTY, _0_CosNotification.UNSUPPORTED_VALUE, _0_CosNotification.UNAVAILABLE_VALUE, _0_CosNotification.BAD_PROPERTY, _0_CosNotification.BAD_TYPE, _0_CosNotification.BAD_VALUE,))

_0_CosNotification._d_QoSError_code  = (omniORB.tcInternal.tv_enum, _0_CosNotification.QoSError_code._NP_RepositoryId, "QoSError_code", _0_CosNotification.QoSError_code._items)
_0_CosNotification._tc_QoSError_code = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_QoSError_code)
omniORB.registerType(_0_CosNotification.QoSError_code._NP_RepositoryId, _0_CosNotification._d_QoSError_code, _0_CosNotification._tc_QoSError_code)

# struct PropertyError
_0_CosNotification.PropertyError = omniORB.newEmptyClass()
class PropertyError (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/PropertyError:1.0"

    def __init__(self, code, name, available_range):
        self.code = code
        self.name = name
        self.available_range = available_range

_0_CosNotification.PropertyError = PropertyError
_0_CosNotification._d_PropertyError  = (omniORB.tcInternal.tv_struct, PropertyError, PropertyError._NP_RepositoryId, "PropertyError", "code", omniORB.typeMapping["IDL:omg.org/CosNotification/QoSError_code:1.0"], "name", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyName:1.0"], "available_range", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyRange:1.0"])
_0_CosNotification._tc_PropertyError = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_PropertyError)
omniORB.registerType(PropertyError._NP_RepositoryId, _0_CosNotification._d_PropertyError, _0_CosNotification._tc_PropertyError)
del PropertyError

# typedef ... PropertyErrorSeq
class PropertyErrorSeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/PropertyErrorSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.PropertyErrorSeq = PropertyErrorSeq
_0_CosNotification._d_PropertyErrorSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyError:1.0"], 0)
_0_CosNotification._ad_PropertyErrorSeq = (omniORB.tcInternal.tv_alias, PropertyErrorSeq._NP_RepositoryId, "PropertyErrorSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyError:1.0"], 0))
_0_CosNotification._tc_PropertyErrorSeq = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_PropertyErrorSeq)
omniORB.registerType(PropertyErrorSeq._NP_RepositoryId, _0_CosNotification._ad_PropertyErrorSeq, _0_CosNotification._tc_PropertyErrorSeq)
del PropertyErrorSeq

# exception UnsupportedQoS
_0_CosNotification.UnsupportedQoS = omniORB.newEmptyClass()
class UnsupportedQoS (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/UnsupportedQoS:1.0"

    def __init__(self, qos_err):
        CORBA.UserException.__init__(self, qos_err)
        self.qos_err = qos_err

_0_CosNotification.UnsupportedQoS = UnsupportedQoS
_0_CosNotification._d_UnsupportedQoS  = (omniORB.tcInternal.tv_except, UnsupportedQoS, UnsupportedQoS._NP_RepositoryId, "UnsupportedQoS", "qos_err", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyErrorSeq:1.0"])
_0_CosNotification._tc_UnsupportedQoS = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_UnsupportedQoS)
omniORB.registerType(UnsupportedQoS._NP_RepositoryId, _0_CosNotification._d_UnsupportedQoS, _0_CosNotification._tc_UnsupportedQoS)
del UnsupportedQoS

# exception UnsupportedAdmin
_0_CosNotification.UnsupportedAdmin = omniORB.newEmptyClass()
class UnsupportedAdmin (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/UnsupportedAdmin:1.0"

    def __init__(self, admin_err):
        CORBA.UserException.__init__(self, admin_err)
        self.admin_err = admin_err

_0_CosNotification.UnsupportedAdmin = UnsupportedAdmin
_0_CosNotification._d_UnsupportedAdmin  = (omniORB.tcInternal.tv_except, UnsupportedAdmin, UnsupportedAdmin._NP_RepositoryId, "UnsupportedAdmin", "admin_err", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyErrorSeq:1.0"])
_0_CosNotification._tc_UnsupportedAdmin = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_UnsupportedAdmin)
omniORB.registerType(UnsupportedAdmin._NP_RepositoryId, _0_CosNotification._d_UnsupportedAdmin, _0_CosNotification._tc_UnsupportedAdmin)
del UnsupportedAdmin

# struct FixedEventHeader
_0_CosNotification.FixedEventHeader = omniORB.newEmptyClass()
class FixedEventHeader (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/FixedEventHeader:1.0"

    def __init__(self, event_type, event_name):
        self.event_type = event_type
        self.event_name = event_name

_0_CosNotification.FixedEventHeader = FixedEventHeader
_0_CosNotification._d_FixedEventHeader  = (omniORB.tcInternal.tv_struct, FixedEventHeader, FixedEventHeader._NP_RepositoryId, "FixedEventHeader", "event_type", omniORB.typeMapping["IDL:omg.org/CosNotification/EventType:1.0"], "event_name", (omniORB.tcInternal.tv_string,0))
_0_CosNotification._tc_FixedEventHeader = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_FixedEventHeader)
omniORB.registerType(FixedEventHeader._NP_RepositoryId, _0_CosNotification._d_FixedEventHeader, _0_CosNotification._tc_FixedEventHeader)
del FixedEventHeader

# struct EventHeader
_0_CosNotification.EventHeader = omniORB.newEmptyClass()
class EventHeader (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/EventHeader:1.0"

    def __init__(self, fixed_header, variable_header):
        self.fixed_header = fixed_header
        self.variable_header = variable_header

_0_CosNotification.EventHeader = EventHeader
_0_CosNotification._d_EventHeader  = (omniORB.tcInternal.tv_struct, EventHeader, EventHeader._NP_RepositoryId, "EventHeader", "fixed_header", omniORB.typeMapping["IDL:omg.org/CosNotification/FixedEventHeader:1.0"], "variable_header", omniORB.typeMapping["IDL:omg.org/CosNotification/OptionalHeaderFields:1.0"])
_0_CosNotification._tc_EventHeader = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_EventHeader)
omniORB.registerType(EventHeader._NP_RepositoryId, _0_CosNotification._d_EventHeader, _0_CosNotification._tc_EventHeader)
del EventHeader

# struct StructuredEvent
_0_CosNotification.StructuredEvent = omniORB.newEmptyClass()
class StructuredEvent (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotification/StructuredEvent:1.0"

    def __init__(self, header, filterable_data, remainder_of_body):
        self.header = header
        self.filterable_data = filterable_data
        self.remainder_of_body = remainder_of_body

_0_CosNotification.StructuredEvent = StructuredEvent
_0_CosNotification._d_StructuredEvent  = (omniORB.tcInternal.tv_struct, StructuredEvent, StructuredEvent._NP_RepositoryId, "StructuredEvent", "header", omniORB.typeMapping["IDL:omg.org/CosNotification/EventHeader:1.0"], "filterable_data", omniORB.typeMapping["IDL:omg.org/CosNotification/FilterableEventBody:1.0"], "remainder_of_body", omniORB.tcInternal.tv_any)
_0_CosNotification._tc_StructuredEvent = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_StructuredEvent)
omniORB.registerType(StructuredEvent._NP_RepositoryId, _0_CosNotification._d_StructuredEvent, _0_CosNotification._tc_StructuredEvent)
del StructuredEvent

# typedef ... EventBatch
class EventBatch:
    _NP_RepositoryId = "IDL:omg.org/CosNotification/EventBatch:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotification.EventBatch = EventBatch
_0_CosNotification._d_EventBatch  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/StructuredEvent:1.0"], 0)
_0_CosNotification._ad_EventBatch = (omniORB.tcInternal.tv_alias, EventBatch._NP_RepositoryId, "EventBatch", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotification/StructuredEvent:1.0"], 0))
_0_CosNotification._tc_EventBatch = omniORB.tcInternal.createTypeCode(_0_CosNotification._ad_EventBatch)
omniORB.registerType(EventBatch._NP_RepositoryId, _0_CosNotification._ad_EventBatch, _0_CosNotification._tc_EventBatch)
del EventBatch
_0_CosNotification.EventReliability = "EventReliability"
_0_CosNotification.BestEffort = 0
_0_CosNotification.Persistent = 1
_0_CosNotification.ConnectionReliability = "ConnectionReliability"
_0_CosNotification.Priority = "Priority"
_0_CosNotification.LowestPriority = -32767
_0_CosNotification.HighestPriority = 32767
_0_CosNotification.DefaultPriority = 0
_0_CosNotification.StartTime = "StartTime"
_0_CosNotification.StopTime = "StopTime"
_0_CosNotification.Timeout = "Timeout"
_0_CosNotification.OrderPolicy = "OrderPolicy"
_0_CosNotification.AnyOrder = 0
_0_CosNotification.FifoOrder = 1
_0_CosNotification.PriorityOrder = 2
_0_CosNotification.DeadlineOrder = 3
_0_CosNotification.DiscardPolicy = "DiscardPolicy"
_0_CosNotification.LifoOrder = 4
_0_CosNotification.MaximumBatchSize = "MaximumBatchSize"
_0_CosNotification.PacingInterval = "PacingInterval"
_0_CosNotification.StartTimeSupported = "StartTimeSupported"
_0_CosNotification.StopTimeSupported = "StopTimeSupported"
_0_CosNotification.MaxEventsPerConsumer = "MaxEventsPerConsumer"

# interface QoSAdmin
_0_CosNotification._d_QoSAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotification/QoSAdmin:1.0", "QoSAdmin")
omniORB.typeMapping["IDL:omg.org/CosNotification/QoSAdmin:1.0"] = _0_CosNotification._d_QoSAdmin
_0_CosNotification.QoSAdmin = omniORB.newEmptyClass()
class QoSAdmin :
    _NP_RepositoryId = _0_CosNotification._d_QoSAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotification.QoSAdmin = QoSAdmin
_0_CosNotification._tc_QoSAdmin = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_QoSAdmin)
omniORB.registerType(QoSAdmin._NP_RepositoryId, _0_CosNotification._d_QoSAdmin, _0_CosNotification._tc_QoSAdmin)

# QoSAdmin operations and attributes
QoSAdmin._d_get_qos = ((), (omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], ), None)
QoSAdmin._d_set_qos = ((omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], ), (), {_0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS})
QoSAdmin._d_validate_qos = ((omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotification/NamedPropertyRangeSeq:1.0"], ), {_0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS})

# QoSAdmin object reference
class _objref_QoSAdmin (CORBA.Object):
    _NP_RepositoryId = QoSAdmin._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def get_qos(self, *args):
        return self._obj.invoke("get_qos", _0_CosNotification.QoSAdmin._d_get_qos, args)

    def set_qos(self, *args):
        return self._obj.invoke("set_qos", _0_CosNotification.QoSAdmin._d_set_qos, args)

    def validate_qos(self, *args):
        return self._obj.invoke("validate_qos", _0_CosNotification.QoSAdmin._d_validate_qos, args)

omniORB.registerObjref(QoSAdmin._NP_RepositoryId, _objref_QoSAdmin)
_0_CosNotification._objref_QoSAdmin = _objref_QoSAdmin
del QoSAdmin, _objref_QoSAdmin

# QoSAdmin skeleton
__name__ = "CosNotification__POA"
class QoSAdmin (PortableServer.Servant):
    _NP_RepositoryId = _0_CosNotification.QoSAdmin._NP_RepositoryId


    _omni_op_d = {"get_qos": _0_CosNotification.QoSAdmin._d_get_qos, "set_qos": _0_CosNotification.QoSAdmin._d_set_qos, "validate_qos": _0_CosNotification.QoSAdmin._d_validate_qos}

QoSAdmin._omni_skeleton = QoSAdmin
_0_CosNotification__POA.QoSAdmin = QoSAdmin
omniORB.registerSkeleton(QoSAdmin._NP_RepositoryId, QoSAdmin)
del QoSAdmin
__name__ = "CosNotification"
_0_CosNotification.MaxQueueLength = "MaxQueueLength"
_0_CosNotification.MaxConsumers = "MaxConsumers"
_0_CosNotification.MaxSuppliers = "MaxSuppliers"
_0_CosNotification.RejectNewEvents = "RejectNewEvents"

# interface AdminPropertiesAdmin
_0_CosNotification._d_AdminPropertiesAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotification/AdminPropertiesAdmin:1.0", "AdminPropertiesAdmin")
omniORB.typeMapping["IDL:omg.org/CosNotification/AdminPropertiesAdmin:1.0"] = _0_CosNotification._d_AdminPropertiesAdmin
_0_CosNotification.AdminPropertiesAdmin = omniORB.newEmptyClass()
class AdminPropertiesAdmin :
    _NP_RepositoryId = _0_CosNotification._d_AdminPropertiesAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotification.AdminPropertiesAdmin = AdminPropertiesAdmin
_0_CosNotification._tc_AdminPropertiesAdmin = omniORB.tcInternal.createTypeCode(_0_CosNotification._d_AdminPropertiesAdmin)
omniORB.registerType(AdminPropertiesAdmin._NP_RepositoryId, _0_CosNotification._d_AdminPropertiesAdmin, _0_CosNotification._tc_AdminPropertiesAdmin)

# AdminPropertiesAdmin operations and attributes
AdminPropertiesAdmin._d_get_admin = ((), (omniORB.typeMapping["IDL:omg.org/CosNotification/AdminProperties:1.0"], ), None)
AdminPropertiesAdmin._d_set_admin = ((omniORB.typeMapping["IDL:omg.org/CosNotification/AdminProperties:1.0"], ), (), {_0_CosNotification.UnsupportedAdmin._NP_RepositoryId: _0_CosNotification._d_UnsupportedAdmin})

# AdminPropertiesAdmin object reference
class _objref_AdminPropertiesAdmin (CORBA.Object):
    _NP_RepositoryId = AdminPropertiesAdmin._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def get_admin(self, *args):
        return self._obj.invoke("get_admin", _0_CosNotification.AdminPropertiesAdmin._d_get_admin, args)

    def set_admin(self, *args):
        return self._obj.invoke("set_admin", _0_CosNotification.AdminPropertiesAdmin._d_set_admin, args)

omniORB.registerObjref(AdminPropertiesAdmin._NP_RepositoryId, _objref_AdminPropertiesAdmin)
_0_CosNotification._objref_AdminPropertiesAdmin = _objref_AdminPropertiesAdmin
del AdminPropertiesAdmin, _objref_AdminPropertiesAdmin

# AdminPropertiesAdmin skeleton
__name__ = "CosNotification__POA"
class AdminPropertiesAdmin (PortableServer.Servant):
    _NP_RepositoryId = _0_CosNotification.AdminPropertiesAdmin._NP_RepositoryId


    _omni_op_d = {"get_admin": _0_CosNotification.AdminPropertiesAdmin._d_get_admin, "set_admin": _0_CosNotification.AdminPropertiesAdmin._d_set_admin}

AdminPropertiesAdmin._omni_skeleton = AdminPropertiesAdmin
_0_CosNotification__POA.AdminPropertiesAdmin = AdminPropertiesAdmin
omniORB.registerSkeleton(AdminPropertiesAdmin._NP_RepositoryId, AdminPropertiesAdmin)
del AdminPropertiesAdmin
__name__ = "CosNotification"

#
# End of module "CosNotification"
#
__name__ = "CosNotification_idl"

_exported_modules = ( "CosNotification", )

# The end.
