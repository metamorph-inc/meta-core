# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosEventChannelAdmin.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")

#
# Start of module "CosEventChannelAdmin"
#
__name__ = "CosEventChannelAdmin"
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin", r"..\..\..\..\..\idl\COS\CosEventChannelAdmin.idl")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA", r"..\..\..\..\..\idl\COS\CosEventChannelAdmin.idl")


# exception AlreadyConnected
_0_CosEventChannelAdmin.AlreadyConnected = omniORB.newEmptyClass()
class AlreadyConnected (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosEventChannelAdmin/AlreadyConnected:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosEventChannelAdmin.AlreadyConnected = AlreadyConnected
_0_CosEventChannelAdmin._d_AlreadyConnected  = (omniORB.tcInternal.tv_except, AlreadyConnected, AlreadyConnected._NP_RepositoryId, "AlreadyConnected")
_0_CosEventChannelAdmin._tc_AlreadyConnected = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_AlreadyConnected)
omniORB.registerType(AlreadyConnected._NP_RepositoryId, _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin._tc_AlreadyConnected)
del AlreadyConnected

# exception TypeError
_0_CosEventChannelAdmin.TypeError = omniORB.newEmptyClass()
class TypeError (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosEventChannelAdmin/TypeError:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosEventChannelAdmin.TypeError = TypeError
_0_CosEventChannelAdmin._d_TypeError  = (omniORB.tcInternal.tv_except, TypeError, TypeError._NP_RepositoryId, "TypeError")
_0_CosEventChannelAdmin._tc_TypeError = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_TypeError)
omniORB.registerType(TypeError._NP_RepositoryId, _0_CosEventChannelAdmin._d_TypeError, _0_CosEventChannelAdmin._tc_TypeError)
del TypeError

# interface ProxyPushConsumer
_0_CosEventChannelAdmin._d_ProxyPushConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/ProxyPushConsumer:1.0", "ProxyPushConsumer")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPushConsumer:1.0"] = _0_CosEventChannelAdmin._d_ProxyPushConsumer
_0_CosEventChannelAdmin.ProxyPushConsumer = omniORB.newEmptyClass()
class ProxyPushConsumer (_0_CosEventComm.PushConsumer):
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_ProxyPushConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.ProxyPushConsumer = ProxyPushConsumer
_0_CosEventChannelAdmin._tc_ProxyPushConsumer = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_ProxyPushConsumer)
omniORB.registerType(ProxyPushConsumer._NP_RepositoryId, _0_CosEventChannelAdmin._d_ProxyPushConsumer, _0_CosEventChannelAdmin._tc_ProxyPushConsumer)

# ProxyPushConsumer operations and attributes
ProxyPushConsumer._d_connect_push_supplier = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PushSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# ProxyPushConsumer object reference
class _objref_ProxyPushConsumer (_0_CosEventComm._objref_PushConsumer):
    _NP_RepositoryId = ProxyPushConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosEventComm._objref_PushConsumer.__init__(self, obj)

    def connect_push_supplier(self, *args):
        return self._obj.invoke("connect_push_supplier", _0_CosEventChannelAdmin.ProxyPushConsumer._d_connect_push_supplier, args)

omniORB.registerObjref(ProxyPushConsumer._NP_RepositoryId, _objref_ProxyPushConsumer)
_0_CosEventChannelAdmin._objref_ProxyPushConsumer = _objref_ProxyPushConsumer
del ProxyPushConsumer, _objref_ProxyPushConsumer

# ProxyPushConsumer skeleton
__name__ = "CosEventChannelAdmin__POA"
class ProxyPushConsumer (_0_CosEventComm__POA.PushConsumer):
    _NP_RepositoryId = _0_CosEventChannelAdmin.ProxyPushConsumer._NP_RepositoryId


    _omni_op_d = {"connect_push_supplier": _0_CosEventChannelAdmin.ProxyPushConsumer._d_connect_push_supplier}
    _omni_op_d.update(_0_CosEventComm__POA.PushConsumer._omni_op_d)

ProxyPushConsumer._omni_skeleton = ProxyPushConsumer
_0_CosEventChannelAdmin__POA.ProxyPushConsumer = ProxyPushConsumer
omniORB.registerSkeleton(ProxyPushConsumer._NP_RepositoryId, ProxyPushConsumer)
del ProxyPushConsumer
__name__ = "CosEventChannelAdmin"

# interface ProxyPullSupplier
_0_CosEventChannelAdmin._d_ProxyPullSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/ProxyPullSupplier:1.0", "ProxyPullSupplier")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPullSupplier:1.0"] = _0_CosEventChannelAdmin._d_ProxyPullSupplier
_0_CosEventChannelAdmin.ProxyPullSupplier = omniORB.newEmptyClass()
class ProxyPullSupplier (_0_CosEventComm.PullSupplier):
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_ProxyPullSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.ProxyPullSupplier = ProxyPullSupplier
_0_CosEventChannelAdmin._tc_ProxyPullSupplier = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_ProxyPullSupplier)
omniORB.registerType(ProxyPullSupplier._NP_RepositoryId, _0_CosEventChannelAdmin._d_ProxyPullSupplier, _0_CosEventChannelAdmin._tc_ProxyPullSupplier)

# ProxyPullSupplier operations and attributes
ProxyPullSupplier._d_connect_pull_consumer = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PullConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# ProxyPullSupplier object reference
class _objref_ProxyPullSupplier (_0_CosEventComm._objref_PullSupplier):
    _NP_RepositoryId = ProxyPullSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosEventComm._objref_PullSupplier.__init__(self, obj)

    def connect_pull_consumer(self, *args):
        return self._obj.invoke("connect_pull_consumer", _0_CosEventChannelAdmin.ProxyPullSupplier._d_connect_pull_consumer, args)

omniORB.registerObjref(ProxyPullSupplier._NP_RepositoryId, _objref_ProxyPullSupplier)
_0_CosEventChannelAdmin._objref_ProxyPullSupplier = _objref_ProxyPullSupplier
del ProxyPullSupplier, _objref_ProxyPullSupplier

# ProxyPullSupplier skeleton
__name__ = "CosEventChannelAdmin__POA"
class ProxyPullSupplier (_0_CosEventComm__POA.PullSupplier):
    _NP_RepositoryId = _0_CosEventChannelAdmin.ProxyPullSupplier._NP_RepositoryId


    _omni_op_d = {"connect_pull_consumer": _0_CosEventChannelAdmin.ProxyPullSupplier._d_connect_pull_consumer}
    _omni_op_d.update(_0_CosEventComm__POA.PullSupplier._omni_op_d)

ProxyPullSupplier._omni_skeleton = ProxyPullSupplier
_0_CosEventChannelAdmin__POA.ProxyPullSupplier = ProxyPullSupplier
omniORB.registerSkeleton(ProxyPullSupplier._NP_RepositoryId, ProxyPullSupplier)
del ProxyPullSupplier
__name__ = "CosEventChannelAdmin"

# interface ProxyPullConsumer
_0_CosEventChannelAdmin._d_ProxyPullConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/ProxyPullConsumer:1.0", "ProxyPullConsumer")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPullConsumer:1.0"] = _0_CosEventChannelAdmin._d_ProxyPullConsumer
_0_CosEventChannelAdmin.ProxyPullConsumer = omniORB.newEmptyClass()
class ProxyPullConsumer (_0_CosEventComm.PullConsumer):
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_ProxyPullConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.ProxyPullConsumer = ProxyPullConsumer
_0_CosEventChannelAdmin._tc_ProxyPullConsumer = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_ProxyPullConsumer)
omniORB.registerType(ProxyPullConsumer._NP_RepositoryId, _0_CosEventChannelAdmin._d_ProxyPullConsumer, _0_CosEventChannelAdmin._tc_ProxyPullConsumer)

# ProxyPullConsumer operations and attributes
ProxyPullConsumer._d_connect_pull_supplier = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PullSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})

# ProxyPullConsumer object reference
class _objref_ProxyPullConsumer (_0_CosEventComm._objref_PullConsumer):
    _NP_RepositoryId = ProxyPullConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosEventComm._objref_PullConsumer.__init__(self, obj)

    def connect_pull_supplier(self, *args):
        return self._obj.invoke("connect_pull_supplier", _0_CosEventChannelAdmin.ProxyPullConsumer._d_connect_pull_supplier, args)

omniORB.registerObjref(ProxyPullConsumer._NP_RepositoryId, _objref_ProxyPullConsumer)
_0_CosEventChannelAdmin._objref_ProxyPullConsumer = _objref_ProxyPullConsumer
del ProxyPullConsumer, _objref_ProxyPullConsumer

# ProxyPullConsumer skeleton
__name__ = "CosEventChannelAdmin__POA"
class ProxyPullConsumer (_0_CosEventComm__POA.PullConsumer):
    _NP_RepositoryId = _0_CosEventChannelAdmin.ProxyPullConsumer._NP_RepositoryId


    _omni_op_d = {"connect_pull_supplier": _0_CosEventChannelAdmin.ProxyPullConsumer._d_connect_pull_supplier}
    _omni_op_d.update(_0_CosEventComm__POA.PullConsumer._omni_op_d)

ProxyPullConsumer._omni_skeleton = ProxyPullConsumer
_0_CosEventChannelAdmin__POA.ProxyPullConsumer = ProxyPullConsumer
omniORB.registerSkeleton(ProxyPullConsumer._NP_RepositoryId, ProxyPullConsumer)
del ProxyPullConsumer
__name__ = "CosEventChannelAdmin"

# interface ProxyPushSupplier
_0_CosEventChannelAdmin._d_ProxyPushSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/ProxyPushSupplier:1.0", "ProxyPushSupplier")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPushSupplier:1.0"] = _0_CosEventChannelAdmin._d_ProxyPushSupplier
_0_CosEventChannelAdmin.ProxyPushSupplier = omniORB.newEmptyClass()
class ProxyPushSupplier (_0_CosEventComm.PushSupplier):
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_ProxyPushSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.ProxyPushSupplier = ProxyPushSupplier
_0_CosEventChannelAdmin._tc_ProxyPushSupplier = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_ProxyPushSupplier)
omniORB.registerType(ProxyPushSupplier._NP_RepositoryId, _0_CosEventChannelAdmin._d_ProxyPushSupplier, _0_CosEventChannelAdmin._tc_ProxyPushSupplier)

# ProxyPushSupplier operations and attributes
ProxyPushSupplier._d_connect_push_consumer = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PushConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})

# ProxyPushSupplier object reference
class _objref_ProxyPushSupplier (_0_CosEventComm._objref_PushSupplier):
    _NP_RepositoryId = ProxyPushSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosEventComm._objref_PushSupplier.__init__(self, obj)

    def connect_push_consumer(self, *args):
        return self._obj.invoke("connect_push_consumer", _0_CosEventChannelAdmin.ProxyPushSupplier._d_connect_push_consumer, args)

omniORB.registerObjref(ProxyPushSupplier._NP_RepositoryId, _objref_ProxyPushSupplier)
_0_CosEventChannelAdmin._objref_ProxyPushSupplier = _objref_ProxyPushSupplier
del ProxyPushSupplier, _objref_ProxyPushSupplier

# ProxyPushSupplier skeleton
__name__ = "CosEventChannelAdmin__POA"
class ProxyPushSupplier (_0_CosEventComm__POA.PushSupplier):
    _NP_RepositoryId = _0_CosEventChannelAdmin.ProxyPushSupplier._NP_RepositoryId


    _omni_op_d = {"connect_push_consumer": _0_CosEventChannelAdmin.ProxyPushSupplier._d_connect_push_consumer}
    _omni_op_d.update(_0_CosEventComm__POA.PushSupplier._omni_op_d)

ProxyPushSupplier._omni_skeleton = ProxyPushSupplier
_0_CosEventChannelAdmin__POA.ProxyPushSupplier = ProxyPushSupplier
omniORB.registerSkeleton(ProxyPushSupplier._NP_RepositoryId, ProxyPushSupplier)
del ProxyPushSupplier
__name__ = "CosEventChannelAdmin"

# interface ConsumerAdmin
_0_CosEventChannelAdmin._d_ConsumerAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/ConsumerAdmin:1.0", "ConsumerAdmin")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ConsumerAdmin:1.0"] = _0_CosEventChannelAdmin._d_ConsumerAdmin
_0_CosEventChannelAdmin.ConsumerAdmin = omniORB.newEmptyClass()
class ConsumerAdmin :
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_ConsumerAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.ConsumerAdmin = ConsumerAdmin
_0_CosEventChannelAdmin._tc_ConsumerAdmin = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_ConsumerAdmin)
omniORB.registerType(ConsumerAdmin._NP_RepositoryId, _0_CosEventChannelAdmin._d_ConsumerAdmin, _0_CosEventChannelAdmin._tc_ConsumerAdmin)

# ConsumerAdmin operations and attributes
ConsumerAdmin._d_obtain_push_supplier = ((), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPushSupplier:1.0"], ), None)
ConsumerAdmin._d_obtain_pull_supplier = ((), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPullSupplier:1.0"], ), None)

# ConsumerAdmin object reference
class _objref_ConsumerAdmin (CORBA.Object):
    _NP_RepositoryId = ConsumerAdmin._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def obtain_push_supplier(self, *args):
        return self._obj.invoke("obtain_push_supplier", _0_CosEventChannelAdmin.ConsumerAdmin._d_obtain_push_supplier, args)

    def obtain_pull_supplier(self, *args):
        return self._obj.invoke("obtain_pull_supplier", _0_CosEventChannelAdmin.ConsumerAdmin._d_obtain_pull_supplier, args)

omniORB.registerObjref(ConsumerAdmin._NP_RepositoryId, _objref_ConsumerAdmin)
_0_CosEventChannelAdmin._objref_ConsumerAdmin = _objref_ConsumerAdmin
del ConsumerAdmin, _objref_ConsumerAdmin

# ConsumerAdmin skeleton
__name__ = "CosEventChannelAdmin__POA"
class ConsumerAdmin (PortableServer.Servant):
    _NP_RepositoryId = _0_CosEventChannelAdmin.ConsumerAdmin._NP_RepositoryId


    _omni_op_d = {"obtain_push_supplier": _0_CosEventChannelAdmin.ConsumerAdmin._d_obtain_push_supplier, "obtain_pull_supplier": _0_CosEventChannelAdmin.ConsumerAdmin._d_obtain_pull_supplier}

ConsumerAdmin._omni_skeleton = ConsumerAdmin
_0_CosEventChannelAdmin__POA.ConsumerAdmin = ConsumerAdmin
omniORB.registerSkeleton(ConsumerAdmin._NP_RepositoryId, ConsumerAdmin)
del ConsumerAdmin
__name__ = "CosEventChannelAdmin"

# interface SupplierAdmin
_0_CosEventChannelAdmin._d_SupplierAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/SupplierAdmin:1.0", "SupplierAdmin")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/SupplierAdmin:1.0"] = _0_CosEventChannelAdmin._d_SupplierAdmin
_0_CosEventChannelAdmin.SupplierAdmin = omniORB.newEmptyClass()
class SupplierAdmin :
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_SupplierAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.SupplierAdmin = SupplierAdmin
_0_CosEventChannelAdmin._tc_SupplierAdmin = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_SupplierAdmin)
omniORB.registerType(SupplierAdmin._NP_RepositoryId, _0_CosEventChannelAdmin._d_SupplierAdmin, _0_CosEventChannelAdmin._tc_SupplierAdmin)

# SupplierAdmin operations and attributes
SupplierAdmin._d_obtain_push_consumer = ((), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPushConsumer:1.0"], ), None)
SupplierAdmin._d_obtain_pull_consumer = ((), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ProxyPullConsumer:1.0"], ), None)

# SupplierAdmin object reference
class _objref_SupplierAdmin (CORBA.Object):
    _NP_RepositoryId = SupplierAdmin._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def obtain_push_consumer(self, *args):
        return self._obj.invoke("obtain_push_consumer", _0_CosEventChannelAdmin.SupplierAdmin._d_obtain_push_consumer, args)

    def obtain_pull_consumer(self, *args):
        return self._obj.invoke("obtain_pull_consumer", _0_CosEventChannelAdmin.SupplierAdmin._d_obtain_pull_consumer, args)

omniORB.registerObjref(SupplierAdmin._NP_RepositoryId, _objref_SupplierAdmin)
_0_CosEventChannelAdmin._objref_SupplierAdmin = _objref_SupplierAdmin
del SupplierAdmin, _objref_SupplierAdmin

# SupplierAdmin skeleton
__name__ = "CosEventChannelAdmin__POA"
class SupplierAdmin (PortableServer.Servant):
    _NP_RepositoryId = _0_CosEventChannelAdmin.SupplierAdmin._NP_RepositoryId


    _omni_op_d = {"obtain_push_consumer": _0_CosEventChannelAdmin.SupplierAdmin._d_obtain_push_consumer, "obtain_pull_consumer": _0_CosEventChannelAdmin.SupplierAdmin._d_obtain_pull_consumer}

SupplierAdmin._omni_skeleton = SupplierAdmin
_0_CosEventChannelAdmin__POA.SupplierAdmin = SupplierAdmin
omniORB.registerSkeleton(SupplierAdmin._NP_RepositoryId, SupplierAdmin)
del SupplierAdmin
__name__ = "CosEventChannelAdmin"

# interface EventChannel
_0_CosEventChannelAdmin._d_EventChannel = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosEventChannelAdmin/EventChannel:1.0", "EventChannel")
omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/EventChannel:1.0"] = _0_CosEventChannelAdmin._d_EventChannel
_0_CosEventChannelAdmin.EventChannel = omniORB.newEmptyClass()
class EventChannel :
    _NP_RepositoryId = _0_CosEventChannelAdmin._d_EventChannel[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosEventChannelAdmin.EventChannel = EventChannel
_0_CosEventChannelAdmin._tc_EventChannel = omniORB.tcInternal.createTypeCode(_0_CosEventChannelAdmin._d_EventChannel)
omniORB.registerType(EventChannel._NP_RepositoryId, _0_CosEventChannelAdmin._d_EventChannel, _0_CosEventChannelAdmin._tc_EventChannel)

# EventChannel operations and attributes
EventChannel._d_for_consumers = ((), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/ConsumerAdmin:1.0"], ), None)
EventChannel._d_for_suppliers = ((), (omniORB.typeMapping["IDL:omg.org/CosEventChannelAdmin/SupplierAdmin:1.0"], ), None)
EventChannel._d_destroy = ((), (), None)

# EventChannel object reference
class _objref_EventChannel (CORBA.Object):
    _NP_RepositoryId = EventChannel._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def for_consumers(self, *args):
        return self._obj.invoke("for_consumers", _0_CosEventChannelAdmin.EventChannel._d_for_consumers, args)

    def for_suppliers(self, *args):
        return self._obj.invoke("for_suppliers", _0_CosEventChannelAdmin.EventChannel._d_for_suppliers, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_CosEventChannelAdmin.EventChannel._d_destroy, args)

omniORB.registerObjref(EventChannel._NP_RepositoryId, _objref_EventChannel)
_0_CosEventChannelAdmin._objref_EventChannel = _objref_EventChannel
del EventChannel, _objref_EventChannel

# EventChannel skeleton
__name__ = "CosEventChannelAdmin__POA"
class EventChannel (PortableServer.Servant):
    _NP_RepositoryId = _0_CosEventChannelAdmin.EventChannel._NP_RepositoryId


    _omni_op_d = {"for_consumers": _0_CosEventChannelAdmin.EventChannel._d_for_consumers, "for_suppliers": _0_CosEventChannelAdmin.EventChannel._d_for_suppliers, "destroy": _0_CosEventChannelAdmin.EventChannel._d_destroy}

EventChannel._omni_skeleton = EventChannel
_0_CosEventChannelAdmin__POA.EventChannel = EventChannel
omniORB.registerSkeleton(EventChannel._NP_RepositoryId, EventChannel)
del EventChannel
__name__ = "CosEventChannelAdmin"

#
# End of module "CosEventChannelAdmin"
#
__name__ = "CosEventChannelAdmin_idl"

_exported_modules = ( "CosEventChannelAdmin", )

# The end.
