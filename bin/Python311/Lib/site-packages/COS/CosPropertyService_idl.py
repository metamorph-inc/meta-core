# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosPropertyService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

#
# Start of module "CosPropertyService"
#
__name__ = "CosPropertyService"
_0_CosPropertyService = omniORB.openModule("CosPropertyService", r"..\..\..\..\..\idl\COS\CosPropertyService.idl")
_0_CosPropertyService__POA = omniORB.openModule("CosPropertyService__POA", r"..\..\..\..\..\idl\COS\CosPropertyService.idl")


# typedef ... PropertyName
class PropertyName:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyName:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.PropertyName = PropertyName
_0_CosPropertyService._d_PropertyName  = (omniORB.tcInternal.tv_string,0)
_0_CosPropertyService._ad_PropertyName = (omniORB.tcInternal.tv_alias, PropertyName._NP_RepositoryId, "PropertyName", (omniORB.tcInternal.tv_string,0))
_0_CosPropertyService._tc_PropertyName = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_PropertyName)
omniORB.registerType(PropertyName._NP_RepositoryId, _0_CosPropertyService._ad_PropertyName, _0_CosPropertyService._tc_PropertyName)
del PropertyName

# struct Property
_0_CosPropertyService.Property = omniORB.newEmptyClass()
class Property (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/Property:1.0"

    def __init__(self, property_name, property_value):
        self.property_name = property_name
        self.property_value = property_value

_0_CosPropertyService.Property = Property
_0_CosPropertyService._d_Property  = (omniORB.tcInternal.tv_struct, Property, Property._NP_RepositoryId, "Property", "property_name", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], "property_value", omniORB.tcInternal.tv_any)
_0_CosPropertyService._tc_Property = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_Property)
omniORB.registerType(Property._NP_RepositoryId, _0_CosPropertyService._d_Property, _0_CosPropertyService._tc_Property)
del Property

# enum PropertyModeType
_0_CosPropertyService.normal = omniORB.EnumItem("normal", 0)
_0_CosPropertyService.read_only = omniORB.EnumItem("read_only", 1)
_0_CosPropertyService.fixed_normal = omniORB.EnumItem("fixed_normal", 2)
_0_CosPropertyService.fixed_readonly = omniORB.EnumItem("fixed_readonly", 3)
_0_CosPropertyService.undefined = omniORB.EnumItem("undefined", 4)
_0_CosPropertyService.PropertyModeType = omniORB.Enum("IDL:omg.org/CosPropertyService/PropertyModeType:1.0", (_0_CosPropertyService.normal, _0_CosPropertyService.read_only, _0_CosPropertyService.fixed_normal, _0_CosPropertyService.fixed_readonly, _0_CosPropertyService.undefined,))

_0_CosPropertyService._d_PropertyModeType  = (omniORB.tcInternal.tv_enum, _0_CosPropertyService.PropertyModeType._NP_RepositoryId, "PropertyModeType", _0_CosPropertyService.PropertyModeType._items)
_0_CosPropertyService._tc_PropertyModeType = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertyModeType)
omniORB.registerType(_0_CosPropertyService.PropertyModeType._NP_RepositoryId, _0_CosPropertyService._d_PropertyModeType, _0_CosPropertyService._tc_PropertyModeType)

# struct PropertyDef
_0_CosPropertyService.PropertyDef = omniORB.newEmptyClass()
class PropertyDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyDef:1.0"

    def __init__(self, property_name, property_value, property_mode):
        self.property_name = property_name
        self.property_value = property_value
        self.property_mode = property_mode

_0_CosPropertyService.PropertyDef = PropertyDef
_0_CosPropertyService._d_PropertyDef  = (omniORB.tcInternal.tv_struct, PropertyDef, PropertyDef._NP_RepositoryId, "PropertyDef", "property_name", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], "property_value", omniORB.tcInternal.tv_any, "property_mode", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModeType:1.0"])
_0_CosPropertyService._tc_PropertyDef = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertyDef)
omniORB.registerType(PropertyDef._NP_RepositoryId, _0_CosPropertyService._d_PropertyDef, _0_CosPropertyService._tc_PropertyDef)
del PropertyDef

# struct PropertyMode
_0_CosPropertyService.PropertyMode = omniORB.newEmptyClass()
class PropertyMode (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyMode:1.0"

    def __init__(self, property_name, property_mode):
        self.property_name = property_name
        self.property_mode = property_mode

_0_CosPropertyService.PropertyMode = PropertyMode
_0_CosPropertyService._d_PropertyMode  = (omniORB.tcInternal.tv_struct, PropertyMode, PropertyMode._NP_RepositoryId, "PropertyMode", "property_name", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], "property_mode", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModeType:1.0"])
_0_CosPropertyService._tc_PropertyMode = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertyMode)
omniORB.registerType(PropertyMode._NP_RepositoryId, _0_CosPropertyService._d_PropertyMode, _0_CosPropertyService._tc_PropertyMode)
del PropertyMode

# typedef ... PropertyNames
class PropertyNames:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyNames:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.PropertyNames = PropertyNames
_0_CosPropertyService._d_PropertyNames  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], 0)
_0_CosPropertyService._ad_PropertyNames = (omniORB.tcInternal.tv_alias, PropertyNames._NP_RepositoryId, "PropertyNames", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], 0))
_0_CosPropertyService._tc_PropertyNames = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_PropertyNames)
omniORB.registerType(PropertyNames._NP_RepositoryId, _0_CosPropertyService._ad_PropertyNames, _0_CosPropertyService._tc_PropertyNames)
del PropertyNames

# typedef ... Properties
class Properties:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/Properties:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.Properties = Properties
_0_CosPropertyService._d_Properties  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/Property:1.0"], 0)
_0_CosPropertyService._ad_Properties = (omniORB.tcInternal.tv_alias, Properties._NP_RepositoryId, "Properties", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/Property:1.0"], 0))
_0_CosPropertyService._tc_Properties = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_Properties)
omniORB.registerType(Properties._NP_RepositoryId, _0_CosPropertyService._ad_Properties, _0_CosPropertyService._tc_Properties)
del Properties

# typedef ... PropertyDefs
class PropertyDefs:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyDefs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.PropertyDefs = PropertyDefs
_0_CosPropertyService._d_PropertyDefs  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyDef:1.0"], 0)
_0_CosPropertyService._ad_PropertyDefs = (omniORB.tcInternal.tv_alias, PropertyDefs._NP_RepositoryId, "PropertyDefs", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyDef:1.0"], 0))
_0_CosPropertyService._tc_PropertyDefs = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_PropertyDefs)
omniORB.registerType(PropertyDefs._NP_RepositoryId, _0_CosPropertyService._ad_PropertyDefs, _0_CosPropertyService._tc_PropertyDefs)
del PropertyDefs

# typedef ... PropertyModes
class PropertyModes:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyModes:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.PropertyModes = PropertyModes
_0_CosPropertyService._d_PropertyModes  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyMode:1.0"], 0)
_0_CosPropertyService._ad_PropertyModes = (omniORB.tcInternal.tv_alias, PropertyModes._NP_RepositoryId, "PropertyModes", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyMode:1.0"], 0))
_0_CosPropertyService._tc_PropertyModes = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_PropertyModes)
omniORB.registerType(PropertyModes._NP_RepositoryId, _0_CosPropertyService._ad_PropertyModes, _0_CosPropertyService._tc_PropertyModes)
del PropertyModes

# typedef ... PropertyTypes
class PropertyTypes:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyTypes:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.PropertyTypes = PropertyTypes
_0_CosPropertyService._d_PropertyTypes  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_TypeCode, 0)
_0_CosPropertyService._ad_PropertyTypes = (omniORB.tcInternal.tv_alias, PropertyTypes._NP_RepositoryId, "PropertyTypes", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_TypeCode, 0))
_0_CosPropertyService._tc_PropertyTypes = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_PropertyTypes)
omniORB.registerType(PropertyTypes._NP_RepositoryId, _0_CosPropertyService._ad_PropertyTypes, _0_CosPropertyService._tc_PropertyTypes)
del PropertyTypes

# forward interface PropertyNamesIterator;
_0_CosPropertyService._d_PropertyNamesIterator = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertyNamesIterator:1.0", "PropertyNamesIterator")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNamesIterator:1.0"] = _0_CosPropertyService._d_PropertyNamesIterator

# forward interface PropertiesIterator;
_0_CosPropertyService._d_PropertiesIterator = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertiesIterator:1.0", "PropertiesIterator")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertiesIterator:1.0"] = _0_CosPropertyService._d_PropertiesIterator

# forward interface PropertySetFactory;
_0_CosPropertyService._d_PropertySetFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySetFactory:1.0", "PropertySetFactory")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetFactory:1.0"] = _0_CosPropertyService._d_PropertySetFactory

# forward interface PropertySetDef;
_0_CosPropertyService._d_PropertySetDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySetDef:1.0", "PropertySetDef")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetDef:1.0"] = _0_CosPropertyService._d_PropertySetDef

# forward interface PropertySet;
_0_CosPropertyService._d_PropertySet = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySet:1.0", "PropertySet")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySet:1.0"] = _0_CosPropertyService._d_PropertySet

# exception ConstraintNotSupported
_0_CosPropertyService.ConstraintNotSupported = omniORB.newEmptyClass()
class ConstraintNotSupported (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/ConstraintNotSupported:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.ConstraintNotSupported = ConstraintNotSupported
_0_CosPropertyService._d_ConstraintNotSupported  = (omniORB.tcInternal.tv_except, ConstraintNotSupported, ConstraintNotSupported._NP_RepositoryId, "ConstraintNotSupported")
_0_CosPropertyService._tc_ConstraintNotSupported = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_ConstraintNotSupported)
omniORB.registerType(ConstraintNotSupported._NP_RepositoryId, _0_CosPropertyService._d_ConstraintNotSupported, _0_CosPropertyService._tc_ConstraintNotSupported)
del ConstraintNotSupported

# exception InvalidPropertyName
_0_CosPropertyService.InvalidPropertyName = omniORB.newEmptyClass()
class InvalidPropertyName (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/InvalidPropertyName:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.InvalidPropertyName = InvalidPropertyName
_0_CosPropertyService._d_InvalidPropertyName  = (omniORB.tcInternal.tv_except, InvalidPropertyName, InvalidPropertyName._NP_RepositoryId, "InvalidPropertyName")
_0_CosPropertyService._tc_InvalidPropertyName = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_InvalidPropertyName)
omniORB.registerType(InvalidPropertyName._NP_RepositoryId, _0_CosPropertyService._d_InvalidPropertyName, _0_CosPropertyService._tc_InvalidPropertyName)
del InvalidPropertyName

# exception ConflictingProperty
_0_CosPropertyService.ConflictingProperty = omniORB.newEmptyClass()
class ConflictingProperty (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/ConflictingProperty:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.ConflictingProperty = ConflictingProperty
_0_CosPropertyService._d_ConflictingProperty  = (omniORB.tcInternal.tv_except, ConflictingProperty, ConflictingProperty._NP_RepositoryId, "ConflictingProperty")
_0_CosPropertyService._tc_ConflictingProperty = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_ConflictingProperty)
omniORB.registerType(ConflictingProperty._NP_RepositoryId, _0_CosPropertyService._d_ConflictingProperty, _0_CosPropertyService._tc_ConflictingProperty)
del ConflictingProperty

# exception PropertyNotFound
_0_CosPropertyService.PropertyNotFound = omniORB.newEmptyClass()
class PropertyNotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyNotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.PropertyNotFound = PropertyNotFound
_0_CosPropertyService._d_PropertyNotFound  = (omniORB.tcInternal.tv_except, PropertyNotFound, PropertyNotFound._NP_RepositoryId, "PropertyNotFound")
_0_CosPropertyService._tc_PropertyNotFound = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertyNotFound)
omniORB.registerType(PropertyNotFound._NP_RepositoryId, _0_CosPropertyService._d_PropertyNotFound, _0_CosPropertyService._tc_PropertyNotFound)
del PropertyNotFound

# exception UnsupportedTypeCode
_0_CosPropertyService.UnsupportedTypeCode = omniORB.newEmptyClass()
class UnsupportedTypeCode (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/UnsupportedTypeCode:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.UnsupportedTypeCode = UnsupportedTypeCode
_0_CosPropertyService._d_UnsupportedTypeCode  = (omniORB.tcInternal.tv_except, UnsupportedTypeCode, UnsupportedTypeCode._NP_RepositoryId, "UnsupportedTypeCode")
_0_CosPropertyService._tc_UnsupportedTypeCode = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_UnsupportedTypeCode)
omniORB.registerType(UnsupportedTypeCode._NP_RepositoryId, _0_CosPropertyService._d_UnsupportedTypeCode, _0_CosPropertyService._tc_UnsupportedTypeCode)
del UnsupportedTypeCode

# exception UnsupportedProperty
_0_CosPropertyService.UnsupportedProperty = omniORB.newEmptyClass()
class UnsupportedProperty (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/UnsupportedProperty:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.UnsupportedProperty = UnsupportedProperty
_0_CosPropertyService._d_UnsupportedProperty  = (omniORB.tcInternal.tv_except, UnsupportedProperty, UnsupportedProperty._NP_RepositoryId, "UnsupportedProperty")
_0_CosPropertyService._tc_UnsupportedProperty = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_UnsupportedProperty)
omniORB.registerType(UnsupportedProperty._NP_RepositoryId, _0_CosPropertyService._d_UnsupportedProperty, _0_CosPropertyService._tc_UnsupportedProperty)
del UnsupportedProperty

# exception UnsupportedMode
_0_CosPropertyService.UnsupportedMode = omniORB.newEmptyClass()
class UnsupportedMode (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/UnsupportedMode:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.UnsupportedMode = UnsupportedMode
_0_CosPropertyService._d_UnsupportedMode  = (omniORB.tcInternal.tv_except, UnsupportedMode, UnsupportedMode._NP_RepositoryId, "UnsupportedMode")
_0_CosPropertyService._tc_UnsupportedMode = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_UnsupportedMode)
omniORB.registerType(UnsupportedMode._NP_RepositoryId, _0_CosPropertyService._d_UnsupportedMode, _0_CosPropertyService._tc_UnsupportedMode)
del UnsupportedMode

# exception FixedProperty
_0_CosPropertyService.FixedProperty = omniORB.newEmptyClass()
class FixedProperty (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/FixedProperty:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.FixedProperty = FixedProperty
_0_CosPropertyService._d_FixedProperty  = (omniORB.tcInternal.tv_except, FixedProperty, FixedProperty._NP_RepositoryId, "FixedProperty")
_0_CosPropertyService._tc_FixedProperty = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_FixedProperty)
omniORB.registerType(FixedProperty._NP_RepositoryId, _0_CosPropertyService._d_FixedProperty, _0_CosPropertyService._tc_FixedProperty)
del FixedProperty

# exception ReadOnlyProperty
_0_CosPropertyService.ReadOnlyProperty = omniORB.newEmptyClass()
class ReadOnlyProperty (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/ReadOnlyProperty:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosPropertyService.ReadOnlyProperty = ReadOnlyProperty
_0_CosPropertyService._d_ReadOnlyProperty  = (omniORB.tcInternal.tv_except, ReadOnlyProperty, ReadOnlyProperty._NP_RepositoryId, "ReadOnlyProperty")
_0_CosPropertyService._tc_ReadOnlyProperty = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_ReadOnlyProperty)
omniORB.registerType(ReadOnlyProperty._NP_RepositoryId, _0_CosPropertyService._d_ReadOnlyProperty, _0_CosPropertyService._tc_ReadOnlyProperty)
del ReadOnlyProperty

# enum ExceptionReason
_0_CosPropertyService.invalid_property_name = omniORB.EnumItem("invalid_property_name", 0)
_0_CosPropertyService.conflicting_property = omniORB.EnumItem("conflicting_property", 1)
_0_CosPropertyService.property_not_found = omniORB.EnumItem("property_not_found", 2)
_0_CosPropertyService.unsupported_type_code = omniORB.EnumItem("unsupported_type_code", 3)
_0_CosPropertyService.unsupported_property = omniORB.EnumItem("unsupported_property", 4)
_0_CosPropertyService.unsupported_mode = omniORB.EnumItem("unsupported_mode", 5)
_0_CosPropertyService.fixed_property = omniORB.EnumItem("fixed_property", 6)
_0_CosPropertyService.read_only_property = omniORB.EnumItem("read_only_property", 7)
_0_CosPropertyService.ExceptionReason = omniORB.Enum("IDL:omg.org/CosPropertyService/ExceptionReason:1.0", (_0_CosPropertyService.invalid_property_name, _0_CosPropertyService.conflicting_property, _0_CosPropertyService.property_not_found, _0_CosPropertyService.unsupported_type_code, _0_CosPropertyService.unsupported_property, _0_CosPropertyService.unsupported_mode, _0_CosPropertyService.fixed_property, _0_CosPropertyService.read_only_property,))

_0_CosPropertyService._d_ExceptionReason  = (omniORB.tcInternal.tv_enum, _0_CosPropertyService.ExceptionReason._NP_RepositoryId, "ExceptionReason", _0_CosPropertyService.ExceptionReason._items)
_0_CosPropertyService._tc_ExceptionReason = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_ExceptionReason)
omniORB.registerType(_0_CosPropertyService.ExceptionReason._NP_RepositoryId, _0_CosPropertyService._d_ExceptionReason, _0_CosPropertyService._tc_ExceptionReason)

# struct PropertyException
_0_CosPropertyService.PropertyException = omniORB.newEmptyClass()
class PropertyException (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyException:1.0"

    def __init__(self, reason, failing_property_name):
        self.reason = reason
        self.failing_property_name = failing_property_name

_0_CosPropertyService.PropertyException = PropertyException
_0_CosPropertyService._d_PropertyException  = (omniORB.tcInternal.tv_struct, PropertyException, PropertyException._NP_RepositoryId, "PropertyException", "reason", omniORB.typeMapping["IDL:omg.org/CosPropertyService/ExceptionReason:1.0"], "failing_property_name", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"])
_0_CosPropertyService._tc_PropertyException = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertyException)
omniORB.registerType(PropertyException._NP_RepositoryId, _0_CosPropertyService._d_PropertyException, _0_CosPropertyService._tc_PropertyException)
del PropertyException

# typedef ... PropertyExceptions
class PropertyExceptions:
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/PropertyExceptions:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosPropertyService.PropertyExceptions = PropertyExceptions
_0_CosPropertyService._d_PropertyExceptions  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyException:1.0"], 0)
_0_CosPropertyService._ad_PropertyExceptions = (omniORB.tcInternal.tv_alias, PropertyExceptions._NP_RepositoryId, "PropertyExceptions", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyException:1.0"], 0))
_0_CosPropertyService._tc_PropertyExceptions = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._ad_PropertyExceptions)
omniORB.registerType(PropertyExceptions._NP_RepositoryId, _0_CosPropertyService._ad_PropertyExceptions, _0_CosPropertyService._tc_PropertyExceptions)
del PropertyExceptions

# exception MultipleExceptions
_0_CosPropertyService.MultipleExceptions = omniORB.newEmptyClass()
class MultipleExceptions (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosPropertyService/MultipleExceptions:1.0"

    def __init__(self, exceptions):
        CORBA.UserException.__init__(self, exceptions)
        self.exceptions = exceptions

_0_CosPropertyService.MultipleExceptions = MultipleExceptions
_0_CosPropertyService._d_MultipleExceptions  = (omniORB.tcInternal.tv_except, MultipleExceptions, MultipleExceptions._NP_RepositoryId, "MultipleExceptions", "exceptions", omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyExceptions:1.0"])
_0_CosPropertyService._tc_MultipleExceptions = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_MultipleExceptions)
omniORB.registerType(MultipleExceptions._NP_RepositoryId, _0_CosPropertyService._d_MultipleExceptions, _0_CosPropertyService._tc_MultipleExceptions)
del MultipleExceptions

# interface PropertySetFactory
_0_CosPropertyService._d_PropertySetFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySetFactory:1.0", "PropertySetFactory")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetFactory:1.0"] = _0_CosPropertyService._d_PropertySetFactory
_0_CosPropertyService.PropertySetFactory = omniORB.newEmptyClass()
class PropertySetFactory :
    _NP_RepositoryId = _0_CosPropertyService._d_PropertySetFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPropertyService.PropertySetFactory = PropertySetFactory
_0_CosPropertyService._tc_PropertySetFactory = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertySetFactory)
omniORB.registerType(PropertySetFactory._NP_RepositoryId, _0_CosPropertyService._d_PropertySetFactory, _0_CosPropertyService._tc_PropertySetFactory)

# PropertySetFactory operations and attributes
PropertySetFactory._d_create_propertyset = ((), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySet:1.0"], ), None)
PropertySetFactory._d_create_constrained_propertyset = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyTypes:1.0"], omniORB.typeMapping["IDL:omg.org/CosPropertyService/Properties:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySet:1.0"], ), {_0_CosPropertyService.ConstraintNotSupported._NP_RepositoryId: _0_CosPropertyService._d_ConstraintNotSupported})
PropertySetFactory._d_create_initial_propertyset = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/Properties:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySet:1.0"], ), {_0_CosPropertyService.MultipleExceptions._NP_RepositoryId: _0_CosPropertyService._d_MultipleExceptions})

# PropertySetFactory object reference
class _objref_PropertySetFactory (CORBA.Object):
    _NP_RepositoryId = PropertySetFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def create_propertyset(self, *args):
        return self._obj.invoke("create_propertyset", _0_CosPropertyService.PropertySetFactory._d_create_propertyset, args)

    def create_constrained_propertyset(self, *args):
        return self._obj.invoke("create_constrained_propertyset", _0_CosPropertyService.PropertySetFactory._d_create_constrained_propertyset, args)

    def create_initial_propertyset(self, *args):
        return self._obj.invoke("create_initial_propertyset", _0_CosPropertyService.PropertySetFactory._d_create_initial_propertyset, args)

omniORB.registerObjref(PropertySetFactory._NP_RepositoryId, _objref_PropertySetFactory)
_0_CosPropertyService._objref_PropertySetFactory = _objref_PropertySetFactory
del PropertySetFactory, _objref_PropertySetFactory

# PropertySetFactory skeleton
__name__ = "CosPropertyService__POA"
class PropertySetFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPropertyService.PropertySetFactory._NP_RepositoryId


    _omni_op_d = {"create_propertyset": _0_CosPropertyService.PropertySetFactory._d_create_propertyset, "create_constrained_propertyset": _0_CosPropertyService.PropertySetFactory._d_create_constrained_propertyset, "create_initial_propertyset": _0_CosPropertyService.PropertySetFactory._d_create_initial_propertyset}

PropertySetFactory._omni_skeleton = PropertySetFactory
_0_CosPropertyService__POA.PropertySetFactory = PropertySetFactory
omniORB.registerSkeleton(PropertySetFactory._NP_RepositoryId, PropertySetFactory)
del PropertySetFactory
__name__ = "CosPropertyService"

# interface PropertySetDefFactory
_0_CosPropertyService._d_PropertySetDefFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySetDefFactory:1.0", "PropertySetDefFactory")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetDefFactory:1.0"] = _0_CosPropertyService._d_PropertySetDefFactory
_0_CosPropertyService.PropertySetDefFactory = omniORB.newEmptyClass()
class PropertySetDefFactory :
    _NP_RepositoryId = _0_CosPropertyService._d_PropertySetDefFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPropertyService.PropertySetDefFactory = PropertySetDefFactory
_0_CosPropertyService._tc_PropertySetDefFactory = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertySetDefFactory)
omniORB.registerType(PropertySetDefFactory._NP_RepositoryId, _0_CosPropertyService._d_PropertySetDefFactory, _0_CosPropertyService._tc_PropertySetDefFactory)

# PropertySetDefFactory operations and attributes
PropertySetDefFactory._d_create_propertysetdef = ((), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetDef:1.0"], ), None)
PropertySetDefFactory._d_create_constrained_propertysetdef = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyTypes:1.0"], omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyDefs:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetDef:1.0"], ), {_0_CosPropertyService.ConstraintNotSupported._NP_RepositoryId: _0_CosPropertyService._d_ConstraintNotSupported})
PropertySetDefFactory._d_create_initial_propertysetdef = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyDefs:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetDef:1.0"], ), {_0_CosPropertyService.MultipleExceptions._NP_RepositoryId: _0_CosPropertyService._d_MultipleExceptions})

# PropertySetDefFactory object reference
class _objref_PropertySetDefFactory (CORBA.Object):
    _NP_RepositoryId = PropertySetDefFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def create_propertysetdef(self, *args):
        return self._obj.invoke("create_propertysetdef", _0_CosPropertyService.PropertySetDefFactory._d_create_propertysetdef, args)

    def create_constrained_propertysetdef(self, *args):
        return self._obj.invoke("create_constrained_propertysetdef", _0_CosPropertyService.PropertySetDefFactory._d_create_constrained_propertysetdef, args)

    def create_initial_propertysetdef(self, *args):
        return self._obj.invoke("create_initial_propertysetdef", _0_CosPropertyService.PropertySetDefFactory._d_create_initial_propertysetdef, args)

omniORB.registerObjref(PropertySetDefFactory._NP_RepositoryId, _objref_PropertySetDefFactory)
_0_CosPropertyService._objref_PropertySetDefFactory = _objref_PropertySetDefFactory
del PropertySetDefFactory, _objref_PropertySetDefFactory

# PropertySetDefFactory skeleton
__name__ = "CosPropertyService__POA"
class PropertySetDefFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPropertyService.PropertySetDefFactory._NP_RepositoryId


    _omni_op_d = {"create_propertysetdef": _0_CosPropertyService.PropertySetDefFactory._d_create_propertysetdef, "create_constrained_propertysetdef": _0_CosPropertyService.PropertySetDefFactory._d_create_constrained_propertysetdef, "create_initial_propertysetdef": _0_CosPropertyService.PropertySetDefFactory._d_create_initial_propertysetdef}

PropertySetDefFactory._omni_skeleton = PropertySetDefFactory
_0_CosPropertyService__POA.PropertySetDefFactory = PropertySetDefFactory
omniORB.registerSkeleton(PropertySetDefFactory._NP_RepositoryId, PropertySetDefFactory)
del PropertySetDefFactory
__name__ = "CosPropertyService"

# interface PropertySet
_0_CosPropertyService._d_PropertySet = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySet:1.0", "PropertySet")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySet:1.0"] = _0_CosPropertyService._d_PropertySet
_0_CosPropertyService.PropertySet = omniORB.newEmptyClass()
class PropertySet :
    _NP_RepositoryId = _0_CosPropertyService._d_PropertySet[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPropertyService.PropertySet = PropertySet
_0_CosPropertyService._tc_PropertySet = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertySet)
omniORB.registerType(PropertySet._NP_RepositoryId, _0_CosPropertyService._d_PropertySet, _0_CosPropertyService._tc_PropertySet)

# PropertySet operations and attributes
PropertySet._d_define_property = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], omniORB.tcInternal.tv_any), (), {_0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName, _0_CosPropertyService.ConflictingProperty._NP_RepositoryId: _0_CosPropertyService._d_ConflictingProperty, _0_CosPropertyService.UnsupportedTypeCode._NP_RepositoryId: _0_CosPropertyService._d_UnsupportedTypeCode, _0_CosPropertyService.UnsupportedProperty._NP_RepositoryId: _0_CosPropertyService._d_UnsupportedProperty, _0_CosPropertyService.ReadOnlyProperty._NP_RepositoryId: _0_CosPropertyService._d_ReadOnlyProperty})
PropertySet._d_define_properties = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/Properties:1.0"], ), (), {_0_CosPropertyService.MultipleExceptions._NP_RepositoryId: _0_CosPropertyService._d_MultipleExceptions})
PropertySet._d_get_number_of_properties = ((), (omniORB.tcInternal.tv_ulong, ), None)
PropertySet._d_get_all_property_names = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNames:1.0"], omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNamesIterator:1.0"]), None)
PropertySet._d_get_property_value = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], ), (omniORB.tcInternal.tv_any, ), {_0_CosPropertyService.PropertyNotFound._NP_RepositoryId: _0_CosPropertyService._d_PropertyNotFound, _0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName})
PropertySet._d_get_properties = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNames:1.0"], ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CosPropertyService/Properties:1.0"]), None)
PropertySet._d_get_all_properties = ((omniORB.tcInternal.tv_ulong, ), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/Properties:1.0"], omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertiesIterator:1.0"]), None)
PropertySet._d_delete_property = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], ), (), {_0_CosPropertyService.PropertyNotFound._NP_RepositoryId: _0_CosPropertyService._d_PropertyNotFound, _0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName, _0_CosPropertyService.FixedProperty._NP_RepositoryId: _0_CosPropertyService._d_FixedProperty})
PropertySet._d_delete_properties = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNames:1.0"], ), (), {_0_CosPropertyService.MultipleExceptions._NP_RepositoryId: _0_CosPropertyService._d_MultipleExceptions})
PropertySet._d_delete_all_properties = ((), (omniORB.tcInternal.tv_boolean, ), None)
PropertySet._d_is_property_defined = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], ), (omniORB.tcInternal.tv_boolean, ), {_0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName})

# PropertySet object reference
class _objref_PropertySet (CORBA.Object):
    _NP_RepositoryId = PropertySet._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def define_property(self, *args):
        return self._obj.invoke("define_property", _0_CosPropertyService.PropertySet._d_define_property, args)

    def define_properties(self, *args):
        return self._obj.invoke("define_properties", _0_CosPropertyService.PropertySet._d_define_properties, args)

    def get_number_of_properties(self, *args):
        return self._obj.invoke("get_number_of_properties", _0_CosPropertyService.PropertySet._d_get_number_of_properties, args)

    def get_all_property_names(self, *args):
        return self._obj.invoke("get_all_property_names", _0_CosPropertyService.PropertySet._d_get_all_property_names, args)

    def get_property_value(self, *args):
        return self._obj.invoke("get_property_value", _0_CosPropertyService.PropertySet._d_get_property_value, args)

    def get_properties(self, *args):
        return self._obj.invoke("get_properties", _0_CosPropertyService.PropertySet._d_get_properties, args)

    def get_all_properties(self, *args):
        return self._obj.invoke("get_all_properties", _0_CosPropertyService.PropertySet._d_get_all_properties, args)

    def delete_property(self, *args):
        return self._obj.invoke("delete_property", _0_CosPropertyService.PropertySet._d_delete_property, args)

    def delete_properties(self, *args):
        return self._obj.invoke("delete_properties", _0_CosPropertyService.PropertySet._d_delete_properties, args)

    def delete_all_properties(self, *args):
        return self._obj.invoke("delete_all_properties", _0_CosPropertyService.PropertySet._d_delete_all_properties, args)

    def is_property_defined(self, *args):
        return self._obj.invoke("is_property_defined", _0_CosPropertyService.PropertySet._d_is_property_defined, args)

omniORB.registerObjref(PropertySet._NP_RepositoryId, _objref_PropertySet)
_0_CosPropertyService._objref_PropertySet = _objref_PropertySet
del PropertySet, _objref_PropertySet

# PropertySet skeleton
__name__ = "CosPropertyService__POA"
class PropertySet (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPropertyService.PropertySet._NP_RepositoryId


    _omni_op_d = {"define_property": _0_CosPropertyService.PropertySet._d_define_property, "define_properties": _0_CosPropertyService.PropertySet._d_define_properties, "get_number_of_properties": _0_CosPropertyService.PropertySet._d_get_number_of_properties, "get_all_property_names": _0_CosPropertyService.PropertySet._d_get_all_property_names, "get_property_value": _0_CosPropertyService.PropertySet._d_get_property_value, "get_properties": _0_CosPropertyService.PropertySet._d_get_properties, "get_all_properties": _0_CosPropertyService.PropertySet._d_get_all_properties, "delete_property": _0_CosPropertyService.PropertySet._d_delete_property, "delete_properties": _0_CosPropertyService.PropertySet._d_delete_properties, "delete_all_properties": _0_CosPropertyService.PropertySet._d_delete_all_properties, "is_property_defined": _0_CosPropertyService.PropertySet._d_is_property_defined}

PropertySet._omni_skeleton = PropertySet
_0_CosPropertyService__POA.PropertySet = PropertySet
omniORB.registerSkeleton(PropertySet._NP_RepositoryId, PropertySet)
del PropertySet
__name__ = "CosPropertyService"

# interface PropertySetDef
_0_CosPropertyService._d_PropertySetDef = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertySetDef:1.0", "PropertySetDef")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertySetDef:1.0"] = _0_CosPropertyService._d_PropertySetDef
_0_CosPropertyService.PropertySetDef = omniORB.newEmptyClass()
class PropertySetDef (_0_CosPropertyService.PropertySet):
    _NP_RepositoryId = _0_CosPropertyService._d_PropertySetDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPropertyService.PropertySetDef = PropertySetDef
_0_CosPropertyService._tc_PropertySetDef = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertySetDef)
omniORB.registerType(PropertySetDef._NP_RepositoryId, _0_CosPropertyService._d_PropertySetDef, _0_CosPropertyService._tc_PropertySetDef)

# PropertySetDef operations and attributes
PropertySetDef._d_get_allowed_property_types = ((), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyTypes:1.0"], ), None)
PropertySetDef._d_get_allowed_properties = ((), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyDefs:1.0"], ), None)
PropertySetDef._d_define_property_with_mode = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], omniORB.tcInternal.tv_any, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModeType:1.0"]), (), {_0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName, _0_CosPropertyService.ConflictingProperty._NP_RepositoryId: _0_CosPropertyService._d_ConflictingProperty, _0_CosPropertyService.UnsupportedTypeCode._NP_RepositoryId: _0_CosPropertyService._d_UnsupportedTypeCode, _0_CosPropertyService.UnsupportedProperty._NP_RepositoryId: _0_CosPropertyService._d_UnsupportedProperty, _0_CosPropertyService.UnsupportedMode._NP_RepositoryId: _0_CosPropertyService._d_UnsupportedMode, _0_CosPropertyService.ReadOnlyProperty._NP_RepositoryId: _0_CosPropertyService._d_ReadOnlyProperty})
PropertySetDef._d_define_properties_with_modes = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyDefs:1.0"], ), (), {_0_CosPropertyService.MultipleExceptions._NP_RepositoryId: _0_CosPropertyService._d_MultipleExceptions})
PropertySetDef._d_get_property_mode = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModeType:1.0"], ), {_0_CosPropertyService.PropertyNotFound._NP_RepositoryId: _0_CosPropertyService._d_PropertyNotFound, _0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName})
PropertySetDef._d_get_property_modes = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNames:1.0"], ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModes:1.0"]), None)
PropertySetDef._d_set_property_mode = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"], omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModeType:1.0"]), (), {_0_CosPropertyService.InvalidPropertyName._NP_RepositoryId: _0_CosPropertyService._d_InvalidPropertyName, _0_CosPropertyService.PropertyNotFound._NP_RepositoryId: _0_CosPropertyService._d_PropertyNotFound, _0_CosPropertyService.UnsupportedMode._NP_RepositoryId: _0_CosPropertyService._d_UnsupportedMode})
PropertySetDef._d_set_property_modes = ((omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyModes:1.0"], ), (), {_0_CosPropertyService.MultipleExceptions._NP_RepositoryId: _0_CosPropertyService._d_MultipleExceptions})

# PropertySetDef object reference
class _objref_PropertySetDef (_0_CosPropertyService._objref_PropertySet):
    _NP_RepositoryId = PropertySetDef._NP_RepositoryId

    def __init__(self, obj):
        _0_CosPropertyService._objref_PropertySet.__init__(self, obj)

    def get_allowed_property_types(self, *args):
        return self._obj.invoke("get_allowed_property_types", _0_CosPropertyService.PropertySetDef._d_get_allowed_property_types, args)

    def get_allowed_properties(self, *args):
        return self._obj.invoke("get_allowed_properties", _0_CosPropertyService.PropertySetDef._d_get_allowed_properties, args)

    def define_property_with_mode(self, *args):
        return self._obj.invoke("define_property_with_mode", _0_CosPropertyService.PropertySetDef._d_define_property_with_mode, args)

    def define_properties_with_modes(self, *args):
        return self._obj.invoke("define_properties_with_modes", _0_CosPropertyService.PropertySetDef._d_define_properties_with_modes, args)

    def get_property_mode(self, *args):
        return self._obj.invoke("get_property_mode", _0_CosPropertyService.PropertySetDef._d_get_property_mode, args)

    def get_property_modes(self, *args):
        return self._obj.invoke("get_property_modes", _0_CosPropertyService.PropertySetDef._d_get_property_modes, args)

    def set_property_mode(self, *args):
        return self._obj.invoke("set_property_mode", _0_CosPropertyService.PropertySetDef._d_set_property_mode, args)

    def set_property_modes(self, *args):
        return self._obj.invoke("set_property_modes", _0_CosPropertyService.PropertySetDef._d_set_property_modes, args)

omniORB.registerObjref(PropertySetDef._NP_RepositoryId, _objref_PropertySetDef)
_0_CosPropertyService._objref_PropertySetDef = _objref_PropertySetDef
del PropertySetDef, _objref_PropertySetDef

# PropertySetDef skeleton
__name__ = "CosPropertyService__POA"
class PropertySetDef (_0_CosPropertyService__POA.PropertySet):
    _NP_RepositoryId = _0_CosPropertyService.PropertySetDef._NP_RepositoryId


    _omni_op_d = {"get_allowed_property_types": _0_CosPropertyService.PropertySetDef._d_get_allowed_property_types, "get_allowed_properties": _0_CosPropertyService.PropertySetDef._d_get_allowed_properties, "define_property_with_mode": _0_CosPropertyService.PropertySetDef._d_define_property_with_mode, "define_properties_with_modes": _0_CosPropertyService.PropertySetDef._d_define_properties_with_modes, "get_property_mode": _0_CosPropertyService.PropertySetDef._d_get_property_mode, "get_property_modes": _0_CosPropertyService.PropertySetDef._d_get_property_modes, "set_property_mode": _0_CosPropertyService.PropertySetDef._d_set_property_mode, "set_property_modes": _0_CosPropertyService.PropertySetDef._d_set_property_modes}
    _omni_op_d.update(_0_CosPropertyService__POA.PropertySet._omni_op_d)

PropertySetDef._omni_skeleton = PropertySetDef
_0_CosPropertyService__POA.PropertySetDef = PropertySetDef
omniORB.registerSkeleton(PropertySetDef._NP_RepositoryId, PropertySetDef)
del PropertySetDef
__name__ = "CosPropertyService"

# interface PropertyNamesIterator
_0_CosPropertyService._d_PropertyNamesIterator = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertyNamesIterator:1.0", "PropertyNamesIterator")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNamesIterator:1.0"] = _0_CosPropertyService._d_PropertyNamesIterator
_0_CosPropertyService.PropertyNamesIterator = omniORB.newEmptyClass()
class PropertyNamesIterator :
    _NP_RepositoryId = _0_CosPropertyService._d_PropertyNamesIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPropertyService.PropertyNamesIterator = PropertyNamesIterator
_0_CosPropertyService._tc_PropertyNamesIterator = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertyNamesIterator)
omniORB.registerType(PropertyNamesIterator._NP_RepositoryId, _0_CosPropertyService._d_PropertyNamesIterator, _0_CosPropertyService._tc_PropertyNamesIterator)

# PropertyNamesIterator operations and attributes
PropertyNamesIterator._d_reset = ((), (), None)
PropertyNamesIterator._d_next_one = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyName:1.0"]), None)
PropertyNamesIterator._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertyNames:1.0"]), None)
PropertyNamesIterator._d_destroy = ((), (), None)

# PropertyNamesIterator object reference
class _objref_PropertyNamesIterator (CORBA.Object):
    _NP_RepositoryId = PropertyNamesIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_CosPropertyService.PropertyNamesIterator._d_reset, args)

    def next_one(self, *args):
        return self._obj.invoke("next_one", _0_CosPropertyService.PropertyNamesIterator._d_next_one, args)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_CosPropertyService.PropertyNamesIterator._d_next_n, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_CosPropertyService.PropertyNamesIterator._d_destroy, args)

omniORB.registerObjref(PropertyNamesIterator._NP_RepositoryId, _objref_PropertyNamesIterator)
_0_CosPropertyService._objref_PropertyNamesIterator = _objref_PropertyNamesIterator
del PropertyNamesIterator, _objref_PropertyNamesIterator

# PropertyNamesIterator skeleton
__name__ = "CosPropertyService__POA"
class PropertyNamesIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPropertyService.PropertyNamesIterator._NP_RepositoryId


    _omni_op_d = {"reset": _0_CosPropertyService.PropertyNamesIterator._d_reset, "next_one": _0_CosPropertyService.PropertyNamesIterator._d_next_one, "next_n": _0_CosPropertyService.PropertyNamesIterator._d_next_n, "destroy": _0_CosPropertyService.PropertyNamesIterator._d_destroy}

PropertyNamesIterator._omni_skeleton = PropertyNamesIterator
_0_CosPropertyService__POA.PropertyNamesIterator = PropertyNamesIterator
omniORB.registerSkeleton(PropertyNamesIterator._NP_RepositoryId, PropertyNamesIterator)
del PropertyNamesIterator
__name__ = "CosPropertyService"

# interface PropertiesIterator
_0_CosPropertyService._d_PropertiesIterator = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPropertyService/PropertiesIterator:1.0", "PropertiesIterator")
omniORB.typeMapping["IDL:omg.org/CosPropertyService/PropertiesIterator:1.0"] = _0_CosPropertyService._d_PropertiesIterator
_0_CosPropertyService.PropertiesIterator = omniORB.newEmptyClass()
class PropertiesIterator :
    _NP_RepositoryId = _0_CosPropertyService._d_PropertiesIterator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPropertyService.PropertiesIterator = PropertiesIterator
_0_CosPropertyService._tc_PropertiesIterator = omniORB.tcInternal.createTypeCode(_0_CosPropertyService._d_PropertiesIterator)
omniORB.registerType(PropertiesIterator._NP_RepositoryId, _0_CosPropertyService._d_PropertiesIterator, _0_CosPropertyService._tc_PropertiesIterator)

# PropertiesIterator operations and attributes
PropertiesIterator._d_reset = ((), (), None)
PropertiesIterator._d_next_one = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CosPropertyService/Property:1.0"]), None)
PropertiesIterator._d_next_n = ((omniORB.tcInternal.tv_ulong, ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:omg.org/CosPropertyService/Properties:1.0"]), None)
PropertiesIterator._d_destroy = ((), (), None)

# PropertiesIterator object reference
class _objref_PropertiesIterator (CORBA.Object):
    _NP_RepositoryId = PropertiesIterator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def reset(self, *args):
        return self._obj.invoke("reset", _0_CosPropertyService.PropertiesIterator._d_reset, args)

    def next_one(self, *args):
        return self._obj.invoke("next_one", _0_CosPropertyService.PropertiesIterator._d_next_one, args)

    def next_n(self, *args):
        return self._obj.invoke("next_n", _0_CosPropertyService.PropertiesIterator._d_next_n, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_CosPropertyService.PropertiesIterator._d_destroy, args)

omniORB.registerObjref(PropertiesIterator._NP_RepositoryId, _objref_PropertiesIterator)
_0_CosPropertyService._objref_PropertiesIterator = _objref_PropertiesIterator
del PropertiesIterator, _objref_PropertiesIterator

# PropertiesIterator skeleton
__name__ = "CosPropertyService__POA"
class PropertiesIterator (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPropertyService.PropertiesIterator._NP_RepositoryId


    _omni_op_d = {"reset": _0_CosPropertyService.PropertiesIterator._d_reset, "next_one": _0_CosPropertyService.PropertiesIterator._d_next_one, "next_n": _0_CosPropertyService.PropertiesIterator._d_next_n, "destroy": _0_CosPropertyService.PropertiesIterator._d_destroy}

PropertiesIterator._omni_skeleton = PropertiesIterator
_0_CosPropertyService__POA.PropertiesIterator = PropertiesIterator
omniORB.registerSkeleton(PropertiesIterator._NP_RepositoryId, PropertiesIterator)
del PropertiesIterator
__name__ = "CosPropertyService"

#
# End of module "CosPropertyService"
#
__name__ = "CosPropertyService_idl"

_exported_modules = ( "CosPropertyService", )

# The end.
