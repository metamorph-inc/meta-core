# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosPersistencePO.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "CosPersistencePID.idl"
import CosPersistencePID_idl
_0_CosPersistencePID = omniORB.openModule("CosPersistencePID")
_0_CosPersistencePID__POA = omniORB.openModule("CosPersistencePID__POA")

# #include "CosPersistencePDS.idl"
import CosPersistencePDS_idl
_0_CosPersistencePDS = omniORB.openModule("CosPersistencePDS")
_0_CosPersistencePDS__POA = omniORB.openModule("CosPersistencePDS__POA")

#
# Start of module "CosPersistencePO"
#
__name__ = "CosPersistencePO"
_0_CosPersistencePO = omniORB.openModule("CosPersistencePO", r"..\..\..\..\..\idl\COS\CosPersistencePO.idl")
_0_CosPersistencePO__POA = omniORB.openModule("CosPersistencePO__POA", r"..\..\..\..\..\idl\COS\CosPersistencePO.idl")


# interface PO
_0_CosPersistencePO._d_PO = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPersistencePO/PO:1.0", "PO")
omniORB.typeMapping["IDL:omg.org/CosPersistencePO/PO:1.0"] = _0_CosPersistencePO._d_PO
_0_CosPersistencePO.PO = omniORB.newEmptyClass()
class PO :
    _NP_RepositoryId = _0_CosPersistencePO._d_PO[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPersistencePO.PO = PO
_0_CosPersistencePO._tc_PO = omniORB.tcInternal.createTypeCode(_0_CosPersistencePO._d_PO)
omniORB.registerType(PO._NP_RepositoryId, _0_CosPersistencePO._d_PO, _0_CosPersistencePO._tc_PO)

# PO operations and attributes
PO._d__get_p = ((),(omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"],),None)
PO._d__set_p = ((omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"],),(),None)
PO._d_connect = ((omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosPersistencePDS/PDS:1.0"], ), None)
PO._d_disconnect = ((omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"], ), (), None)
PO._d_store = ((omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"], ), (), None)
PO._d_restore = ((omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"], ), (), None)
PO._d_delete = ((omniORB.typeMapping["IDL:omg.org/CosPersistencePID/PID:1.0"], ), (), None)

# PO object reference
class _objref_PO (CORBA.Object):
    _NP_RepositoryId = PO._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def _get_p(self, *args):
        return self._obj.invoke("_get_p", _0_CosPersistencePO.PO._d__get_p, args)

    def _set_p(self, *args):
        return self._obj.invoke("_set_p", _0_CosPersistencePO.PO._d__set_p, args)

    p = property(_get_p, _set_p)


    def connect(self, *args):
        return self._obj.invoke("connect", _0_CosPersistencePO.PO._d_connect, args)

    def disconnect(self, *args):
        return self._obj.invoke("disconnect", _0_CosPersistencePO.PO._d_disconnect, args)

    def store(self, *args):
        return self._obj.invoke("store", _0_CosPersistencePO.PO._d_store, args)

    def restore(self, *args):
        return self._obj.invoke("restore", _0_CosPersistencePO.PO._d_restore, args)

    def delete(self, *args):
        return self._obj.invoke("delete", _0_CosPersistencePO.PO._d_delete, args)

omniORB.registerObjref(PO._NP_RepositoryId, _objref_PO)
_0_CosPersistencePO._objref_PO = _objref_PO
del PO, _objref_PO

# PO skeleton
__name__ = "CosPersistencePO__POA"
class PO (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPersistencePO.PO._NP_RepositoryId


    _omni_op_d = {"_get_p": _0_CosPersistencePO.PO._d__get_p, "_set_p": _0_CosPersistencePO.PO._d__set_p, "connect": _0_CosPersistencePO.PO._d_connect, "disconnect": _0_CosPersistencePO.PO._d_disconnect, "store": _0_CosPersistencePO.PO._d_store, "restore": _0_CosPersistencePO.PO._d_restore, "delete": _0_CosPersistencePO.PO._d_delete}

PO._omni_skeleton = PO
_0_CosPersistencePO__POA.PO = PO
omniORB.registerSkeleton(PO._NP_RepositoryId, PO)
del PO
__name__ = "CosPersistencePO"

# interface SD
_0_CosPersistencePO._d_SD = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosPersistencePO/SD:1.0", "SD")
omniORB.typeMapping["IDL:omg.org/CosPersistencePO/SD:1.0"] = _0_CosPersistencePO._d_SD
_0_CosPersistencePO.SD = omniORB.newEmptyClass()
class SD :
    _NP_RepositoryId = _0_CosPersistencePO._d_SD[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosPersistencePO.SD = SD
_0_CosPersistencePO._tc_SD = omniORB.tcInternal.createTypeCode(_0_CosPersistencePO._d_SD)
omniORB.registerType(SD._NP_RepositoryId, _0_CosPersistencePO._d_SD, _0_CosPersistencePO._tc_SD)

# SD operations and attributes
SD._d_pre_store = ((), (), None)
SD._d_post_restore = ((), (), None)

# SD object reference
class _objref_SD (CORBA.Object):
    _NP_RepositoryId = SD._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def pre_store(self, *args):
        return self._obj.invoke("pre_store", _0_CosPersistencePO.SD._d_pre_store, args)

    def post_restore(self, *args):
        return self._obj.invoke("post_restore", _0_CosPersistencePO.SD._d_post_restore, args)

omniORB.registerObjref(SD._NP_RepositoryId, _objref_SD)
_0_CosPersistencePO._objref_SD = _objref_SD
del SD, _objref_SD

# SD skeleton
__name__ = "CosPersistencePO__POA"
class SD (PortableServer.Servant):
    _NP_RepositoryId = _0_CosPersistencePO.SD._NP_RepositoryId


    _omni_op_d = {"pre_store": _0_CosPersistencePO.SD._d_pre_store, "post_restore": _0_CosPersistencePO.SD._d_post_restore}

SD._omni_skeleton = SD
_0_CosPersistencePO__POA.SD = SD
omniORB.registerSkeleton(SD._NP_RepositoryId, SD)
del SD
__name__ = "CosPersistencePO"

#
# End of module "CosPersistencePO"
#
__name__ = "CosPersistencePO_idl"

_exported_modules = ( "CosPersistencePO", )

# The end.
