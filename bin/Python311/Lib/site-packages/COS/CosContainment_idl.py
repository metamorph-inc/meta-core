# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosContainment.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "ir.idl"
import ir_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "CosObjectIdentity.idl"
import CosObjectIdentity_idl
_0_CosObjectIdentity = omniORB.openModule("CosObjectIdentity")
_0_CosObjectIdentity__POA = omniORB.openModule("CosObjectIdentity__POA")

# #include "CosRelationships.idl"
import CosRelationships_idl
_0_CosRelationships = omniORB.openModule("CosRelationships")
_0_CosRelationships__POA = omniORB.openModule("CosRelationships__POA")

# #include "CosGraphs.idl"
import CosGraphs_idl
_0_CosGraphs = omniORB.openModule("CosGraphs")
_0_CosGraphs__POA = omniORB.openModule("CosGraphs__POA")

#
# Start of module "CosContainment"
#
__name__ = "CosContainment"
_0_CosContainment = omniORB.openModule("CosContainment", r"..\..\..\..\..\idl\COS\CosContainment.idl")
_0_CosContainment__POA = omniORB.openModule("CosContainment__POA", r"..\..\..\..\..\idl\COS\CosContainment.idl")


# interface Relationship
_0_CosContainment._d_Relationship = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosContainment/Relationship:1.0", "Relationship")
omniORB.typeMapping["IDL:omg.org/CosContainment/Relationship:1.0"] = _0_CosContainment._d_Relationship
_0_CosContainment.Relationship = omniORB.newEmptyClass()
class Relationship (_0_CosRelationships.Relationship):
    _NP_RepositoryId = _0_CosContainment._d_Relationship[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosContainment.Relationship = Relationship
_0_CosContainment._tc_Relationship = omniORB.tcInternal.createTypeCode(_0_CosContainment._d_Relationship)
omniORB.registerType(Relationship._NP_RepositoryId, _0_CosContainment._d_Relationship, _0_CosContainment._tc_Relationship)

# Relationship object reference
class _objref_Relationship (_0_CosRelationships._objref_Relationship):
    _NP_RepositoryId = Relationship._NP_RepositoryId

    def __init__(self, obj):
        _0_CosRelationships._objref_Relationship.__init__(self, obj)

omniORB.registerObjref(Relationship._NP_RepositoryId, _objref_Relationship)
_0_CosContainment._objref_Relationship = _objref_Relationship
del Relationship, _objref_Relationship

# Relationship skeleton
__name__ = "CosContainment__POA"
class Relationship (_0_CosRelationships__POA.Relationship):
    _NP_RepositoryId = _0_CosContainment.Relationship._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CosRelationships__POA.Relationship._omni_op_d)

Relationship._omni_skeleton = Relationship
_0_CosContainment__POA.Relationship = Relationship
omniORB.registerSkeleton(Relationship._NP_RepositoryId, Relationship)
del Relationship
__name__ = "CosContainment"

# interface ContainsRole
_0_CosContainment._d_ContainsRole = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosContainment/ContainsRole:1.0", "ContainsRole")
omniORB.typeMapping["IDL:omg.org/CosContainment/ContainsRole:1.0"] = _0_CosContainment._d_ContainsRole
_0_CosContainment.ContainsRole = omniORB.newEmptyClass()
class ContainsRole (_0_CosGraphs.Role):
    _NP_RepositoryId = _0_CosContainment._d_ContainsRole[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosContainment.ContainsRole = ContainsRole
_0_CosContainment._tc_ContainsRole = omniORB.tcInternal.createTypeCode(_0_CosContainment._d_ContainsRole)
omniORB.registerType(ContainsRole._NP_RepositoryId, _0_CosContainment._d_ContainsRole, _0_CosContainment._tc_ContainsRole)

# ContainsRole object reference
class _objref_ContainsRole (_0_CosGraphs._objref_Role):
    _NP_RepositoryId = ContainsRole._NP_RepositoryId

    def __init__(self, obj):
        _0_CosGraphs._objref_Role.__init__(self, obj)

omniORB.registerObjref(ContainsRole._NP_RepositoryId, _objref_ContainsRole)
_0_CosContainment._objref_ContainsRole = _objref_ContainsRole
del ContainsRole, _objref_ContainsRole

# ContainsRole skeleton
__name__ = "CosContainment__POA"
class ContainsRole (_0_CosGraphs__POA.Role):
    _NP_RepositoryId = _0_CosContainment.ContainsRole._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CosGraphs__POA.Role._omni_op_d)

ContainsRole._omni_skeleton = ContainsRole
_0_CosContainment__POA.ContainsRole = ContainsRole
omniORB.registerSkeleton(ContainsRole._NP_RepositoryId, ContainsRole)
del ContainsRole
__name__ = "CosContainment"

# interface ContainedInRole
_0_CosContainment._d_ContainedInRole = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosContainment/ContainedInRole:1.0", "ContainedInRole")
omniORB.typeMapping["IDL:omg.org/CosContainment/ContainedInRole:1.0"] = _0_CosContainment._d_ContainedInRole
_0_CosContainment.ContainedInRole = omniORB.newEmptyClass()
class ContainedInRole (_0_CosGraphs.Role):
    _NP_RepositoryId = _0_CosContainment._d_ContainedInRole[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosContainment.ContainedInRole = ContainedInRole
_0_CosContainment._tc_ContainedInRole = omniORB.tcInternal.createTypeCode(_0_CosContainment._d_ContainedInRole)
omniORB.registerType(ContainedInRole._NP_RepositoryId, _0_CosContainment._d_ContainedInRole, _0_CosContainment._tc_ContainedInRole)

# ContainedInRole object reference
class _objref_ContainedInRole (_0_CosGraphs._objref_Role):
    _NP_RepositoryId = ContainedInRole._NP_RepositoryId

    def __init__(self, obj):
        _0_CosGraphs._objref_Role.__init__(self, obj)

omniORB.registerObjref(ContainedInRole._NP_RepositoryId, _objref_ContainedInRole)
_0_CosContainment._objref_ContainedInRole = _objref_ContainedInRole
del ContainedInRole, _objref_ContainedInRole

# ContainedInRole skeleton
__name__ = "CosContainment__POA"
class ContainedInRole (_0_CosGraphs__POA.Role):
    _NP_RepositoryId = _0_CosContainment.ContainedInRole._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_CosGraphs__POA.Role._omni_op_d)

ContainedInRole._omni_skeleton = ContainedInRole
_0_CosContainment__POA.ContainedInRole = ContainedInRole
omniORB.registerSkeleton(ContainedInRole._NP_RepositoryId, ContainedInRole)
del ContainedInRole
__name__ = "CosContainment"

#
# End of module "CosContainment"
#
__name__ = "CosContainment_idl"

_exported_modules = ( "CosContainment", )

# The end.
