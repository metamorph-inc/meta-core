# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosStream.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "CosNaming.idl"
import CosNaming_idl
_0_CosNaming = omniORB.openModule("CosNaming")
_0_CosNaming__POA = omniORB.openModule("CosNaming__POA")

# #include "CosLifeCycle.idl"
import CosLifeCycle_idl
_0_CosLifeCycle = omniORB.openModule("CosLifeCycle")
_0_CosLifeCycle__POA = omniORB.openModule("CosLifeCycle__POA")

# #include "CosObjectIdentity.idl"
import CosObjectIdentity_idl
_0_CosObjectIdentity = omniORB.openModule("CosObjectIdentity")
_0_CosObjectIdentity__POA = omniORB.openModule("CosObjectIdentity__POA")

# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "ir.idl"
import ir_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")

# #include "CosRelationships.idl"
import CosRelationships_idl
_0_CosRelationships = omniORB.openModule("CosRelationships")
_0_CosRelationships__POA = omniORB.openModule("CosRelationships__POA")

# #include "CosGraphs.idl"
import CosGraphs_idl
_0_CosGraphs = omniORB.openModule("CosGraphs")
_0_CosGraphs__POA = omniORB.openModule("CosGraphs__POA")

#
# Start of module "CosStream"
#
__name__ = "CosStream"
_0_CosStream = omniORB.openModule("CosStream", r"..\..\..\..\..\idl\COS\CosStream.idl")
_0_CosStream__POA = omniORB.openModule("CosStream__POA", r"..\..\..\..\..\idl\COS\CosStream.idl")


# exception ObjectCreationError
_0_CosStream.ObjectCreationError = omniORB.newEmptyClass()
class ObjectCreationError (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosStream/ObjectCreationError:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosStream.ObjectCreationError = ObjectCreationError
_0_CosStream._d_ObjectCreationError  = (omniORB.tcInternal.tv_except, ObjectCreationError, ObjectCreationError._NP_RepositoryId, "ObjectCreationError")
_0_CosStream._tc_ObjectCreationError = omniORB.tcInternal.createTypeCode(_0_CosStream._d_ObjectCreationError)
omniORB.registerType(ObjectCreationError._NP_RepositoryId, _0_CosStream._d_ObjectCreationError, _0_CosStream._tc_ObjectCreationError)
del ObjectCreationError

# exception StreamDataFormatError
_0_CosStream.StreamDataFormatError = omniORB.newEmptyClass()
class StreamDataFormatError (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosStream/StreamDataFormatError:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosStream.StreamDataFormatError = StreamDataFormatError
_0_CosStream._d_StreamDataFormatError  = (omniORB.tcInternal.tv_except, StreamDataFormatError, StreamDataFormatError._NP_RepositoryId, "StreamDataFormatError")
_0_CosStream._tc_StreamDataFormatError = omniORB.tcInternal.createTypeCode(_0_CosStream._d_StreamDataFormatError)
omniORB.registerType(StreamDataFormatError._NP_RepositoryId, _0_CosStream._d_StreamDataFormatError, _0_CosStream._tc_StreamDataFormatError)
del StreamDataFormatError

# forward interface StreamIO;
_0_CosStream._d_StreamIO = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/StreamIO:1.0", "StreamIO")
omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"] = _0_CosStream._d_StreamIO

# forward interface Node;
_0_CosStream._d_Node = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Node:1.0", "Node")
omniORB.typeMapping["IDL:omg.org/CosStream/Node:1.0"] = _0_CosStream._d_Node

# forward interface Role;
_0_CosStream._d_Role = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Role:1.0", "Role")
omniORB.typeMapping["IDL:omg.org/CosStream/Role:1.0"] = _0_CosStream._d_Role

# forward interface Relationship;
_0_CosStream._d_Relationship = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Relationship:1.0", "Relationship")
omniORB.typeMapping["IDL:omg.org/CosStream/Relationship:1.0"] = _0_CosStream._d_Relationship

# interface Streamable
_0_CosStream._d_Streamable = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Streamable:1.0", "Streamable")
omniORB.typeMapping["IDL:omg.org/CosStream/Streamable:1.0"] = _0_CosStream._d_Streamable
_0_CosStream.Streamable = omniORB.newEmptyClass()
class Streamable (_0_CosObjectIdentity.IdentifiableObject):
    _NP_RepositoryId = _0_CosStream._d_Streamable[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.Streamable = Streamable
_0_CosStream._tc_Streamable = omniORB.tcInternal.createTypeCode(_0_CosStream._d_Streamable)
omniORB.registerType(Streamable._NP_RepositoryId, _0_CosStream._d_Streamable, _0_CosStream._tc_Streamable)

# Streamable operations and attributes
Streamable._d__get_external_form_id = ((),(omniORB.typeMapping["IDL:omg.org/CosLifeCycle/Key:1.0"],),None)
Streamable._d_externalize_to_stream = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], ), (), None)
Streamable._d_internalize_from_stream = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], omniORB.typeMapping["IDL:omg.org/CosLifeCycle/FactoryFinder:1.0"]), (), {_0_CosLifeCycle.NoFactory._NP_RepositoryId: _0_CosLifeCycle._d_NoFactory, _0_CosStream.ObjectCreationError._NP_RepositoryId: _0_CosStream._d_ObjectCreationError, _0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})

# Streamable object reference
class _objref_Streamable (_0_CosObjectIdentity._objref_IdentifiableObject):
    _NP_RepositoryId = Streamable._NP_RepositoryId

    def __init__(self, obj):
        _0_CosObjectIdentity._objref_IdentifiableObject.__init__(self, obj)

    def _get_external_form_id(self, *args):
        return self._obj.invoke("_get_external_form_id", _0_CosStream.Streamable._d__get_external_form_id, args)

    external_form_id = property(_get_external_form_id)


    def externalize_to_stream(self, *args):
        return self._obj.invoke("externalize_to_stream", _0_CosStream.Streamable._d_externalize_to_stream, args)

    def internalize_from_stream(self, *args):
        return self._obj.invoke("internalize_from_stream", _0_CosStream.Streamable._d_internalize_from_stream, args)

omniORB.registerObjref(Streamable._NP_RepositoryId, _objref_Streamable)
_0_CosStream._objref_Streamable = _objref_Streamable
del Streamable, _objref_Streamable

# Streamable skeleton
__name__ = "CosStream__POA"
class Streamable (_0_CosObjectIdentity__POA.IdentifiableObject):
    _NP_RepositoryId = _0_CosStream.Streamable._NP_RepositoryId


    _omni_op_d = {"_get_external_form_id": _0_CosStream.Streamable._d__get_external_form_id, "externalize_to_stream": _0_CosStream.Streamable._d_externalize_to_stream, "internalize_from_stream": _0_CosStream.Streamable._d_internalize_from_stream}
    _omni_op_d.update(_0_CosObjectIdentity__POA.IdentifiableObject._omni_op_d)

Streamable._omni_skeleton = Streamable
_0_CosStream__POA.Streamable = Streamable
omniORB.registerSkeleton(Streamable._NP_RepositoryId, Streamable)
del Streamable
__name__ = "CosStream"

# interface StreamableFactory
_0_CosStream._d_StreamableFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/StreamableFactory:1.0", "StreamableFactory")
omniORB.typeMapping["IDL:omg.org/CosStream/StreamableFactory:1.0"] = _0_CosStream._d_StreamableFactory
_0_CosStream.StreamableFactory = omniORB.newEmptyClass()
class StreamableFactory :
    _NP_RepositoryId = _0_CosStream._d_StreamableFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.StreamableFactory = StreamableFactory
_0_CosStream._tc_StreamableFactory = omniORB.tcInternal.createTypeCode(_0_CosStream._d_StreamableFactory)
omniORB.registerType(StreamableFactory._NP_RepositoryId, _0_CosStream._d_StreamableFactory, _0_CosStream._tc_StreamableFactory)

# StreamableFactory operations and attributes
StreamableFactory._d_create_uninitialized = ((), (omniORB.typeMapping["IDL:omg.org/CosStream/Streamable:1.0"], ), None)

# StreamableFactory object reference
class _objref_StreamableFactory (CORBA.Object):
    _NP_RepositoryId = StreamableFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def create_uninitialized(self, *args):
        return self._obj.invoke("create_uninitialized", _0_CosStream.StreamableFactory._d_create_uninitialized, args)

omniORB.registerObjref(StreamableFactory._NP_RepositoryId, _objref_StreamableFactory)
_0_CosStream._objref_StreamableFactory = _objref_StreamableFactory
del StreamableFactory, _objref_StreamableFactory

# StreamableFactory skeleton
__name__ = "CosStream__POA"
class StreamableFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_CosStream.StreamableFactory._NP_RepositoryId


    _omni_op_d = {"create_uninitialized": _0_CosStream.StreamableFactory._d_create_uninitialized}

StreamableFactory._omni_skeleton = StreamableFactory
_0_CosStream__POA.StreamableFactory = StreamableFactory
omniORB.registerSkeleton(StreamableFactory._NP_RepositoryId, StreamableFactory)
del StreamableFactory
__name__ = "CosStream"

# interface StreamIO
_0_CosStream._d_StreamIO = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/StreamIO:1.0", "StreamIO")
omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"] = _0_CosStream._d_StreamIO
_0_CosStream.StreamIO = omniORB.newEmptyClass()
class StreamIO :
    _NP_RepositoryId = _0_CosStream._d_StreamIO[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.StreamIO = StreamIO
_0_CosStream._tc_StreamIO = omniORB.tcInternal.createTypeCode(_0_CosStream._d_StreamIO)
omniORB.registerType(StreamIO._NP_RepositoryId, _0_CosStream._d_StreamIO, _0_CosStream._tc_StreamIO)

# StreamIO operations and attributes
StreamIO._d_write_string = (((omniORB.tcInternal.tv_string,0), ), (), None)
StreamIO._d_write_char = ((omniORB.tcInternal.tv_char, ), (), None)
StreamIO._d_write_octet = ((omniORB.tcInternal.tv_octet, ), (), None)
StreamIO._d_write_unsigned_long = ((omniORB.tcInternal.tv_ulong, ), (), None)
StreamIO._d_write_unsigned_short = ((omniORB.tcInternal.tv_ushort, ), (), None)
StreamIO._d_write_long = ((omniORB.tcInternal.tv_long, ), (), None)
StreamIO._d_write_short = ((omniORB.tcInternal.tv_short, ), (), None)
StreamIO._d_write_float = ((omniORB.tcInternal.tv_float, ), (), None)
StreamIO._d_write_double = ((omniORB.tcInternal.tv_double, ), (), None)
StreamIO._d_write_boolean = ((omniORB.tcInternal.tv_boolean, ), (), None)
StreamIO._d_write_object = ((omniORB.typeMapping["IDL:omg.org/CosStream/Streamable:1.0"], ), (), None)
StreamIO._d_write_graph = ((omniORB.typeMapping["IDL:omg.org/CosStream/Node:1.0"], ), (), None)
StreamIO._d_read_string = ((), ((omniORB.tcInternal.tv_string,0), ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_char = ((), (omniORB.tcInternal.tv_char, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_octet = ((), (omniORB.tcInternal.tv_octet, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_unsigned_long = ((), (omniORB.tcInternal.tv_ulong, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_unsigned_short = ((), (omniORB.tcInternal.tv_ushort, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_long = ((), (omniORB.tcInternal.tv_long, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_short = ((), (omniORB.tcInternal.tv_short, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_float = ((), (omniORB.tcInternal.tv_float, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_double = ((), (omniORB.tcInternal.tv_double, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_boolean = ((), (omniORB.tcInternal.tv_boolean, ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_object = ((omniORB.typeMapping["IDL:omg.org/CosLifeCycle/FactoryFinder:1.0"], omniORB.typeMapping["IDL:omg.org/CosStream/Streamable:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosStream/Streamable:1.0"], ), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})
StreamIO._d_read_graph = ((omniORB.typeMapping["IDL:omg.org/CosStream/Node:1.0"], omniORB.typeMapping["IDL:omg.org/CosLifeCycle/FactoryFinder:1.0"]), (), {_0_CosStream.StreamDataFormatError._NP_RepositoryId: _0_CosStream._d_StreamDataFormatError})

# StreamIO object reference
class _objref_StreamIO (CORBA.Object):
    _NP_RepositoryId = StreamIO._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def write_string(self, *args):
        return self._obj.invoke("write_string", _0_CosStream.StreamIO._d_write_string, args)

    def write_char(self, *args):
        return self._obj.invoke("write_char", _0_CosStream.StreamIO._d_write_char, args)

    def write_octet(self, *args):
        return self._obj.invoke("write_octet", _0_CosStream.StreamIO._d_write_octet, args)

    def write_unsigned_long(self, *args):
        return self._obj.invoke("write_unsigned_long", _0_CosStream.StreamIO._d_write_unsigned_long, args)

    def write_unsigned_short(self, *args):
        return self._obj.invoke("write_unsigned_short", _0_CosStream.StreamIO._d_write_unsigned_short, args)

    def write_long(self, *args):
        return self._obj.invoke("write_long", _0_CosStream.StreamIO._d_write_long, args)

    def write_short(self, *args):
        return self._obj.invoke("write_short", _0_CosStream.StreamIO._d_write_short, args)

    def write_float(self, *args):
        return self._obj.invoke("write_float", _0_CosStream.StreamIO._d_write_float, args)

    def write_double(self, *args):
        return self._obj.invoke("write_double", _0_CosStream.StreamIO._d_write_double, args)

    def write_boolean(self, *args):
        return self._obj.invoke("write_boolean", _0_CosStream.StreamIO._d_write_boolean, args)

    def write_object(self, *args):
        return self._obj.invoke("write_object", _0_CosStream.StreamIO._d_write_object, args)

    def write_graph(self, *args):
        return self._obj.invoke("write_graph", _0_CosStream.StreamIO._d_write_graph, args)

    def read_string(self, *args):
        return self._obj.invoke("read_string", _0_CosStream.StreamIO._d_read_string, args)

    def read_char(self, *args):
        return self._obj.invoke("read_char", _0_CosStream.StreamIO._d_read_char, args)

    def read_octet(self, *args):
        return self._obj.invoke("read_octet", _0_CosStream.StreamIO._d_read_octet, args)

    def read_unsigned_long(self, *args):
        return self._obj.invoke("read_unsigned_long", _0_CosStream.StreamIO._d_read_unsigned_long, args)

    def read_unsigned_short(self, *args):
        return self._obj.invoke("read_unsigned_short", _0_CosStream.StreamIO._d_read_unsigned_short, args)

    def read_long(self, *args):
        return self._obj.invoke("read_long", _0_CosStream.StreamIO._d_read_long, args)

    def read_short(self, *args):
        return self._obj.invoke("read_short", _0_CosStream.StreamIO._d_read_short, args)

    def read_float(self, *args):
        return self._obj.invoke("read_float", _0_CosStream.StreamIO._d_read_float, args)

    def read_double(self, *args):
        return self._obj.invoke("read_double", _0_CosStream.StreamIO._d_read_double, args)

    def read_boolean(self, *args):
        return self._obj.invoke("read_boolean", _0_CosStream.StreamIO._d_read_boolean, args)

    def read_object(self, *args):
        return self._obj.invoke("read_object", _0_CosStream.StreamIO._d_read_object, args)

    def read_graph(self, *args):
        return self._obj.invoke("read_graph", _0_CosStream.StreamIO._d_read_graph, args)

omniORB.registerObjref(StreamIO._NP_RepositoryId, _objref_StreamIO)
_0_CosStream._objref_StreamIO = _objref_StreamIO
del StreamIO, _objref_StreamIO

# StreamIO skeleton
__name__ = "CosStream__POA"
class StreamIO (PortableServer.Servant):
    _NP_RepositoryId = _0_CosStream.StreamIO._NP_RepositoryId


    _omni_op_d = {"write_string": _0_CosStream.StreamIO._d_write_string, "write_char": _0_CosStream.StreamIO._d_write_char, "write_octet": _0_CosStream.StreamIO._d_write_octet, "write_unsigned_long": _0_CosStream.StreamIO._d_write_unsigned_long, "write_unsigned_short": _0_CosStream.StreamIO._d_write_unsigned_short, "write_long": _0_CosStream.StreamIO._d_write_long, "write_short": _0_CosStream.StreamIO._d_write_short, "write_float": _0_CosStream.StreamIO._d_write_float, "write_double": _0_CosStream.StreamIO._d_write_double, "write_boolean": _0_CosStream.StreamIO._d_write_boolean, "write_object": _0_CosStream.StreamIO._d_write_object, "write_graph": _0_CosStream.StreamIO._d_write_graph, "read_string": _0_CosStream.StreamIO._d_read_string, "read_char": _0_CosStream.StreamIO._d_read_char, "read_octet": _0_CosStream.StreamIO._d_read_octet, "read_unsigned_long": _0_CosStream.StreamIO._d_read_unsigned_long, "read_unsigned_short": _0_CosStream.StreamIO._d_read_unsigned_short, "read_long": _0_CosStream.StreamIO._d_read_long, "read_short": _0_CosStream.StreamIO._d_read_short, "read_float": _0_CosStream.StreamIO._d_read_float, "read_double": _0_CosStream.StreamIO._d_read_double, "read_boolean": _0_CosStream.StreamIO._d_read_boolean, "read_object": _0_CosStream.StreamIO._d_read_object, "read_graph": _0_CosStream.StreamIO._d_read_graph}

StreamIO._omni_skeleton = StreamIO
_0_CosStream__POA.StreamIO = StreamIO
omniORB.registerSkeleton(StreamIO._NP_RepositoryId, StreamIO)
del StreamIO
__name__ = "CosStream"

# struct RelationshipHandle
_0_CosStream.RelationshipHandle = omniORB.newEmptyClass()
class RelationshipHandle (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosStream/RelationshipHandle:1.0"

    def __init__(self, theRelationship, constantRandomId):
        self.theRelationship = theRelationship
        self.constantRandomId = constantRandomId

_0_CosStream.RelationshipHandle = RelationshipHandle
_0_CosStream._d_RelationshipHandle  = (omniORB.tcInternal.tv_struct, RelationshipHandle, RelationshipHandle._NP_RepositoryId, "RelationshipHandle", "theRelationship", omniORB.typeMapping["IDL:omg.org/CosRelationships/Relationship:1.0"], "constantRandomId", omniORB.typeMapping["IDL:omg.org/CosObjectIdentity/ObjectIdentifier:1.0"])
_0_CosStream._tc_RelationshipHandle = omniORB.tcInternal.createTypeCode(_0_CosStream._d_RelationshipHandle)
omniORB.registerType(RelationshipHandle._NP_RepositoryId, _0_CosStream._d_RelationshipHandle, _0_CosStream._tc_RelationshipHandle)
del RelationshipHandle

# interface Node
_0_CosStream._d_Node = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Node:1.0", "Node")
omniORB.typeMapping["IDL:omg.org/CosStream/Node:1.0"] = _0_CosStream._d_Node
_0_CosStream.Node = omniORB.newEmptyClass()
class Node (_0_CosGraphs.Node, _0_CosStream.Streamable):
    _NP_RepositoryId = _0_CosStream._d_Node[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.Node = Node
_0_CosStream._tc_Node = omniORB.tcInternal.createTypeCode(_0_CosStream._d_Node)
omniORB.registerType(Node._NP_RepositoryId, _0_CosStream._d_Node, _0_CosStream._tc_Node)

# Node operations and attributes
Node._d_externalize_node = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], ), (), None)
Node._d_internalize_node = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], omniORB.typeMapping["IDL:omg.org/CosLifeCycle/FactoryFinder:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosGraphs/Node/Roles:1.0"], ), {_0_CosLifeCycle.NoFactory._NP_RepositoryId: _0_CosLifeCycle._d_NoFactory})

# Node object reference
class _objref_Node (_0_CosGraphs._objref_Node, _0_CosStream._objref_Streamable):
    _NP_RepositoryId = Node._NP_RepositoryId

    def __init__(self, obj):
        _0_CosGraphs._objref_Node.__init__(self, obj)
        _0_CosStream._objref_Streamable.__init__(self, obj)

    def externalize_node(self, *args):
        return self._obj.invoke("externalize_node", _0_CosStream.Node._d_externalize_node, args)

    def internalize_node(self, *args):
        return self._obj.invoke("internalize_node", _0_CosStream.Node._d_internalize_node, args)

omniORB.registerObjref(Node._NP_RepositoryId, _objref_Node)
_0_CosStream._objref_Node = _objref_Node
del Node, _objref_Node

# Node skeleton
__name__ = "CosStream__POA"
class Node (_0_CosGraphs__POA.Node, _0_CosStream__POA.Streamable):
    _NP_RepositoryId = _0_CosStream.Node._NP_RepositoryId


    _omni_op_d = {"externalize_node": _0_CosStream.Node._d_externalize_node, "internalize_node": _0_CosStream.Node._d_internalize_node}
    _omni_op_d.update(_0_CosGraphs__POA.Node._omni_op_d)
    _omni_op_d.update(_0_CosStream__POA.Streamable._omni_op_d)

Node._omni_skeleton = Node
_0_CosStream__POA.Node = Node
omniORB.registerSkeleton(Node._NP_RepositoryId, Node)
del Node
__name__ = "CosStream"

# interface Role
_0_CosStream._d_Role = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Role:1.0", "Role")
omniORB.typeMapping["IDL:omg.org/CosStream/Role:1.0"] = _0_CosStream._d_Role
_0_CosStream.Role = omniORB.newEmptyClass()
class Role (_0_CosGraphs.Role):
    _NP_RepositoryId = _0_CosStream._d_Role[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.Role = Role
_0_CosStream._tc_Role = omniORB.tcInternal.createTypeCode(_0_CosStream._d_Role)
omniORB.registerType(Role._NP_RepositoryId, _0_CosStream._d_Role, _0_CosStream._tc_Role)

# Role operations and attributes
Role._d_externalize_role = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], ), (), None)
Role._d_internalize_role = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], ), (), None)
Role._d_externalize_propagation = ((omniORB.typeMapping["IDL:omg.org/CosStream/RelationshipHandle:1.0"], omniORB.typeMapping["IDL:omg.org/CosRelationships/RoleName:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosGraphs/PropagationValue:1.0"], omniORB.tcInternal.tv_boolean), None)

# Role object reference
class _objref_Role (_0_CosGraphs._objref_Role):
    _NP_RepositoryId = Role._NP_RepositoryId

    def __init__(self, obj):
        _0_CosGraphs._objref_Role.__init__(self, obj)

    def externalize_role(self, *args):
        return self._obj.invoke("externalize_role", _0_CosStream.Role._d_externalize_role, args)

    def internalize_role(self, *args):
        return self._obj.invoke("internalize_role", _0_CosStream.Role._d_internalize_role, args)

    def externalize_propagation(self, *args):
        return self._obj.invoke("externalize_propagation", _0_CosStream.Role._d_externalize_propagation, args)

omniORB.registerObjref(Role._NP_RepositoryId, _objref_Role)
_0_CosStream._objref_Role = _objref_Role
del Role, _objref_Role

# Role skeleton
__name__ = "CosStream__POA"
class Role (_0_CosGraphs__POA.Role):
    _NP_RepositoryId = _0_CosStream.Role._NP_RepositoryId


    _omni_op_d = {"externalize_role": _0_CosStream.Role._d_externalize_role, "internalize_role": _0_CosStream.Role._d_internalize_role, "externalize_propagation": _0_CosStream.Role._d_externalize_propagation}
    _omni_op_d.update(_0_CosGraphs__POA.Role._omni_op_d)

Role._omni_skeleton = Role
_0_CosStream__POA.Role = Role
omniORB.registerSkeleton(Role._NP_RepositoryId, Role)
del Role
__name__ = "CosStream"

# interface Relationship
_0_CosStream._d_Relationship = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/Relationship:1.0", "Relationship")
omniORB.typeMapping["IDL:omg.org/CosStream/Relationship:1.0"] = _0_CosStream._d_Relationship
_0_CosStream.Relationship = omniORB.newEmptyClass()
class Relationship (_0_CosRelationships.Relationship):
    _NP_RepositoryId = _0_CosStream._d_Relationship[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.Relationship = Relationship
_0_CosStream._tc_Relationship = omniORB.tcInternal.createTypeCode(_0_CosStream._d_Relationship)
omniORB.registerType(Relationship._NP_RepositoryId, _0_CosStream._d_Relationship, _0_CosStream._tc_Relationship)

# Relationship operations and attributes
Relationship._d_externalize_relationship = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], ), (), None)
Relationship._d_internalize_relationship = ((omniORB.typeMapping["IDL:omg.org/CosStream/StreamIO:1.0"], omniORB.typeMapping["IDL:omg.org/CosGraphs/NamedRoles:1.0"]), (), None)
Relationship._d_externalize_propagation = ((omniORB.typeMapping["IDL:omg.org/CosRelationships/RoleName:1.0"], omniORB.typeMapping["IDL:omg.org/CosRelationships/RoleName:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosGraphs/PropagationValue:1.0"], omniORB.tcInternal.tv_boolean), None)

# Relationship object reference
class _objref_Relationship (_0_CosRelationships._objref_Relationship):
    _NP_RepositoryId = Relationship._NP_RepositoryId

    def __init__(self, obj):
        _0_CosRelationships._objref_Relationship.__init__(self, obj)

    def externalize_relationship(self, *args):
        return self._obj.invoke("externalize_relationship", _0_CosStream.Relationship._d_externalize_relationship, args)

    def internalize_relationship(self, *args):
        return self._obj.invoke("internalize_relationship", _0_CosStream.Relationship._d_internalize_relationship, args)

    def externalize_propagation(self, *args):
        return self._obj.invoke("externalize_propagation", _0_CosStream.Relationship._d_externalize_propagation, args)

omniORB.registerObjref(Relationship._NP_RepositoryId, _objref_Relationship)
_0_CosStream._objref_Relationship = _objref_Relationship
del Relationship, _objref_Relationship

# Relationship skeleton
__name__ = "CosStream__POA"
class Relationship (_0_CosRelationships__POA.Relationship):
    _NP_RepositoryId = _0_CosStream.Relationship._NP_RepositoryId


    _omni_op_d = {"externalize_relationship": _0_CosStream.Relationship._d_externalize_relationship, "internalize_relationship": _0_CosStream.Relationship._d_internalize_relationship, "externalize_propagation": _0_CosStream.Relationship._d_externalize_propagation}
    _omni_op_d.update(_0_CosRelationships__POA.Relationship._omni_op_d)

Relationship._omni_skeleton = Relationship
_0_CosStream__POA.Relationship = Relationship
omniORB.registerSkeleton(Relationship._NP_RepositoryId, Relationship)
del Relationship
__name__ = "CosStream"

# interface PropagationCriteriaFactory
_0_CosStream._d_PropagationCriteriaFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosStream/PropagationCriteriaFactory:1.0", "PropagationCriteriaFactory")
omniORB.typeMapping["IDL:omg.org/CosStream/PropagationCriteriaFactory:1.0"] = _0_CosStream._d_PropagationCriteriaFactory
_0_CosStream.PropagationCriteriaFactory = omniORB.newEmptyClass()
class PropagationCriteriaFactory :
    _NP_RepositoryId = _0_CosStream._d_PropagationCriteriaFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosStream.PropagationCriteriaFactory = PropagationCriteriaFactory
_0_CosStream._tc_PropagationCriteriaFactory = omniORB.tcInternal.createTypeCode(_0_CosStream._d_PropagationCriteriaFactory)
omniORB.registerType(PropagationCriteriaFactory._NP_RepositoryId, _0_CosStream._d_PropagationCriteriaFactory, _0_CosStream._tc_PropagationCriteriaFactory)

# PropagationCriteriaFactory operations and attributes
PropagationCriteriaFactory._d_create_for_externalize = ((), (omniORB.typeMapping["IDL:omg.org/CosGraphs/TraversalCriteria:1.0"], ), None)

# PropagationCriteriaFactory object reference
class _objref_PropagationCriteriaFactory (CORBA.Object):
    _NP_RepositoryId = PropagationCriteriaFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def create_for_externalize(self, *args):
        return self._obj.invoke("create_for_externalize", _0_CosStream.PropagationCriteriaFactory._d_create_for_externalize, args)

omniORB.registerObjref(PropagationCriteriaFactory._NP_RepositoryId, _objref_PropagationCriteriaFactory)
_0_CosStream._objref_PropagationCriteriaFactory = _objref_PropagationCriteriaFactory
del PropagationCriteriaFactory, _objref_PropagationCriteriaFactory

# PropagationCriteriaFactory skeleton
__name__ = "CosStream__POA"
class PropagationCriteriaFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_CosStream.PropagationCriteriaFactory._NP_RepositoryId


    _omni_op_d = {"create_for_externalize": _0_CosStream.PropagationCriteriaFactory._d_create_for_externalize}

PropagationCriteriaFactory._omni_skeleton = PropagationCriteriaFactory
_0_CosStream__POA.PropagationCriteriaFactory = PropagationCriteriaFactory
omniORB.registerSkeleton(PropagationCriteriaFactory._NP_RepositoryId, PropagationCriteriaFactory)
del PropagationCriteriaFactory
__name__ = "CosStream"

#
# End of module "CosStream"
#
__name__ = "CosStream_idl"

_exported_modules = ( "CosStream", )

# The end.
