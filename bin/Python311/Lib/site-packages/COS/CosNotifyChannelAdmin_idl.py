# Python stubs generated by omniidl from ..\..\..\..\..\idl\COS\CosNotifyChannelAdmin.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "CosNotification.idl"
import CosNotification_idl
_0_CosNotification = omniORB.openModule("CosNotification")
_0_CosNotification__POA = omniORB.openModule("CosNotification__POA")

# #include "CosEventComm.idl"
import CosEventComm_idl
_0_CosEventComm = omniORB.openModule("CosEventComm")
_0_CosEventComm__POA = omniORB.openModule("CosEventComm__POA")

# #include "CosNotifyComm.idl"
import CosNotifyComm_idl
_0_CosNotifyComm = omniORB.openModule("CosNotifyComm")
_0_CosNotifyComm__POA = omniORB.openModule("CosNotifyComm__POA")

# #include "CosNotifyFilter.idl"
import CosNotifyFilter_idl
_0_CosNotifyFilter = omniORB.openModule("CosNotifyFilter")
_0_CosNotifyFilter__POA = omniORB.openModule("CosNotifyFilter__POA")

# #include "CosEventChannelAdmin.idl"
import CosEventChannelAdmin_idl
_0_CosEventChannelAdmin = omniORB.openModule("CosEventChannelAdmin")
_0_CosEventChannelAdmin__POA = omniORB.openModule("CosEventChannelAdmin__POA")

#
# Start of module "CosNotifyChannelAdmin"
#
__name__ = "CosNotifyChannelAdmin"
_0_CosNotifyChannelAdmin = omniORB.openModule("CosNotifyChannelAdmin", r"..\..\..\..\..\idl\COS\CosNotifyChannelAdmin.idl")
_0_CosNotifyChannelAdmin__POA = omniORB.openModule("CosNotifyChannelAdmin__POA", r"..\..\..\..\..\idl\COS\CosNotifyChannelAdmin.idl")


# exception ConnectionAlreadyActive
_0_CosNotifyChannelAdmin.ConnectionAlreadyActive = omniORB.newEmptyClass()
class ConnectionAlreadyActive (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ConnectionAlreadyActive:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosNotifyChannelAdmin.ConnectionAlreadyActive = ConnectionAlreadyActive
_0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive  = (omniORB.tcInternal.tv_except, ConnectionAlreadyActive, ConnectionAlreadyActive._NP_RepositoryId, "ConnectionAlreadyActive")
_0_CosNotifyChannelAdmin._tc_ConnectionAlreadyActive = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive)
omniORB.registerType(ConnectionAlreadyActive._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin._tc_ConnectionAlreadyActive)
del ConnectionAlreadyActive

# exception ConnectionAlreadyInactive
_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive = omniORB.newEmptyClass()
class ConnectionAlreadyInactive (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ConnectionAlreadyInactive:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive = ConnectionAlreadyInactive
_0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive  = (omniORB.tcInternal.tv_except, ConnectionAlreadyInactive, ConnectionAlreadyInactive._NP_RepositoryId, "ConnectionAlreadyInactive")
_0_CosNotifyChannelAdmin._tc_ConnectionAlreadyInactive = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive)
omniORB.registerType(ConnectionAlreadyInactive._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin._tc_ConnectionAlreadyInactive)
del ConnectionAlreadyInactive

# exception NotConnected
_0_CosNotifyChannelAdmin.NotConnected = omniORB.newEmptyClass()
class NotConnected (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/NotConnected:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosNotifyChannelAdmin.NotConnected = NotConnected
_0_CosNotifyChannelAdmin._d_NotConnected  = (omniORB.tcInternal.tv_except, NotConnected, NotConnected._NP_RepositoryId, "NotConnected")
_0_CosNotifyChannelAdmin._tc_NotConnected = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_NotConnected)
omniORB.registerType(NotConnected._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_NotConnected, _0_CosNotifyChannelAdmin._tc_NotConnected)
del NotConnected

# forward interface ConsumerAdmin;
_0_CosNotifyChannelAdmin._d_ConsumerAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0", "ConsumerAdmin")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0"] = _0_CosNotifyChannelAdmin._d_ConsumerAdmin

# forward interface SupplierAdmin;
_0_CosNotifyChannelAdmin._d_SupplierAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0", "SupplierAdmin")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0"] = _0_CosNotifyChannelAdmin._d_SupplierAdmin

# forward interface EventChannel;
_0_CosNotifyChannelAdmin._d_EventChannel = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0", "EventChannel")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"] = _0_CosNotifyChannelAdmin._d_EventChannel

# forward interface EventChannelFactory;
_0_CosNotifyChannelAdmin._d_EventChannelFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/EventChannelFactory:1.0", "EventChannelFactory")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannelFactory:1.0"] = _0_CosNotifyChannelAdmin._d_EventChannelFactory

# enum ProxyType
_0_CosNotifyChannelAdmin.PUSH_ANY = omniORB.EnumItem("PUSH_ANY", 0)
_0_CosNotifyChannelAdmin.PULL_ANY = omniORB.EnumItem("PULL_ANY", 1)
_0_CosNotifyChannelAdmin.PUSH_STRUCTURED = omniORB.EnumItem("PUSH_STRUCTURED", 2)
_0_CosNotifyChannelAdmin.PULL_STRUCTURED = omniORB.EnumItem("PULL_STRUCTURED", 3)
_0_CosNotifyChannelAdmin.PUSH_SEQUENCE = omniORB.EnumItem("PUSH_SEQUENCE", 4)
_0_CosNotifyChannelAdmin.PULL_SEQUENCE = omniORB.EnumItem("PULL_SEQUENCE", 5)
_0_CosNotifyChannelAdmin.PUSH_TYPED = omniORB.EnumItem("PUSH_TYPED", 6)
_0_CosNotifyChannelAdmin.PULL_TYPED = omniORB.EnumItem("PULL_TYPED", 7)
_0_CosNotifyChannelAdmin.ProxyType = omniORB.Enum("IDL:omg.org/CosNotifyChannelAdmin/ProxyType:1.0", (_0_CosNotifyChannelAdmin.PUSH_ANY, _0_CosNotifyChannelAdmin.PULL_ANY, _0_CosNotifyChannelAdmin.PUSH_STRUCTURED, _0_CosNotifyChannelAdmin.PULL_STRUCTURED, _0_CosNotifyChannelAdmin.PUSH_SEQUENCE, _0_CosNotifyChannelAdmin.PULL_SEQUENCE, _0_CosNotifyChannelAdmin.PUSH_TYPED, _0_CosNotifyChannelAdmin.PULL_TYPED,))

_0_CosNotifyChannelAdmin._d_ProxyType  = (omniORB.tcInternal.tv_enum, _0_CosNotifyChannelAdmin.ProxyType._NP_RepositoryId, "ProxyType", _0_CosNotifyChannelAdmin.ProxyType._items)
_0_CosNotifyChannelAdmin._tc_ProxyType = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyType)
omniORB.registerType(_0_CosNotifyChannelAdmin.ProxyType._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyType, _0_CosNotifyChannelAdmin._tc_ProxyType)

# enum ObtainInfoMode
_0_CosNotifyChannelAdmin.ALL_NOW_UPDATES_OFF = omniORB.EnumItem("ALL_NOW_UPDATES_OFF", 0)
_0_CosNotifyChannelAdmin.ALL_NOW_UPDATES_ON = omniORB.EnumItem("ALL_NOW_UPDATES_ON", 1)
_0_CosNotifyChannelAdmin.NONE_NOW_UPDATES_OFF = omniORB.EnumItem("NONE_NOW_UPDATES_OFF", 2)
_0_CosNotifyChannelAdmin.NONE_NOW_UPDATES_ON = omniORB.EnumItem("NONE_NOW_UPDATES_ON", 3)
_0_CosNotifyChannelAdmin.ObtainInfoMode = omniORB.Enum("IDL:omg.org/CosNotifyChannelAdmin/ObtainInfoMode:1.0", (_0_CosNotifyChannelAdmin.ALL_NOW_UPDATES_OFF, _0_CosNotifyChannelAdmin.ALL_NOW_UPDATES_ON, _0_CosNotifyChannelAdmin.NONE_NOW_UPDATES_OFF, _0_CosNotifyChannelAdmin.NONE_NOW_UPDATES_ON,))

_0_CosNotifyChannelAdmin._d_ObtainInfoMode  = (omniORB.tcInternal.tv_enum, _0_CosNotifyChannelAdmin.ObtainInfoMode._NP_RepositoryId, "ObtainInfoMode", _0_CosNotifyChannelAdmin.ObtainInfoMode._items)
_0_CosNotifyChannelAdmin._tc_ObtainInfoMode = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ObtainInfoMode)
omniORB.registerType(_0_CosNotifyChannelAdmin.ObtainInfoMode._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ObtainInfoMode, _0_CosNotifyChannelAdmin._tc_ObtainInfoMode)

# interface ProxyConsumer
_0_CosNotifyChannelAdmin._d_ProxyConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ProxyConsumer:1.0", "ProxyConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_ProxyConsumer
_0_CosNotifyChannelAdmin.ProxyConsumer = omniORB.newEmptyClass()
class ProxyConsumer (_0_CosNotification.QoSAdmin, _0_CosNotifyFilter.FilterAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ProxyConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ProxyConsumer = ProxyConsumer
_0_CosNotifyChannelAdmin._tc_ProxyConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyConsumer)
omniORB.registerType(ProxyConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyConsumer, _0_CosNotifyChannelAdmin._tc_ProxyConsumer)

# ProxyConsumer operations and attributes
ProxyConsumer._d__get_MyType = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyType:1.0"],),None)
ProxyConsumer._d__get_MyAdmin = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0"],),None)
ProxyConsumer._d_obtain_subscription_types = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ObtainInfoMode:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotification/EventTypeSeq:1.0"], ), None)
ProxyConsumer._d_validate_event_qos = ((omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotification/NamedPropertyRangeSeq:1.0"], ), {_0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS})

# ProxyConsumer object reference
class _objref_ProxyConsumer (_0_CosNotification._objref_QoSAdmin, _0_CosNotifyFilter._objref_FilterAdmin):
    _NP_RepositoryId = ProxyConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotification._objref_QoSAdmin.__init__(self, obj)
        _0_CosNotifyFilter._objref_FilterAdmin.__init__(self, obj)

    def _get_MyType(self, *args):
        return self._obj.invoke("_get_MyType", _0_CosNotifyChannelAdmin.ProxyConsumer._d__get_MyType, args)

    MyType = property(_get_MyType)


    def _get_MyAdmin(self, *args):
        return self._obj.invoke("_get_MyAdmin", _0_CosNotifyChannelAdmin.ProxyConsumer._d__get_MyAdmin, args)

    MyAdmin = property(_get_MyAdmin)


    def obtain_subscription_types(self, *args):
        return self._obj.invoke("obtain_subscription_types", _0_CosNotifyChannelAdmin.ProxyConsumer._d_obtain_subscription_types, args)

    def validate_event_qos(self, *args):
        return self._obj.invoke("validate_event_qos", _0_CosNotifyChannelAdmin.ProxyConsumer._d_validate_event_qos, args)

omniORB.registerObjref(ProxyConsumer._NP_RepositoryId, _objref_ProxyConsumer)
_0_CosNotifyChannelAdmin._objref_ProxyConsumer = _objref_ProxyConsumer
del ProxyConsumer, _objref_ProxyConsumer

# ProxyConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ProxyConsumer (_0_CosNotification__POA.QoSAdmin, _0_CosNotifyFilter__POA.FilterAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ProxyConsumer._NP_RepositoryId


    _omni_op_d = {"_get_MyType": _0_CosNotifyChannelAdmin.ProxyConsumer._d__get_MyType, "_get_MyAdmin": _0_CosNotifyChannelAdmin.ProxyConsumer._d__get_MyAdmin, "obtain_subscription_types": _0_CosNotifyChannelAdmin.ProxyConsumer._d_obtain_subscription_types, "validate_event_qos": _0_CosNotifyChannelAdmin.ProxyConsumer._d_validate_event_qos}
    _omni_op_d.update(_0_CosNotification__POA.QoSAdmin._omni_op_d)
    _omni_op_d.update(_0_CosNotifyFilter__POA.FilterAdmin._omni_op_d)

ProxyConsumer._omni_skeleton = ProxyConsumer
_0_CosNotifyChannelAdmin__POA.ProxyConsumer = ProxyConsumer
omniORB.registerSkeleton(ProxyConsumer._NP_RepositoryId, ProxyConsumer)
del ProxyConsumer
__name__ = "CosNotifyChannelAdmin"

# interface ProxySupplier
_0_CosNotifyChannelAdmin._d_ProxySupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ProxySupplier:1.0", "ProxySupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxySupplier:1.0"] = _0_CosNotifyChannelAdmin._d_ProxySupplier
_0_CosNotifyChannelAdmin.ProxySupplier = omniORB.newEmptyClass()
class ProxySupplier (_0_CosNotification.QoSAdmin, _0_CosNotifyFilter.FilterAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ProxySupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ProxySupplier = ProxySupplier
_0_CosNotifyChannelAdmin._tc_ProxySupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxySupplier)
omniORB.registerType(ProxySupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxySupplier, _0_CosNotifyChannelAdmin._tc_ProxySupplier)

# ProxySupplier operations and attributes
ProxySupplier._d__get_MyType = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyType:1.0"],),None)
ProxySupplier._d__get_MyAdmin = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0"],),None)
ProxySupplier._d__get_priority_filter = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),None)
ProxySupplier._d__set_priority_filter = ((omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),(),None)
ProxySupplier._d__get_lifetime_filter = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),None)
ProxySupplier._d__set_lifetime_filter = ((omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),(),None)
ProxySupplier._d_obtain_offered_types = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ObtainInfoMode:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotification/EventTypeSeq:1.0"], ), None)
ProxySupplier._d_validate_event_qos = ((omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotification/NamedPropertyRangeSeq:1.0"], ), {_0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS})

# ProxySupplier object reference
class _objref_ProxySupplier (_0_CosNotification._objref_QoSAdmin, _0_CosNotifyFilter._objref_FilterAdmin):
    _NP_RepositoryId = ProxySupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotification._objref_QoSAdmin.__init__(self, obj)
        _0_CosNotifyFilter._objref_FilterAdmin.__init__(self, obj)

    def _get_MyType(self, *args):
        return self._obj.invoke("_get_MyType", _0_CosNotifyChannelAdmin.ProxySupplier._d__get_MyType, args)

    MyType = property(_get_MyType)


    def _get_MyAdmin(self, *args):
        return self._obj.invoke("_get_MyAdmin", _0_CosNotifyChannelAdmin.ProxySupplier._d__get_MyAdmin, args)

    MyAdmin = property(_get_MyAdmin)


    def _get_priority_filter(self, *args):
        return self._obj.invoke("_get_priority_filter", _0_CosNotifyChannelAdmin.ProxySupplier._d__get_priority_filter, args)

    def _set_priority_filter(self, *args):
        return self._obj.invoke("_set_priority_filter", _0_CosNotifyChannelAdmin.ProxySupplier._d__set_priority_filter, args)

    priority_filter = property(_get_priority_filter, _set_priority_filter)


    def _get_lifetime_filter(self, *args):
        return self._obj.invoke("_get_lifetime_filter", _0_CosNotifyChannelAdmin.ProxySupplier._d__get_lifetime_filter, args)

    def _set_lifetime_filter(self, *args):
        return self._obj.invoke("_set_lifetime_filter", _0_CosNotifyChannelAdmin.ProxySupplier._d__set_lifetime_filter, args)

    lifetime_filter = property(_get_lifetime_filter, _set_lifetime_filter)


    def obtain_offered_types(self, *args):
        return self._obj.invoke("obtain_offered_types", _0_CosNotifyChannelAdmin.ProxySupplier._d_obtain_offered_types, args)

    def validate_event_qos(self, *args):
        return self._obj.invoke("validate_event_qos", _0_CosNotifyChannelAdmin.ProxySupplier._d_validate_event_qos, args)

omniORB.registerObjref(ProxySupplier._NP_RepositoryId, _objref_ProxySupplier)
_0_CosNotifyChannelAdmin._objref_ProxySupplier = _objref_ProxySupplier
del ProxySupplier, _objref_ProxySupplier

# ProxySupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ProxySupplier (_0_CosNotification__POA.QoSAdmin, _0_CosNotifyFilter__POA.FilterAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ProxySupplier._NP_RepositoryId


    _omni_op_d = {"_get_MyType": _0_CosNotifyChannelAdmin.ProxySupplier._d__get_MyType, "_get_MyAdmin": _0_CosNotifyChannelAdmin.ProxySupplier._d__get_MyAdmin, "_get_priority_filter": _0_CosNotifyChannelAdmin.ProxySupplier._d__get_priority_filter, "_set_priority_filter": _0_CosNotifyChannelAdmin.ProxySupplier._d__set_priority_filter, "_get_lifetime_filter": _0_CosNotifyChannelAdmin.ProxySupplier._d__get_lifetime_filter, "_set_lifetime_filter": _0_CosNotifyChannelAdmin.ProxySupplier._d__set_lifetime_filter, "obtain_offered_types": _0_CosNotifyChannelAdmin.ProxySupplier._d_obtain_offered_types, "validate_event_qos": _0_CosNotifyChannelAdmin.ProxySupplier._d_validate_event_qos}
    _omni_op_d.update(_0_CosNotification__POA.QoSAdmin._omni_op_d)
    _omni_op_d.update(_0_CosNotifyFilter__POA.FilterAdmin._omni_op_d)

ProxySupplier._omni_skeleton = ProxySupplier
_0_CosNotifyChannelAdmin__POA.ProxySupplier = ProxySupplier
omniORB.registerSkeleton(ProxySupplier._NP_RepositoryId, ProxySupplier)
del ProxySupplier
__name__ = "CosNotifyChannelAdmin"

# interface ProxyPushConsumer
_0_CosNotifyChannelAdmin._d_ProxyPushConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ProxyPushConsumer:1.0", "ProxyPushConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyPushConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_ProxyPushConsumer
_0_CosNotifyChannelAdmin.ProxyPushConsumer = omniORB.newEmptyClass()
class ProxyPushConsumer (_0_CosNotifyChannelAdmin.ProxyConsumer, _0_CosNotifyComm.PushConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ProxyPushConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ProxyPushConsumer = ProxyPushConsumer
_0_CosNotifyChannelAdmin._tc_ProxyPushConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyPushConsumer)
omniORB.registerType(ProxyPushConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyPushConsumer, _0_CosNotifyChannelAdmin._tc_ProxyPushConsumer)

# ProxyPushConsumer operations and attributes
ProxyPushConsumer._d_connect_any_push_supplier = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PushSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# ProxyPushConsumer object reference
class _objref_ProxyPushConsumer (_0_CosNotifyChannelAdmin._objref_ProxyConsumer, _0_CosNotifyComm._objref_PushConsumer):
    _NP_RepositoryId = ProxyPushConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxyConsumer.__init__(self, obj)
        _0_CosNotifyComm._objref_PushConsumer.__init__(self, obj)

    def connect_any_push_supplier(self, *args):
        return self._obj.invoke("connect_any_push_supplier", _0_CosNotifyChannelAdmin.ProxyPushConsumer._d_connect_any_push_supplier, args)

omniORB.registerObjref(ProxyPushConsumer._NP_RepositoryId, _objref_ProxyPushConsumer)
_0_CosNotifyChannelAdmin._objref_ProxyPushConsumer = _objref_ProxyPushConsumer
del ProxyPushConsumer, _objref_ProxyPushConsumer

# ProxyPushConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ProxyPushConsumer (_0_CosNotifyChannelAdmin__POA.ProxyConsumer, _0_CosNotifyComm__POA.PushConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ProxyPushConsumer._NP_RepositoryId


    _omni_op_d = {"connect_any_push_supplier": _0_CosNotifyChannelAdmin.ProxyPushConsumer._d_connect_any_push_supplier}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxyConsumer._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.PushConsumer._omni_op_d)

ProxyPushConsumer._omni_skeleton = ProxyPushConsumer
_0_CosNotifyChannelAdmin__POA.ProxyPushConsumer = ProxyPushConsumer
omniORB.registerSkeleton(ProxyPushConsumer._NP_RepositoryId, ProxyPushConsumer)
del ProxyPushConsumer
__name__ = "CosNotifyChannelAdmin"

# interface StructuredProxyPushConsumer
_0_CosNotifyChannelAdmin._d_StructuredProxyPushConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPushConsumer:1.0", "StructuredProxyPushConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPushConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_StructuredProxyPushConsumer
_0_CosNotifyChannelAdmin.StructuredProxyPushConsumer = omniORB.newEmptyClass()
class StructuredProxyPushConsumer (_0_CosNotifyChannelAdmin.ProxyConsumer, _0_CosNotifyComm.StructuredPushConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_StructuredProxyPushConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.StructuredProxyPushConsumer = StructuredProxyPushConsumer
_0_CosNotifyChannelAdmin._tc_StructuredProxyPushConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_StructuredProxyPushConsumer)
omniORB.registerType(StructuredProxyPushConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_StructuredProxyPushConsumer, _0_CosNotifyChannelAdmin._tc_StructuredProxyPushConsumer)

# StructuredProxyPushConsumer operations and attributes
StructuredProxyPushConsumer._d_connect_structured_push_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/StructuredPushSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# StructuredProxyPushConsumer object reference
class _objref_StructuredProxyPushConsumer (_0_CosNotifyChannelAdmin._objref_ProxyConsumer, _0_CosNotifyComm._objref_StructuredPushConsumer):
    _NP_RepositoryId = StructuredProxyPushConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxyConsumer.__init__(self, obj)
        _0_CosNotifyComm._objref_StructuredPushConsumer.__init__(self, obj)

    def connect_structured_push_supplier(self, *args):
        return self._obj.invoke("connect_structured_push_supplier", _0_CosNotifyChannelAdmin.StructuredProxyPushConsumer._d_connect_structured_push_supplier, args)

omniORB.registerObjref(StructuredProxyPushConsumer._NP_RepositoryId, _objref_StructuredProxyPushConsumer)
_0_CosNotifyChannelAdmin._objref_StructuredProxyPushConsumer = _objref_StructuredProxyPushConsumer
del StructuredProxyPushConsumer, _objref_StructuredProxyPushConsumer

# StructuredProxyPushConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class StructuredProxyPushConsumer (_0_CosNotifyChannelAdmin__POA.ProxyConsumer, _0_CosNotifyComm__POA.StructuredPushConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.StructuredProxyPushConsumer._NP_RepositoryId


    _omni_op_d = {"connect_structured_push_supplier": _0_CosNotifyChannelAdmin.StructuredProxyPushConsumer._d_connect_structured_push_supplier}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxyConsumer._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.StructuredPushConsumer._omni_op_d)

StructuredProxyPushConsumer._omni_skeleton = StructuredProxyPushConsumer
_0_CosNotifyChannelAdmin__POA.StructuredProxyPushConsumer = StructuredProxyPushConsumer
omniORB.registerSkeleton(StructuredProxyPushConsumer._NP_RepositoryId, StructuredProxyPushConsumer)
del StructuredProxyPushConsumer
__name__ = "CosNotifyChannelAdmin"

# interface SequenceProxyPushConsumer
_0_CosNotifyChannelAdmin._d_SequenceProxyPushConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPushConsumer:1.0", "SequenceProxyPushConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPushConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_SequenceProxyPushConsumer
_0_CosNotifyChannelAdmin.SequenceProxyPushConsumer = omniORB.newEmptyClass()
class SequenceProxyPushConsumer (_0_CosNotifyChannelAdmin.ProxyConsumer, _0_CosNotifyComm.SequencePushConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_SequenceProxyPushConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.SequenceProxyPushConsumer = SequenceProxyPushConsumer
_0_CosNotifyChannelAdmin._tc_SequenceProxyPushConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_SequenceProxyPushConsumer)
omniORB.registerType(SequenceProxyPushConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_SequenceProxyPushConsumer, _0_CosNotifyChannelAdmin._tc_SequenceProxyPushConsumer)

# SequenceProxyPushConsumer operations and attributes
SequenceProxyPushConsumer._d_connect_sequence_push_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/SequencePushSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# SequenceProxyPushConsumer object reference
class _objref_SequenceProxyPushConsumer (_0_CosNotifyChannelAdmin._objref_ProxyConsumer, _0_CosNotifyComm._objref_SequencePushConsumer):
    _NP_RepositoryId = SequenceProxyPushConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxyConsumer.__init__(self, obj)
        _0_CosNotifyComm._objref_SequencePushConsumer.__init__(self, obj)

    def connect_sequence_push_supplier(self, *args):
        return self._obj.invoke("connect_sequence_push_supplier", _0_CosNotifyChannelAdmin.SequenceProxyPushConsumer._d_connect_sequence_push_supplier, args)

omniORB.registerObjref(SequenceProxyPushConsumer._NP_RepositoryId, _objref_SequenceProxyPushConsumer)
_0_CosNotifyChannelAdmin._objref_SequenceProxyPushConsumer = _objref_SequenceProxyPushConsumer
del SequenceProxyPushConsumer, _objref_SequenceProxyPushConsumer

# SequenceProxyPushConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class SequenceProxyPushConsumer (_0_CosNotifyChannelAdmin__POA.ProxyConsumer, _0_CosNotifyComm__POA.SequencePushConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.SequenceProxyPushConsumer._NP_RepositoryId


    _omni_op_d = {"connect_sequence_push_supplier": _0_CosNotifyChannelAdmin.SequenceProxyPushConsumer._d_connect_sequence_push_supplier}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxyConsumer._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.SequencePushConsumer._omni_op_d)

SequenceProxyPushConsumer._omni_skeleton = SequenceProxyPushConsumer
_0_CosNotifyChannelAdmin__POA.SequenceProxyPushConsumer = SequenceProxyPushConsumer
omniORB.registerSkeleton(SequenceProxyPushConsumer._NP_RepositoryId, SequenceProxyPushConsumer)
del SequenceProxyPushConsumer
__name__ = "CosNotifyChannelAdmin"

# interface ProxyPullSupplier
_0_CosNotifyChannelAdmin._d_ProxyPullSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ProxyPullSupplier:1.0", "ProxyPullSupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyPullSupplier:1.0"] = _0_CosNotifyChannelAdmin._d_ProxyPullSupplier
_0_CosNotifyChannelAdmin.ProxyPullSupplier = omniORB.newEmptyClass()
class ProxyPullSupplier (_0_CosNotifyChannelAdmin.ProxySupplier, _0_CosNotifyComm.PullSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ProxyPullSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ProxyPullSupplier = ProxyPullSupplier
_0_CosNotifyChannelAdmin._tc_ProxyPullSupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyPullSupplier)
omniORB.registerType(ProxyPullSupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyPullSupplier, _0_CosNotifyChannelAdmin._tc_ProxyPullSupplier)

# ProxyPullSupplier operations and attributes
ProxyPullSupplier._d_connect_any_pull_consumer = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PullConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# ProxyPullSupplier object reference
class _objref_ProxyPullSupplier (_0_CosNotifyChannelAdmin._objref_ProxySupplier, _0_CosNotifyComm._objref_PullSupplier):
    _NP_RepositoryId = ProxyPullSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxySupplier.__init__(self, obj)
        _0_CosNotifyComm._objref_PullSupplier.__init__(self, obj)

    def connect_any_pull_consumer(self, *args):
        return self._obj.invoke("connect_any_pull_consumer", _0_CosNotifyChannelAdmin.ProxyPullSupplier._d_connect_any_pull_consumer, args)

omniORB.registerObjref(ProxyPullSupplier._NP_RepositoryId, _objref_ProxyPullSupplier)
_0_CosNotifyChannelAdmin._objref_ProxyPullSupplier = _objref_ProxyPullSupplier
del ProxyPullSupplier, _objref_ProxyPullSupplier

# ProxyPullSupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ProxyPullSupplier (_0_CosNotifyChannelAdmin__POA.ProxySupplier, _0_CosNotifyComm__POA.PullSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ProxyPullSupplier._NP_RepositoryId


    _omni_op_d = {"connect_any_pull_consumer": _0_CosNotifyChannelAdmin.ProxyPullSupplier._d_connect_any_pull_consumer}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxySupplier._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.PullSupplier._omni_op_d)

ProxyPullSupplier._omni_skeleton = ProxyPullSupplier
_0_CosNotifyChannelAdmin__POA.ProxyPullSupplier = ProxyPullSupplier
omniORB.registerSkeleton(ProxyPullSupplier._NP_RepositoryId, ProxyPullSupplier)
del ProxyPullSupplier
__name__ = "CosNotifyChannelAdmin"

# interface StructuredProxyPullSupplier
_0_CosNotifyChannelAdmin._d_StructuredProxyPullSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPullSupplier:1.0", "StructuredProxyPullSupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPullSupplier:1.0"] = _0_CosNotifyChannelAdmin._d_StructuredProxyPullSupplier
_0_CosNotifyChannelAdmin.StructuredProxyPullSupplier = omniORB.newEmptyClass()
class StructuredProxyPullSupplier (_0_CosNotifyChannelAdmin.ProxySupplier, _0_CosNotifyComm.StructuredPullSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_StructuredProxyPullSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.StructuredProxyPullSupplier = StructuredProxyPullSupplier
_0_CosNotifyChannelAdmin._tc_StructuredProxyPullSupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_StructuredProxyPullSupplier)
omniORB.registerType(StructuredProxyPullSupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_StructuredProxyPullSupplier, _0_CosNotifyChannelAdmin._tc_StructuredProxyPullSupplier)

# StructuredProxyPullSupplier operations and attributes
StructuredProxyPullSupplier._d_connect_structured_pull_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/StructuredPullConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# StructuredProxyPullSupplier object reference
class _objref_StructuredProxyPullSupplier (_0_CosNotifyChannelAdmin._objref_ProxySupplier, _0_CosNotifyComm._objref_StructuredPullSupplier):
    _NP_RepositoryId = StructuredProxyPullSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxySupplier.__init__(self, obj)
        _0_CosNotifyComm._objref_StructuredPullSupplier.__init__(self, obj)

    def connect_structured_pull_consumer(self, *args):
        return self._obj.invoke("connect_structured_pull_consumer", _0_CosNotifyChannelAdmin.StructuredProxyPullSupplier._d_connect_structured_pull_consumer, args)

omniORB.registerObjref(StructuredProxyPullSupplier._NP_RepositoryId, _objref_StructuredProxyPullSupplier)
_0_CosNotifyChannelAdmin._objref_StructuredProxyPullSupplier = _objref_StructuredProxyPullSupplier
del StructuredProxyPullSupplier, _objref_StructuredProxyPullSupplier

# StructuredProxyPullSupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class StructuredProxyPullSupplier (_0_CosNotifyChannelAdmin__POA.ProxySupplier, _0_CosNotifyComm__POA.StructuredPullSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.StructuredProxyPullSupplier._NP_RepositoryId


    _omni_op_d = {"connect_structured_pull_consumer": _0_CosNotifyChannelAdmin.StructuredProxyPullSupplier._d_connect_structured_pull_consumer}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxySupplier._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.StructuredPullSupplier._omni_op_d)

StructuredProxyPullSupplier._omni_skeleton = StructuredProxyPullSupplier
_0_CosNotifyChannelAdmin__POA.StructuredProxyPullSupplier = StructuredProxyPullSupplier
omniORB.registerSkeleton(StructuredProxyPullSupplier._NP_RepositoryId, StructuredProxyPullSupplier)
del StructuredProxyPullSupplier
__name__ = "CosNotifyChannelAdmin"

# interface SequenceProxyPullSupplier
_0_CosNotifyChannelAdmin._d_SequenceProxyPullSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPullSupplier:1.0", "SequenceProxyPullSupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPullSupplier:1.0"] = _0_CosNotifyChannelAdmin._d_SequenceProxyPullSupplier
_0_CosNotifyChannelAdmin.SequenceProxyPullSupplier = omniORB.newEmptyClass()
class SequenceProxyPullSupplier (_0_CosNotifyChannelAdmin.ProxySupplier, _0_CosNotifyComm.SequencePullSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_SequenceProxyPullSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.SequenceProxyPullSupplier = SequenceProxyPullSupplier
_0_CosNotifyChannelAdmin._tc_SequenceProxyPullSupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_SequenceProxyPullSupplier)
omniORB.registerType(SequenceProxyPullSupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_SequenceProxyPullSupplier, _0_CosNotifyChannelAdmin._tc_SequenceProxyPullSupplier)

# SequenceProxyPullSupplier operations and attributes
SequenceProxyPullSupplier._d_connect_sequence_pull_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/SequencePullConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected})

# SequenceProxyPullSupplier object reference
class _objref_SequenceProxyPullSupplier (_0_CosNotifyChannelAdmin._objref_ProxySupplier, _0_CosNotifyComm._objref_SequencePullSupplier):
    _NP_RepositoryId = SequenceProxyPullSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxySupplier.__init__(self, obj)
        _0_CosNotifyComm._objref_SequencePullSupplier.__init__(self, obj)

    def connect_sequence_pull_consumer(self, *args):
        return self._obj.invoke("connect_sequence_pull_consumer", _0_CosNotifyChannelAdmin.SequenceProxyPullSupplier._d_connect_sequence_pull_consumer, args)

omniORB.registerObjref(SequenceProxyPullSupplier._NP_RepositoryId, _objref_SequenceProxyPullSupplier)
_0_CosNotifyChannelAdmin._objref_SequenceProxyPullSupplier = _objref_SequenceProxyPullSupplier
del SequenceProxyPullSupplier, _objref_SequenceProxyPullSupplier

# SequenceProxyPullSupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class SequenceProxyPullSupplier (_0_CosNotifyChannelAdmin__POA.ProxySupplier, _0_CosNotifyComm__POA.SequencePullSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.SequenceProxyPullSupplier._NP_RepositoryId


    _omni_op_d = {"connect_sequence_pull_consumer": _0_CosNotifyChannelAdmin.SequenceProxyPullSupplier._d_connect_sequence_pull_consumer}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxySupplier._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.SequencePullSupplier._omni_op_d)

SequenceProxyPullSupplier._omni_skeleton = SequenceProxyPullSupplier
_0_CosNotifyChannelAdmin__POA.SequenceProxyPullSupplier = SequenceProxyPullSupplier
omniORB.registerSkeleton(SequenceProxyPullSupplier._NP_RepositoryId, SequenceProxyPullSupplier)
del SequenceProxyPullSupplier
__name__ = "CosNotifyChannelAdmin"

# interface ProxyPullConsumer
_0_CosNotifyChannelAdmin._d_ProxyPullConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ProxyPullConsumer:1.0", "ProxyPullConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyPullConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_ProxyPullConsumer
_0_CosNotifyChannelAdmin.ProxyPullConsumer = omniORB.newEmptyClass()
class ProxyPullConsumer (_0_CosNotifyChannelAdmin.ProxyConsumer, _0_CosNotifyComm.PullConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ProxyPullConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ProxyPullConsumer = ProxyPullConsumer
_0_CosNotifyChannelAdmin._tc_ProxyPullConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyPullConsumer)
omniORB.registerType(ProxyPullConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyPullConsumer, _0_CosNotifyChannelAdmin._tc_ProxyPullConsumer)

# ProxyPullConsumer operations and attributes
ProxyPullConsumer._d_connect_any_pull_supplier = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PullSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})
ProxyPullConsumer._d_suspend_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})
ProxyPullConsumer._d_resume_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyActive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})

# ProxyPullConsumer object reference
class _objref_ProxyPullConsumer (_0_CosNotifyChannelAdmin._objref_ProxyConsumer, _0_CosNotifyComm._objref_PullConsumer):
    _NP_RepositoryId = ProxyPullConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxyConsumer.__init__(self, obj)
        _0_CosNotifyComm._objref_PullConsumer.__init__(self, obj)

    def connect_any_pull_supplier(self, *args):
        return self._obj.invoke("connect_any_pull_supplier", _0_CosNotifyChannelAdmin.ProxyPullConsumer._d_connect_any_pull_supplier, args)

    def suspend_connection(self, *args):
        return self._obj.invoke("suspend_connection", _0_CosNotifyChannelAdmin.ProxyPullConsumer._d_suspend_connection, args)

    def resume_connection(self, *args):
        return self._obj.invoke("resume_connection", _0_CosNotifyChannelAdmin.ProxyPullConsumer._d_resume_connection, args)

omniORB.registerObjref(ProxyPullConsumer._NP_RepositoryId, _objref_ProxyPullConsumer)
_0_CosNotifyChannelAdmin._objref_ProxyPullConsumer = _objref_ProxyPullConsumer
del ProxyPullConsumer, _objref_ProxyPullConsumer

# ProxyPullConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ProxyPullConsumer (_0_CosNotifyChannelAdmin__POA.ProxyConsumer, _0_CosNotifyComm__POA.PullConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ProxyPullConsumer._NP_RepositoryId


    _omni_op_d = {"connect_any_pull_supplier": _0_CosNotifyChannelAdmin.ProxyPullConsumer._d_connect_any_pull_supplier, "suspend_connection": _0_CosNotifyChannelAdmin.ProxyPullConsumer._d_suspend_connection, "resume_connection": _0_CosNotifyChannelAdmin.ProxyPullConsumer._d_resume_connection}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxyConsumer._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.PullConsumer._omni_op_d)

ProxyPullConsumer._omni_skeleton = ProxyPullConsumer
_0_CosNotifyChannelAdmin__POA.ProxyPullConsumer = ProxyPullConsumer
omniORB.registerSkeleton(ProxyPullConsumer._NP_RepositoryId, ProxyPullConsumer)
del ProxyPullConsumer
__name__ = "CosNotifyChannelAdmin"

# interface StructuredProxyPullConsumer
_0_CosNotifyChannelAdmin._d_StructuredProxyPullConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPullConsumer:1.0", "StructuredProxyPullConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPullConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_StructuredProxyPullConsumer
_0_CosNotifyChannelAdmin.StructuredProxyPullConsumer = omniORB.newEmptyClass()
class StructuredProxyPullConsumer (_0_CosNotifyChannelAdmin.ProxyConsumer, _0_CosNotifyComm.StructuredPullConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_StructuredProxyPullConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.StructuredProxyPullConsumer = StructuredProxyPullConsumer
_0_CosNotifyChannelAdmin._tc_StructuredProxyPullConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_StructuredProxyPullConsumer)
omniORB.registerType(StructuredProxyPullConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_StructuredProxyPullConsumer, _0_CosNotifyChannelAdmin._tc_StructuredProxyPullConsumer)

# StructuredProxyPullConsumer operations and attributes
StructuredProxyPullConsumer._d_connect_structured_pull_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/StructuredPullSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})
StructuredProxyPullConsumer._d_suspend_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})
StructuredProxyPullConsumer._d_resume_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyActive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})

# StructuredProxyPullConsumer object reference
class _objref_StructuredProxyPullConsumer (_0_CosNotifyChannelAdmin._objref_ProxyConsumer, _0_CosNotifyComm._objref_StructuredPullConsumer):
    _NP_RepositoryId = StructuredProxyPullConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxyConsumer.__init__(self, obj)
        _0_CosNotifyComm._objref_StructuredPullConsumer.__init__(self, obj)

    def connect_structured_pull_supplier(self, *args):
        return self._obj.invoke("connect_structured_pull_supplier", _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._d_connect_structured_pull_supplier, args)

    def suspend_connection(self, *args):
        return self._obj.invoke("suspend_connection", _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._d_suspend_connection, args)

    def resume_connection(self, *args):
        return self._obj.invoke("resume_connection", _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._d_resume_connection, args)

omniORB.registerObjref(StructuredProxyPullConsumer._NP_RepositoryId, _objref_StructuredProxyPullConsumer)
_0_CosNotifyChannelAdmin._objref_StructuredProxyPullConsumer = _objref_StructuredProxyPullConsumer
del StructuredProxyPullConsumer, _objref_StructuredProxyPullConsumer

# StructuredProxyPullConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class StructuredProxyPullConsumer (_0_CosNotifyChannelAdmin__POA.ProxyConsumer, _0_CosNotifyComm__POA.StructuredPullConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._NP_RepositoryId


    _omni_op_d = {"connect_structured_pull_supplier": _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._d_connect_structured_pull_supplier, "suspend_connection": _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._d_suspend_connection, "resume_connection": _0_CosNotifyChannelAdmin.StructuredProxyPullConsumer._d_resume_connection}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxyConsumer._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.StructuredPullConsumer._omni_op_d)

StructuredProxyPullConsumer._omni_skeleton = StructuredProxyPullConsumer
_0_CosNotifyChannelAdmin__POA.StructuredProxyPullConsumer = StructuredProxyPullConsumer
omniORB.registerSkeleton(StructuredProxyPullConsumer._NP_RepositoryId, StructuredProxyPullConsumer)
del StructuredProxyPullConsumer
__name__ = "CosNotifyChannelAdmin"

# interface SequenceProxyPullConsumer
_0_CosNotifyChannelAdmin._d_SequenceProxyPullConsumer = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPullConsumer:1.0", "SequenceProxyPullConsumer")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPullConsumer:1.0"] = _0_CosNotifyChannelAdmin._d_SequenceProxyPullConsumer
_0_CosNotifyChannelAdmin.SequenceProxyPullConsumer = omniORB.newEmptyClass()
class SequenceProxyPullConsumer (_0_CosNotifyChannelAdmin.ProxyConsumer, _0_CosNotifyComm.SequencePullConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_SequenceProxyPullConsumer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.SequenceProxyPullConsumer = SequenceProxyPullConsumer
_0_CosNotifyChannelAdmin._tc_SequenceProxyPullConsumer = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_SequenceProxyPullConsumer)
omniORB.registerType(SequenceProxyPullConsumer._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_SequenceProxyPullConsumer, _0_CosNotifyChannelAdmin._tc_SequenceProxyPullConsumer)

# SequenceProxyPullConsumer operations and attributes
SequenceProxyPullConsumer._d_connect_sequence_pull_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/SequencePullSupplier:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})
SequenceProxyPullConsumer._d_suspend_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})
SequenceProxyPullConsumer._d_resume_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyActive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})

# SequenceProxyPullConsumer object reference
class _objref_SequenceProxyPullConsumer (_0_CosNotifyChannelAdmin._objref_ProxyConsumer, _0_CosNotifyComm._objref_SequencePullConsumer):
    _NP_RepositoryId = SequenceProxyPullConsumer._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxyConsumer.__init__(self, obj)
        _0_CosNotifyComm._objref_SequencePullConsumer.__init__(self, obj)

    def connect_sequence_pull_supplier(self, *args):
        return self._obj.invoke("connect_sequence_pull_supplier", _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._d_connect_sequence_pull_supplier, args)

    def suspend_connection(self, *args):
        return self._obj.invoke("suspend_connection", _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._d_suspend_connection, args)

    def resume_connection(self, *args):
        return self._obj.invoke("resume_connection", _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._d_resume_connection, args)

omniORB.registerObjref(SequenceProxyPullConsumer._NP_RepositoryId, _objref_SequenceProxyPullConsumer)
_0_CosNotifyChannelAdmin._objref_SequenceProxyPullConsumer = _objref_SequenceProxyPullConsumer
del SequenceProxyPullConsumer, _objref_SequenceProxyPullConsumer

# SequenceProxyPullConsumer skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class SequenceProxyPullConsumer (_0_CosNotifyChannelAdmin__POA.ProxyConsumer, _0_CosNotifyComm__POA.SequencePullConsumer):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._NP_RepositoryId


    _omni_op_d = {"connect_sequence_pull_supplier": _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._d_connect_sequence_pull_supplier, "suspend_connection": _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._d_suspend_connection, "resume_connection": _0_CosNotifyChannelAdmin.SequenceProxyPullConsumer._d_resume_connection}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxyConsumer._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.SequencePullConsumer._omni_op_d)

SequenceProxyPullConsumer._omni_skeleton = SequenceProxyPullConsumer
_0_CosNotifyChannelAdmin__POA.SequenceProxyPullConsumer = SequenceProxyPullConsumer
omniORB.registerSkeleton(SequenceProxyPullConsumer._NP_RepositoryId, SequenceProxyPullConsumer)
del SequenceProxyPullConsumer
__name__ = "CosNotifyChannelAdmin"

# interface ProxyPushSupplier
_0_CosNotifyChannelAdmin._d_ProxyPushSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ProxyPushSupplier:1.0", "ProxyPushSupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyPushSupplier:1.0"] = _0_CosNotifyChannelAdmin._d_ProxyPushSupplier
_0_CosNotifyChannelAdmin.ProxyPushSupplier = omniORB.newEmptyClass()
class ProxyPushSupplier (_0_CosNotifyChannelAdmin.ProxySupplier, _0_CosNotifyComm.PushSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ProxyPushSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ProxyPushSupplier = ProxyPushSupplier
_0_CosNotifyChannelAdmin._tc_ProxyPushSupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyPushSupplier)
omniORB.registerType(ProxyPushSupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyPushSupplier, _0_CosNotifyChannelAdmin._tc_ProxyPushSupplier)

# ProxyPushSupplier operations and attributes
ProxyPushSupplier._d_connect_any_push_consumer = ((omniORB.typeMapping["IDL:omg.org/CosEventComm/PushConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})
ProxyPushSupplier._d_suspend_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})
ProxyPushSupplier._d_resume_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyActive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})

# ProxyPushSupplier object reference
class _objref_ProxyPushSupplier (_0_CosNotifyChannelAdmin._objref_ProxySupplier, _0_CosNotifyComm._objref_PushSupplier):
    _NP_RepositoryId = ProxyPushSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxySupplier.__init__(self, obj)
        _0_CosNotifyComm._objref_PushSupplier.__init__(self, obj)

    def connect_any_push_consumer(self, *args):
        return self._obj.invoke("connect_any_push_consumer", _0_CosNotifyChannelAdmin.ProxyPushSupplier._d_connect_any_push_consumer, args)

    def suspend_connection(self, *args):
        return self._obj.invoke("suspend_connection", _0_CosNotifyChannelAdmin.ProxyPushSupplier._d_suspend_connection, args)

    def resume_connection(self, *args):
        return self._obj.invoke("resume_connection", _0_CosNotifyChannelAdmin.ProxyPushSupplier._d_resume_connection, args)

omniORB.registerObjref(ProxyPushSupplier._NP_RepositoryId, _objref_ProxyPushSupplier)
_0_CosNotifyChannelAdmin._objref_ProxyPushSupplier = _objref_ProxyPushSupplier
del ProxyPushSupplier, _objref_ProxyPushSupplier

# ProxyPushSupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ProxyPushSupplier (_0_CosNotifyChannelAdmin__POA.ProxySupplier, _0_CosNotifyComm__POA.PushSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ProxyPushSupplier._NP_RepositoryId


    _omni_op_d = {"connect_any_push_consumer": _0_CosNotifyChannelAdmin.ProxyPushSupplier._d_connect_any_push_consumer, "suspend_connection": _0_CosNotifyChannelAdmin.ProxyPushSupplier._d_suspend_connection, "resume_connection": _0_CosNotifyChannelAdmin.ProxyPushSupplier._d_resume_connection}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxySupplier._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.PushSupplier._omni_op_d)

ProxyPushSupplier._omni_skeleton = ProxyPushSupplier
_0_CosNotifyChannelAdmin__POA.ProxyPushSupplier = ProxyPushSupplier
omniORB.registerSkeleton(ProxyPushSupplier._NP_RepositoryId, ProxyPushSupplier)
del ProxyPushSupplier
__name__ = "CosNotifyChannelAdmin"

# interface StructuredProxyPushSupplier
_0_CosNotifyChannelAdmin._d_StructuredProxyPushSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPushSupplier:1.0", "StructuredProxyPushSupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/StructuredProxyPushSupplier:1.0"] = _0_CosNotifyChannelAdmin._d_StructuredProxyPushSupplier
_0_CosNotifyChannelAdmin.StructuredProxyPushSupplier = omniORB.newEmptyClass()
class StructuredProxyPushSupplier (_0_CosNotifyChannelAdmin.ProxySupplier, _0_CosNotifyComm.StructuredPushSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_StructuredProxyPushSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.StructuredProxyPushSupplier = StructuredProxyPushSupplier
_0_CosNotifyChannelAdmin._tc_StructuredProxyPushSupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_StructuredProxyPushSupplier)
omniORB.registerType(StructuredProxyPushSupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_StructuredProxyPushSupplier, _0_CosNotifyChannelAdmin._tc_StructuredProxyPushSupplier)

# StructuredProxyPushSupplier operations and attributes
StructuredProxyPushSupplier._d_connect_structured_push_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/StructuredPushConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})
StructuredProxyPushSupplier._d_suspend_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})
StructuredProxyPushSupplier._d_resume_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyActive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})

# StructuredProxyPushSupplier object reference
class _objref_StructuredProxyPushSupplier (_0_CosNotifyChannelAdmin._objref_ProxySupplier, _0_CosNotifyComm._objref_StructuredPushSupplier):
    _NP_RepositoryId = StructuredProxyPushSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxySupplier.__init__(self, obj)
        _0_CosNotifyComm._objref_StructuredPushSupplier.__init__(self, obj)

    def connect_structured_push_consumer(self, *args):
        return self._obj.invoke("connect_structured_push_consumer", _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._d_connect_structured_push_consumer, args)

    def suspend_connection(self, *args):
        return self._obj.invoke("suspend_connection", _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._d_suspend_connection, args)

    def resume_connection(self, *args):
        return self._obj.invoke("resume_connection", _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._d_resume_connection, args)

omniORB.registerObjref(StructuredProxyPushSupplier._NP_RepositoryId, _objref_StructuredProxyPushSupplier)
_0_CosNotifyChannelAdmin._objref_StructuredProxyPushSupplier = _objref_StructuredProxyPushSupplier
del StructuredProxyPushSupplier, _objref_StructuredProxyPushSupplier

# StructuredProxyPushSupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class StructuredProxyPushSupplier (_0_CosNotifyChannelAdmin__POA.ProxySupplier, _0_CosNotifyComm__POA.StructuredPushSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._NP_RepositoryId


    _omni_op_d = {"connect_structured_push_consumer": _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._d_connect_structured_push_consumer, "suspend_connection": _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._d_suspend_connection, "resume_connection": _0_CosNotifyChannelAdmin.StructuredProxyPushSupplier._d_resume_connection}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxySupplier._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.StructuredPushSupplier._omni_op_d)

StructuredProxyPushSupplier._omni_skeleton = StructuredProxyPushSupplier
_0_CosNotifyChannelAdmin__POA.StructuredProxyPushSupplier = StructuredProxyPushSupplier
omniORB.registerSkeleton(StructuredProxyPushSupplier._NP_RepositoryId, StructuredProxyPushSupplier)
del StructuredProxyPushSupplier
__name__ = "CosNotifyChannelAdmin"

# interface SequenceProxyPushSupplier
_0_CosNotifyChannelAdmin._d_SequenceProxyPushSupplier = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPushSupplier:1.0", "SequenceProxyPushSupplier")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SequenceProxyPushSupplier:1.0"] = _0_CosNotifyChannelAdmin._d_SequenceProxyPushSupplier
_0_CosNotifyChannelAdmin.SequenceProxyPushSupplier = omniORB.newEmptyClass()
class SequenceProxyPushSupplier (_0_CosNotifyChannelAdmin.ProxySupplier, _0_CosNotifyComm.SequencePushSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_SequenceProxyPushSupplier[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.SequenceProxyPushSupplier = SequenceProxyPushSupplier
_0_CosNotifyChannelAdmin._tc_SequenceProxyPushSupplier = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_SequenceProxyPushSupplier)
omniORB.registerType(SequenceProxyPushSupplier._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_SequenceProxyPushSupplier, _0_CosNotifyChannelAdmin._tc_SequenceProxyPushSupplier)

# SequenceProxyPushSupplier operations and attributes
SequenceProxyPushSupplier._d_connect_sequence_push_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyComm/SequencePushConsumer:1.0"], ), (), {_0_CosEventChannelAdmin.AlreadyConnected._NP_RepositoryId: _0_CosEventChannelAdmin._d_AlreadyConnected, _0_CosEventChannelAdmin.TypeError._NP_RepositoryId: _0_CosEventChannelAdmin._d_TypeError})
SequenceProxyPushSupplier._d_suspend_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyInactive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyInactive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})
SequenceProxyPushSupplier._d_resume_connection = ((), (), {_0_CosNotifyChannelAdmin.ConnectionAlreadyActive._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ConnectionAlreadyActive, _0_CosNotifyChannelAdmin.NotConnected._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_NotConnected})

# SequenceProxyPushSupplier object reference
class _objref_SequenceProxyPushSupplier (_0_CosNotifyChannelAdmin._objref_ProxySupplier, _0_CosNotifyComm._objref_SequencePushSupplier):
    _NP_RepositoryId = SequenceProxyPushSupplier._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotifyChannelAdmin._objref_ProxySupplier.__init__(self, obj)
        _0_CosNotifyComm._objref_SequencePushSupplier.__init__(self, obj)

    def connect_sequence_push_consumer(self, *args):
        return self._obj.invoke("connect_sequence_push_consumer", _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._d_connect_sequence_push_consumer, args)

    def suspend_connection(self, *args):
        return self._obj.invoke("suspend_connection", _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._d_suspend_connection, args)

    def resume_connection(self, *args):
        return self._obj.invoke("resume_connection", _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._d_resume_connection, args)

omniORB.registerObjref(SequenceProxyPushSupplier._NP_RepositoryId, _objref_SequenceProxyPushSupplier)
_0_CosNotifyChannelAdmin._objref_SequenceProxyPushSupplier = _objref_SequenceProxyPushSupplier
del SequenceProxyPushSupplier, _objref_SequenceProxyPushSupplier

# SequenceProxyPushSupplier skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class SequenceProxyPushSupplier (_0_CosNotifyChannelAdmin__POA.ProxySupplier, _0_CosNotifyComm__POA.SequencePushSupplier):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._NP_RepositoryId


    _omni_op_d = {"connect_sequence_push_consumer": _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._d_connect_sequence_push_consumer, "suspend_connection": _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._d_suspend_connection, "resume_connection": _0_CosNotifyChannelAdmin.SequenceProxyPushSupplier._d_resume_connection}
    _omni_op_d.update(_0_CosNotifyChannelAdmin__POA.ProxySupplier._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.SequencePushSupplier._omni_op_d)

SequenceProxyPushSupplier._omni_skeleton = SequenceProxyPushSupplier
_0_CosNotifyChannelAdmin__POA.SequenceProxyPushSupplier = SequenceProxyPushSupplier
omniORB.registerSkeleton(SequenceProxyPushSupplier._NP_RepositoryId, SequenceProxyPushSupplier)
del SequenceProxyPushSupplier
__name__ = "CosNotifyChannelAdmin"

# typedef ... ProxyID
class ProxyID:
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotifyChannelAdmin.ProxyID = ProxyID
_0_CosNotifyChannelAdmin._d_ProxyID  = omniORB.tcInternal.tv_long
_0_CosNotifyChannelAdmin._ad_ProxyID = (omniORB.tcInternal.tv_alias, ProxyID._NP_RepositoryId, "ProxyID", omniORB.tcInternal.tv_long)
_0_CosNotifyChannelAdmin._tc_ProxyID = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._ad_ProxyID)
omniORB.registerType(ProxyID._NP_RepositoryId, _0_CosNotifyChannelAdmin._ad_ProxyID, _0_CosNotifyChannelAdmin._tc_ProxyID)
del ProxyID

# typedef ... ProxyIDSeq
class ProxyIDSeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ProxyIDSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotifyChannelAdmin.ProxyIDSeq = ProxyIDSeq
_0_CosNotifyChannelAdmin._d_ProxyIDSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"], 0)
_0_CosNotifyChannelAdmin._ad_ProxyIDSeq = (omniORB.tcInternal.tv_alias, ProxyIDSeq._NP_RepositoryId, "ProxyIDSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"], 0))
_0_CosNotifyChannelAdmin._tc_ProxyIDSeq = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._ad_ProxyIDSeq)
omniORB.registerType(ProxyIDSeq._NP_RepositoryId, _0_CosNotifyChannelAdmin._ad_ProxyIDSeq, _0_CosNotifyChannelAdmin._tc_ProxyIDSeq)
del ProxyIDSeq

# enum ClientType
_0_CosNotifyChannelAdmin.ANY_EVENT = omniORB.EnumItem("ANY_EVENT", 0)
_0_CosNotifyChannelAdmin.STRUCTURED_EVENT = omniORB.EnumItem("STRUCTURED_EVENT", 1)
_0_CosNotifyChannelAdmin.SEQUENCE_EVENT = omniORB.EnumItem("SEQUENCE_EVENT", 2)
_0_CosNotifyChannelAdmin.ClientType = omniORB.Enum("IDL:omg.org/CosNotifyChannelAdmin/ClientType:1.0", (_0_CosNotifyChannelAdmin.ANY_EVENT, _0_CosNotifyChannelAdmin.STRUCTURED_EVENT, _0_CosNotifyChannelAdmin.SEQUENCE_EVENT,))

_0_CosNotifyChannelAdmin._d_ClientType  = (omniORB.tcInternal.tv_enum, _0_CosNotifyChannelAdmin.ClientType._NP_RepositoryId, "ClientType", _0_CosNotifyChannelAdmin.ClientType._items)
_0_CosNotifyChannelAdmin._tc_ClientType = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ClientType)
omniORB.registerType(_0_CosNotifyChannelAdmin.ClientType._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ClientType, _0_CosNotifyChannelAdmin._tc_ClientType)

# enum InterFilterGroupOperator
_0_CosNotifyChannelAdmin.AND_OP = omniORB.EnumItem("AND_OP", 0)
_0_CosNotifyChannelAdmin.OR_OP = omniORB.EnumItem("OR_OP", 1)
_0_CosNotifyChannelAdmin.InterFilterGroupOperator = omniORB.Enum("IDL:omg.org/CosNotifyChannelAdmin/InterFilterGroupOperator:1.0", (_0_CosNotifyChannelAdmin.AND_OP, _0_CosNotifyChannelAdmin.OR_OP,))

_0_CosNotifyChannelAdmin._d_InterFilterGroupOperator  = (omniORB.tcInternal.tv_enum, _0_CosNotifyChannelAdmin.InterFilterGroupOperator._NP_RepositoryId, "InterFilterGroupOperator", _0_CosNotifyChannelAdmin.InterFilterGroupOperator._items)
_0_CosNotifyChannelAdmin._tc_InterFilterGroupOperator = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_InterFilterGroupOperator)
omniORB.registerType(_0_CosNotifyChannelAdmin.InterFilterGroupOperator._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_InterFilterGroupOperator, _0_CosNotifyChannelAdmin._tc_InterFilterGroupOperator)

# typedef ... AdminID
class AdminID:
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotifyChannelAdmin.AdminID = AdminID
_0_CosNotifyChannelAdmin._d_AdminID  = omniORB.tcInternal.tv_long
_0_CosNotifyChannelAdmin._ad_AdminID = (omniORB.tcInternal.tv_alias, AdminID._NP_RepositoryId, "AdminID", omniORB.tcInternal.tv_long)
_0_CosNotifyChannelAdmin._tc_AdminID = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._ad_AdminID)
omniORB.registerType(AdminID._NP_RepositoryId, _0_CosNotifyChannelAdmin._ad_AdminID, _0_CosNotifyChannelAdmin._tc_AdminID)
del AdminID

# typedef ... AdminIDSeq
class AdminIDSeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/AdminIDSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotifyChannelAdmin.AdminIDSeq = AdminIDSeq
_0_CosNotifyChannelAdmin._d_AdminIDSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"], 0)
_0_CosNotifyChannelAdmin._ad_AdminIDSeq = (omniORB.tcInternal.tv_alias, AdminIDSeq._NP_RepositoryId, "AdminIDSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"], 0))
_0_CosNotifyChannelAdmin._tc_AdminIDSeq = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._ad_AdminIDSeq)
omniORB.registerType(AdminIDSeq._NP_RepositoryId, _0_CosNotifyChannelAdmin._ad_AdminIDSeq, _0_CosNotifyChannelAdmin._tc_AdminIDSeq)
del AdminIDSeq

# exception AdminNotFound
_0_CosNotifyChannelAdmin.AdminNotFound = omniORB.newEmptyClass()
class AdminNotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/AdminNotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosNotifyChannelAdmin.AdminNotFound = AdminNotFound
_0_CosNotifyChannelAdmin._d_AdminNotFound  = (omniORB.tcInternal.tv_except, AdminNotFound, AdminNotFound._NP_RepositoryId, "AdminNotFound")
_0_CosNotifyChannelAdmin._tc_AdminNotFound = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_AdminNotFound)
omniORB.registerType(AdminNotFound._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_AdminNotFound, _0_CosNotifyChannelAdmin._tc_AdminNotFound)
del AdminNotFound

# exception ProxyNotFound
_0_CosNotifyChannelAdmin.ProxyNotFound = omniORB.newEmptyClass()
class ProxyNotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ProxyNotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosNotifyChannelAdmin.ProxyNotFound = ProxyNotFound
_0_CosNotifyChannelAdmin._d_ProxyNotFound  = (omniORB.tcInternal.tv_except, ProxyNotFound, ProxyNotFound._NP_RepositoryId, "ProxyNotFound")
_0_CosNotifyChannelAdmin._tc_ProxyNotFound = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ProxyNotFound)
omniORB.registerType(ProxyNotFound._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ProxyNotFound, _0_CosNotifyChannelAdmin._tc_ProxyNotFound)
del ProxyNotFound

# struct AdminLimit
_0_CosNotifyChannelAdmin.AdminLimit = omniORB.newEmptyClass()
class AdminLimit (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/AdminLimit:1.0"

    def __init__(self, name, value):
        self.name = name
        self.value = value

_0_CosNotifyChannelAdmin.AdminLimit = AdminLimit
_0_CosNotifyChannelAdmin._d_AdminLimit  = (omniORB.tcInternal.tv_struct, AdminLimit, AdminLimit._NP_RepositoryId, "AdminLimit", "name", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyName:1.0"], "value", omniORB.typeMapping["IDL:omg.org/CosNotification/PropertyValue:1.0"])
_0_CosNotifyChannelAdmin._tc_AdminLimit = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_AdminLimit)
omniORB.registerType(AdminLimit._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_AdminLimit, _0_CosNotifyChannelAdmin._tc_AdminLimit)
del AdminLimit

# exception AdminLimitExceeded
_0_CosNotifyChannelAdmin.AdminLimitExceeded = omniORB.newEmptyClass()
class AdminLimitExceeded (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/AdminLimitExceeded:1.0"

    def __init__(self, admin_property_err):
        CORBA.UserException.__init__(self, admin_property_err)
        self.admin_property_err = admin_property_err

_0_CosNotifyChannelAdmin.AdminLimitExceeded = AdminLimitExceeded
_0_CosNotifyChannelAdmin._d_AdminLimitExceeded  = (omniORB.tcInternal.tv_except, AdminLimitExceeded, AdminLimitExceeded._NP_RepositoryId, "AdminLimitExceeded", "admin_property_err", omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminLimit:1.0"])
_0_CosNotifyChannelAdmin._tc_AdminLimitExceeded = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_AdminLimitExceeded)
omniORB.registerType(AdminLimitExceeded._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_AdminLimitExceeded, _0_CosNotifyChannelAdmin._tc_AdminLimitExceeded)
del AdminLimitExceeded

# interface ConsumerAdmin
_0_CosNotifyChannelAdmin._d_ConsumerAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0", "ConsumerAdmin")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0"] = _0_CosNotifyChannelAdmin._d_ConsumerAdmin
_0_CosNotifyChannelAdmin.ConsumerAdmin = omniORB.newEmptyClass()
class ConsumerAdmin (_0_CosNotification.QoSAdmin, _0_CosNotifyComm.NotifySubscribe, _0_CosNotifyFilter.FilterAdmin, _0_CosEventChannelAdmin.ConsumerAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_ConsumerAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.ConsumerAdmin = ConsumerAdmin
_0_CosNotifyChannelAdmin._tc_ConsumerAdmin = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ConsumerAdmin)
omniORB.registerType(ConsumerAdmin._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ConsumerAdmin, _0_CosNotifyChannelAdmin._tc_ConsumerAdmin)

# ConsumerAdmin operations and attributes
ConsumerAdmin._d__get_MyID = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"],),None)
ConsumerAdmin._d__get_MyChannel = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"],),None)
ConsumerAdmin._d__get_MyOperator = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/InterFilterGroupOperator:1.0"],),None)
ConsumerAdmin._d__get_priority_filter = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),None)
ConsumerAdmin._d__set_priority_filter = ((omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),(),None)
ConsumerAdmin._d__get_lifetime_filter = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),None)
ConsumerAdmin._d__set_lifetime_filter = ((omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/MappingFilter:1.0"],),(),None)
ConsumerAdmin._d__get_pull_suppliers = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyIDSeq:1.0"],),None)
ConsumerAdmin._d__get_push_suppliers = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyIDSeq:1.0"],),None)
ConsumerAdmin._d_get_proxy_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxySupplier:1.0"], ), {_0_CosNotifyChannelAdmin.ProxyNotFound._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ProxyNotFound})
ConsumerAdmin._d_obtain_notification_pull_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ClientType:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxySupplier:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"]), {_0_CosNotifyChannelAdmin.AdminLimitExceeded._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_AdminLimitExceeded})
ConsumerAdmin._d_obtain_notification_push_supplier = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ClientType:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxySupplier:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"]), {_0_CosNotifyChannelAdmin.AdminLimitExceeded._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_AdminLimitExceeded})
ConsumerAdmin._d_destroy = ((), (), None)

# ConsumerAdmin object reference
class _objref_ConsumerAdmin (_0_CosNotification._objref_QoSAdmin, _0_CosNotifyComm._objref_NotifySubscribe, _0_CosNotifyFilter._objref_FilterAdmin, _0_CosEventChannelAdmin._objref_ConsumerAdmin):
    _NP_RepositoryId = ConsumerAdmin._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotification._objref_QoSAdmin.__init__(self, obj)
        _0_CosNotifyComm._objref_NotifySubscribe.__init__(self, obj)
        _0_CosNotifyFilter._objref_FilterAdmin.__init__(self, obj)
        _0_CosEventChannelAdmin._objref_ConsumerAdmin.__init__(self, obj)

    def _get_MyID(self, *args):
        return self._obj.invoke("_get_MyID", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_MyID, args)

    MyID = property(_get_MyID)


    def _get_MyChannel(self, *args):
        return self._obj.invoke("_get_MyChannel", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_MyChannel, args)

    MyChannel = property(_get_MyChannel)


    def _get_MyOperator(self, *args):
        return self._obj.invoke("_get_MyOperator", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_MyOperator, args)

    MyOperator = property(_get_MyOperator)


    def _get_priority_filter(self, *args):
        return self._obj.invoke("_get_priority_filter", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_priority_filter, args)

    def _set_priority_filter(self, *args):
        return self._obj.invoke("_set_priority_filter", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__set_priority_filter, args)

    priority_filter = property(_get_priority_filter, _set_priority_filter)


    def _get_lifetime_filter(self, *args):
        return self._obj.invoke("_get_lifetime_filter", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_lifetime_filter, args)

    def _set_lifetime_filter(self, *args):
        return self._obj.invoke("_set_lifetime_filter", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__set_lifetime_filter, args)

    lifetime_filter = property(_get_lifetime_filter, _set_lifetime_filter)


    def _get_pull_suppliers(self, *args):
        return self._obj.invoke("_get_pull_suppliers", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_pull_suppliers, args)

    pull_suppliers = property(_get_pull_suppliers)


    def _get_push_suppliers(self, *args):
        return self._obj.invoke("_get_push_suppliers", _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_push_suppliers, args)

    push_suppliers = property(_get_push_suppliers)


    def get_proxy_supplier(self, *args):
        return self._obj.invoke("get_proxy_supplier", _0_CosNotifyChannelAdmin.ConsumerAdmin._d_get_proxy_supplier, args)

    def obtain_notification_pull_supplier(self, *args):
        return self._obj.invoke("obtain_notification_pull_supplier", _0_CosNotifyChannelAdmin.ConsumerAdmin._d_obtain_notification_pull_supplier, args)

    def obtain_notification_push_supplier(self, *args):
        return self._obj.invoke("obtain_notification_push_supplier", _0_CosNotifyChannelAdmin.ConsumerAdmin._d_obtain_notification_push_supplier, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_CosNotifyChannelAdmin.ConsumerAdmin._d_destroy, args)

omniORB.registerObjref(ConsumerAdmin._NP_RepositoryId, _objref_ConsumerAdmin)
_0_CosNotifyChannelAdmin._objref_ConsumerAdmin = _objref_ConsumerAdmin
del ConsumerAdmin, _objref_ConsumerAdmin

# ConsumerAdmin skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class ConsumerAdmin (_0_CosNotification__POA.QoSAdmin, _0_CosNotifyComm__POA.NotifySubscribe, _0_CosNotifyFilter__POA.FilterAdmin, _0_CosEventChannelAdmin__POA.ConsumerAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.ConsumerAdmin._NP_RepositoryId


    _omni_op_d = {"_get_MyID": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_MyID, "_get_MyChannel": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_MyChannel, "_get_MyOperator": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_MyOperator, "_get_priority_filter": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_priority_filter, "_set_priority_filter": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__set_priority_filter, "_get_lifetime_filter": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_lifetime_filter, "_set_lifetime_filter": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__set_lifetime_filter, "_get_pull_suppliers": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_pull_suppliers, "_get_push_suppliers": _0_CosNotifyChannelAdmin.ConsumerAdmin._d__get_push_suppliers, "get_proxy_supplier": _0_CosNotifyChannelAdmin.ConsumerAdmin._d_get_proxy_supplier, "obtain_notification_pull_supplier": _0_CosNotifyChannelAdmin.ConsumerAdmin._d_obtain_notification_pull_supplier, "obtain_notification_push_supplier": _0_CosNotifyChannelAdmin.ConsumerAdmin._d_obtain_notification_push_supplier, "destroy": _0_CosNotifyChannelAdmin.ConsumerAdmin._d_destroy}
    _omni_op_d.update(_0_CosNotification__POA.QoSAdmin._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.NotifySubscribe._omni_op_d)
    _omni_op_d.update(_0_CosNotifyFilter__POA.FilterAdmin._omni_op_d)
    _omni_op_d.update(_0_CosEventChannelAdmin__POA.ConsumerAdmin._omni_op_d)

ConsumerAdmin._omni_skeleton = ConsumerAdmin
_0_CosNotifyChannelAdmin__POA.ConsumerAdmin = ConsumerAdmin
omniORB.registerSkeleton(ConsumerAdmin._NP_RepositoryId, ConsumerAdmin)
del ConsumerAdmin
__name__ = "CosNotifyChannelAdmin"

# interface SupplierAdmin
_0_CosNotifyChannelAdmin._d_SupplierAdmin = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0", "SupplierAdmin")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0"] = _0_CosNotifyChannelAdmin._d_SupplierAdmin
_0_CosNotifyChannelAdmin.SupplierAdmin = omniORB.newEmptyClass()
class SupplierAdmin (_0_CosNotification.QoSAdmin, _0_CosNotifyComm.NotifyPublish, _0_CosNotifyFilter.FilterAdmin, _0_CosEventChannelAdmin.SupplierAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_SupplierAdmin[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.SupplierAdmin = SupplierAdmin
_0_CosNotifyChannelAdmin._tc_SupplierAdmin = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_SupplierAdmin)
omniORB.registerType(SupplierAdmin._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_SupplierAdmin, _0_CosNotifyChannelAdmin._tc_SupplierAdmin)

# SupplierAdmin operations and attributes
SupplierAdmin._d__get_MyID = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"],),None)
SupplierAdmin._d__get_MyChannel = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"],),None)
SupplierAdmin._d__get_MyOperator = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/InterFilterGroupOperator:1.0"],),None)
SupplierAdmin._d__get_pull_consumers = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyIDSeq:1.0"],),None)
SupplierAdmin._d__get_push_consumers = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyIDSeq:1.0"],),None)
SupplierAdmin._d_get_proxy_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyConsumer:1.0"], ), {_0_CosNotifyChannelAdmin.ProxyNotFound._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ProxyNotFound})
SupplierAdmin._d_obtain_notification_pull_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ClientType:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyConsumer:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"]), {_0_CosNotifyChannelAdmin.AdminLimitExceeded._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_AdminLimitExceeded})
SupplierAdmin._d_obtain_notification_push_consumer = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ClientType:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyConsumer:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ProxyID:1.0"]), {_0_CosNotifyChannelAdmin.AdminLimitExceeded._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_AdminLimitExceeded})
SupplierAdmin._d_destroy = ((), (), None)

# SupplierAdmin object reference
class _objref_SupplierAdmin (_0_CosNotification._objref_QoSAdmin, _0_CosNotifyComm._objref_NotifyPublish, _0_CosNotifyFilter._objref_FilterAdmin, _0_CosEventChannelAdmin._objref_SupplierAdmin):
    _NP_RepositoryId = SupplierAdmin._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotification._objref_QoSAdmin.__init__(self, obj)
        _0_CosNotifyComm._objref_NotifyPublish.__init__(self, obj)
        _0_CosNotifyFilter._objref_FilterAdmin.__init__(self, obj)
        _0_CosEventChannelAdmin._objref_SupplierAdmin.__init__(self, obj)

    def _get_MyID(self, *args):
        return self._obj.invoke("_get_MyID", _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_MyID, args)

    MyID = property(_get_MyID)


    def _get_MyChannel(self, *args):
        return self._obj.invoke("_get_MyChannel", _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_MyChannel, args)

    MyChannel = property(_get_MyChannel)


    def _get_MyOperator(self, *args):
        return self._obj.invoke("_get_MyOperator", _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_MyOperator, args)

    MyOperator = property(_get_MyOperator)


    def _get_pull_consumers(self, *args):
        return self._obj.invoke("_get_pull_consumers", _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_pull_consumers, args)

    pull_consumers = property(_get_pull_consumers)


    def _get_push_consumers(self, *args):
        return self._obj.invoke("_get_push_consumers", _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_push_consumers, args)

    push_consumers = property(_get_push_consumers)


    def get_proxy_consumer(self, *args):
        return self._obj.invoke("get_proxy_consumer", _0_CosNotifyChannelAdmin.SupplierAdmin._d_get_proxy_consumer, args)

    def obtain_notification_pull_consumer(self, *args):
        return self._obj.invoke("obtain_notification_pull_consumer", _0_CosNotifyChannelAdmin.SupplierAdmin._d_obtain_notification_pull_consumer, args)

    def obtain_notification_push_consumer(self, *args):
        return self._obj.invoke("obtain_notification_push_consumer", _0_CosNotifyChannelAdmin.SupplierAdmin._d_obtain_notification_push_consumer, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_CosNotifyChannelAdmin.SupplierAdmin._d_destroy, args)

omniORB.registerObjref(SupplierAdmin._NP_RepositoryId, _objref_SupplierAdmin)
_0_CosNotifyChannelAdmin._objref_SupplierAdmin = _objref_SupplierAdmin
del SupplierAdmin, _objref_SupplierAdmin

# SupplierAdmin skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class SupplierAdmin (_0_CosNotification__POA.QoSAdmin, _0_CosNotifyComm__POA.NotifyPublish, _0_CosNotifyFilter__POA.FilterAdmin, _0_CosEventChannelAdmin__POA.SupplierAdmin):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.SupplierAdmin._NP_RepositoryId


    _omni_op_d = {"_get_MyID": _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_MyID, "_get_MyChannel": _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_MyChannel, "_get_MyOperator": _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_MyOperator, "_get_pull_consumers": _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_pull_consumers, "_get_push_consumers": _0_CosNotifyChannelAdmin.SupplierAdmin._d__get_push_consumers, "get_proxy_consumer": _0_CosNotifyChannelAdmin.SupplierAdmin._d_get_proxy_consumer, "obtain_notification_pull_consumer": _0_CosNotifyChannelAdmin.SupplierAdmin._d_obtain_notification_pull_consumer, "obtain_notification_push_consumer": _0_CosNotifyChannelAdmin.SupplierAdmin._d_obtain_notification_push_consumer, "destroy": _0_CosNotifyChannelAdmin.SupplierAdmin._d_destroy}
    _omni_op_d.update(_0_CosNotification__POA.QoSAdmin._omni_op_d)
    _omni_op_d.update(_0_CosNotifyComm__POA.NotifyPublish._omni_op_d)
    _omni_op_d.update(_0_CosNotifyFilter__POA.FilterAdmin._omni_op_d)
    _omni_op_d.update(_0_CosEventChannelAdmin__POA.SupplierAdmin._omni_op_d)

SupplierAdmin._omni_skeleton = SupplierAdmin
_0_CosNotifyChannelAdmin__POA.SupplierAdmin = SupplierAdmin
omniORB.registerSkeleton(SupplierAdmin._NP_RepositoryId, SupplierAdmin)
del SupplierAdmin
__name__ = "CosNotifyChannelAdmin"

# interface EventChannel
_0_CosNotifyChannelAdmin._d_EventChannel = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0", "EventChannel")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"] = _0_CosNotifyChannelAdmin._d_EventChannel
_0_CosNotifyChannelAdmin.EventChannel = omniORB.newEmptyClass()
class EventChannel (_0_CosNotification.QoSAdmin, _0_CosNotification.AdminPropertiesAdmin, _0_CosEventChannelAdmin.EventChannel):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_EventChannel[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.EventChannel = EventChannel
_0_CosNotifyChannelAdmin._tc_EventChannel = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_EventChannel)
omniORB.registerType(EventChannel._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_EventChannel, _0_CosNotifyChannelAdmin._tc_EventChannel)

# EventChannel operations and attributes
EventChannel._d__get_MyFactory = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannelFactory:1.0"],),None)
EventChannel._d__get_default_consumer_admin = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0"],),None)
EventChannel._d__get_default_supplier_admin = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0"],),None)
EventChannel._d__get_default_filter_factory = ((),(omniORB.typeMapping["IDL:omg.org/CosNotifyFilter/FilterFactory:1.0"],),None)
EventChannel._d_new_for_consumers = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/InterFilterGroupOperator:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"]), None)
EventChannel._d_new_for_suppliers = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/InterFilterGroupOperator:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"]), None)
EventChannel._d_get_consumeradmin = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ConsumerAdmin:1.0"], ), {_0_CosNotifyChannelAdmin.AdminNotFound._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_AdminNotFound})
EventChannel._d_get_supplieradmin = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminID:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/SupplierAdmin:1.0"], ), {_0_CosNotifyChannelAdmin.AdminNotFound._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_AdminNotFound})
EventChannel._d_get_all_consumeradmins = ((), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminIDSeq:1.0"], ), None)
EventChannel._d_get_all_supplieradmins = ((), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/AdminIDSeq:1.0"], ), None)

# EventChannel object reference
class _objref_EventChannel (_0_CosNotification._objref_QoSAdmin, _0_CosNotification._objref_AdminPropertiesAdmin, _0_CosEventChannelAdmin._objref_EventChannel):
    _NP_RepositoryId = EventChannel._NP_RepositoryId

    def __init__(self, obj):
        _0_CosNotification._objref_QoSAdmin.__init__(self, obj)
        _0_CosNotification._objref_AdminPropertiesAdmin.__init__(self, obj)
        _0_CosEventChannelAdmin._objref_EventChannel.__init__(self, obj)

    def _get_MyFactory(self, *args):
        return self._obj.invoke("_get_MyFactory", _0_CosNotifyChannelAdmin.EventChannel._d__get_MyFactory, args)

    MyFactory = property(_get_MyFactory)


    def _get_default_consumer_admin(self, *args):
        return self._obj.invoke("_get_default_consumer_admin", _0_CosNotifyChannelAdmin.EventChannel._d__get_default_consumer_admin, args)

    default_consumer_admin = property(_get_default_consumer_admin)


    def _get_default_supplier_admin(self, *args):
        return self._obj.invoke("_get_default_supplier_admin", _0_CosNotifyChannelAdmin.EventChannel._d__get_default_supplier_admin, args)

    default_supplier_admin = property(_get_default_supplier_admin)


    def _get_default_filter_factory(self, *args):
        return self._obj.invoke("_get_default_filter_factory", _0_CosNotifyChannelAdmin.EventChannel._d__get_default_filter_factory, args)

    default_filter_factory = property(_get_default_filter_factory)


    def new_for_consumers(self, *args):
        return self._obj.invoke("new_for_consumers", _0_CosNotifyChannelAdmin.EventChannel._d_new_for_consumers, args)

    def new_for_suppliers(self, *args):
        return self._obj.invoke("new_for_suppliers", _0_CosNotifyChannelAdmin.EventChannel._d_new_for_suppliers, args)

    def get_consumeradmin(self, *args):
        return self._obj.invoke("get_consumeradmin", _0_CosNotifyChannelAdmin.EventChannel._d_get_consumeradmin, args)

    def get_supplieradmin(self, *args):
        return self._obj.invoke("get_supplieradmin", _0_CosNotifyChannelAdmin.EventChannel._d_get_supplieradmin, args)

    def get_all_consumeradmins(self, *args):
        return self._obj.invoke("get_all_consumeradmins", _0_CosNotifyChannelAdmin.EventChannel._d_get_all_consumeradmins, args)

    def get_all_supplieradmins(self, *args):
        return self._obj.invoke("get_all_supplieradmins", _0_CosNotifyChannelAdmin.EventChannel._d_get_all_supplieradmins, args)

omniORB.registerObjref(EventChannel._NP_RepositoryId, _objref_EventChannel)
_0_CosNotifyChannelAdmin._objref_EventChannel = _objref_EventChannel
del EventChannel, _objref_EventChannel

# EventChannel skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class EventChannel (_0_CosNotification__POA.QoSAdmin, _0_CosNotification__POA.AdminPropertiesAdmin, _0_CosEventChannelAdmin__POA.EventChannel):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.EventChannel._NP_RepositoryId


    _omni_op_d = {"_get_MyFactory": _0_CosNotifyChannelAdmin.EventChannel._d__get_MyFactory, "_get_default_consumer_admin": _0_CosNotifyChannelAdmin.EventChannel._d__get_default_consumer_admin, "_get_default_supplier_admin": _0_CosNotifyChannelAdmin.EventChannel._d__get_default_supplier_admin, "_get_default_filter_factory": _0_CosNotifyChannelAdmin.EventChannel._d__get_default_filter_factory, "new_for_consumers": _0_CosNotifyChannelAdmin.EventChannel._d_new_for_consumers, "new_for_suppliers": _0_CosNotifyChannelAdmin.EventChannel._d_new_for_suppliers, "get_consumeradmin": _0_CosNotifyChannelAdmin.EventChannel._d_get_consumeradmin, "get_supplieradmin": _0_CosNotifyChannelAdmin.EventChannel._d_get_supplieradmin, "get_all_consumeradmins": _0_CosNotifyChannelAdmin.EventChannel._d_get_all_consumeradmins, "get_all_supplieradmins": _0_CosNotifyChannelAdmin.EventChannel._d_get_all_supplieradmins}
    _omni_op_d.update(_0_CosNotification__POA.QoSAdmin._omni_op_d)
    _omni_op_d.update(_0_CosNotification__POA.AdminPropertiesAdmin._omni_op_d)
    _omni_op_d.update(_0_CosEventChannelAdmin__POA.EventChannel._omni_op_d)

EventChannel._omni_skeleton = EventChannel
_0_CosNotifyChannelAdmin__POA.EventChannel = EventChannel
omniORB.registerSkeleton(EventChannel._NP_RepositoryId, EventChannel)
del EventChannel
__name__ = "CosNotifyChannelAdmin"

# typedef ... ChannelID
class ChannelID:
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ChannelID:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotifyChannelAdmin.ChannelID = ChannelID
_0_CosNotifyChannelAdmin._d_ChannelID  = omniORB.tcInternal.tv_long
_0_CosNotifyChannelAdmin._ad_ChannelID = (omniORB.tcInternal.tv_alias, ChannelID._NP_RepositoryId, "ChannelID", omniORB.tcInternal.tv_long)
_0_CosNotifyChannelAdmin._tc_ChannelID = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._ad_ChannelID)
omniORB.registerType(ChannelID._NP_RepositoryId, _0_CosNotifyChannelAdmin._ad_ChannelID, _0_CosNotifyChannelAdmin._tc_ChannelID)
del ChannelID

# typedef ... ChannelIDSeq
class ChannelIDSeq:
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ChannelIDSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_CosNotifyChannelAdmin.ChannelIDSeq = ChannelIDSeq
_0_CosNotifyChannelAdmin._d_ChannelIDSeq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ChannelID:1.0"], 0)
_0_CosNotifyChannelAdmin._ad_ChannelIDSeq = (omniORB.tcInternal.tv_alias, ChannelIDSeq._NP_RepositoryId, "ChannelIDSeq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ChannelID:1.0"], 0))
_0_CosNotifyChannelAdmin._tc_ChannelIDSeq = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._ad_ChannelIDSeq)
omniORB.registerType(ChannelIDSeq._NP_RepositoryId, _0_CosNotifyChannelAdmin._ad_ChannelIDSeq, _0_CosNotifyChannelAdmin._tc_ChannelIDSeq)
del ChannelIDSeq

# exception ChannelNotFound
_0_CosNotifyChannelAdmin.ChannelNotFound = omniORB.newEmptyClass()
class ChannelNotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:omg.org/CosNotifyChannelAdmin/ChannelNotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CosNotifyChannelAdmin.ChannelNotFound = ChannelNotFound
_0_CosNotifyChannelAdmin._d_ChannelNotFound  = (omniORB.tcInternal.tv_except, ChannelNotFound, ChannelNotFound._NP_RepositoryId, "ChannelNotFound")
_0_CosNotifyChannelAdmin._tc_ChannelNotFound = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_ChannelNotFound)
omniORB.registerType(ChannelNotFound._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_ChannelNotFound, _0_CosNotifyChannelAdmin._tc_ChannelNotFound)
del ChannelNotFound

# interface EventChannelFactory
_0_CosNotifyChannelAdmin._d_EventChannelFactory = (omniORB.tcInternal.tv_objref, "IDL:omg.org/CosNotifyChannelAdmin/EventChannelFactory:1.0", "EventChannelFactory")
omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannelFactory:1.0"] = _0_CosNotifyChannelAdmin._d_EventChannelFactory
_0_CosNotifyChannelAdmin.EventChannelFactory = omniORB.newEmptyClass()
class EventChannelFactory :
    _NP_RepositoryId = _0_CosNotifyChannelAdmin._d_EventChannelFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CosNotifyChannelAdmin.EventChannelFactory = EventChannelFactory
_0_CosNotifyChannelAdmin._tc_EventChannelFactory = omniORB.tcInternal.createTypeCode(_0_CosNotifyChannelAdmin._d_EventChannelFactory)
omniORB.registerType(EventChannelFactory._NP_RepositoryId, _0_CosNotifyChannelAdmin._d_EventChannelFactory, _0_CosNotifyChannelAdmin._tc_EventChannelFactory)

# EventChannelFactory operations and attributes
EventChannelFactory._d_create_channel = ((omniORB.typeMapping["IDL:omg.org/CosNotification/QoSProperties:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotification/AdminProperties:1.0"]), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"], omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ChannelID:1.0"]), {_0_CosNotification.UnsupportedQoS._NP_RepositoryId: _0_CosNotification._d_UnsupportedQoS, _0_CosNotification.UnsupportedAdmin._NP_RepositoryId: _0_CosNotification._d_UnsupportedAdmin})
EventChannelFactory._d_get_all_channels = ((), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ChannelIDSeq:1.0"], ), None)
EventChannelFactory._d_get_event_channel = ((omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/ChannelID:1.0"], ), (omniORB.typeMapping["IDL:omg.org/CosNotifyChannelAdmin/EventChannel:1.0"], ), {_0_CosNotifyChannelAdmin.ChannelNotFound._NP_RepositoryId: _0_CosNotifyChannelAdmin._d_ChannelNotFound})

# EventChannelFactory object reference
class _objref_EventChannelFactory (CORBA.Object):
    _NP_RepositoryId = EventChannelFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def create_channel(self, *args):
        return self._obj.invoke("create_channel", _0_CosNotifyChannelAdmin.EventChannelFactory._d_create_channel, args)

    def get_all_channels(self, *args):
        return self._obj.invoke("get_all_channels", _0_CosNotifyChannelAdmin.EventChannelFactory._d_get_all_channels, args)

    def get_event_channel(self, *args):
        return self._obj.invoke("get_event_channel", _0_CosNotifyChannelAdmin.EventChannelFactory._d_get_event_channel, args)

omniORB.registerObjref(EventChannelFactory._NP_RepositoryId, _objref_EventChannelFactory)
_0_CosNotifyChannelAdmin._objref_EventChannelFactory = _objref_EventChannelFactory
del EventChannelFactory, _objref_EventChannelFactory

# EventChannelFactory skeleton
__name__ = "CosNotifyChannelAdmin__POA"
class EventChannelFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_CosNotifyChannelAdmin.EventChannelFactory._NP_RepositoryId


    _omni_op_d = {"create_channel": _0_CosNotifyChannelAdmin.EventChannelFactory._d_create_channel, "get_all_channels": _0_CosNotifyChannelAdmin.EventChannelFactory._d_get_all_channels, "get_event_channel": _0_CosNotifyChannelAdmin.EventChannelFactory._d_get_event_channel}

EventChannelFactory._omni_skeleton = EventChannelFactory
_0_CosNotifyChannelAdmin__POA.EventChannelFactory = EventChannelFactory
omniORB.registerSkeleton(EventChannelFactory._NP_RepositoryId, EventChannelFactory)
del EventChannelFactory
__name__ = "CosNotifyChannelAdmin"

#
# End of module "CosNotifyChannelAdmin"
#
__name__ = "CosNotifyChannelAdmin_idl"

_exported_modules = ( "CosNotifyChannelAdmin", )

# The end.
